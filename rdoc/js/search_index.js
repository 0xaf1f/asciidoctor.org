var search_data = {"index":{"searchIndex":["asciidoctor","abstractblock","abstractnode","attributelist","basetemplate","block","callouts","cli","invoker","options","debug","docbook45","blockadmonitiontemplate","blockaudiotemplate","blockcolisttemplate","blockdlisttemplate","blockexampletemplate","blockfloatingtitletemplate","blockimagetemplate","blocklistingtemplate","blockliteraltemplate","blockolisttemplate","blockopentemplate","blockpagebreaktemplate","blockparagraphtemplate","blockpasstemplate","blockpreambletemplate","blockquotetemplate","blockrulertemplate","blocksidebartemplate","blocktabletemplate","blocktoctemplate","blockulisttemplate","blockversetemplate","blockvideotemplate","documenttemplate","embeddedtemplate","inlineanchortemplate","inlinebreaktemplate","inlinebuttontemplate","inlinecallouttemplate","inlinefootnotetemplate","inlineimagetemplate","inlineindextermtemplate","inlinekbdtemplate","inlinemenutemplate","inlinequotedtemplate","sectiontemplate","document","emptytemplate","html5","blockadmonitiontemplate","blockaudiotemplate","blockcolisttemplate","blockdlisttemplate","blockexampletemplate","blockfloatingtitletemplate","blockimagetemplate","blocklistingtemplate","blockliteraltemplate","blockolisttemplate","blockopentemplate","blockpagebreaktemplate","blockparagraphtemplate","blockpasstemplate","blockpreambletemplate","blockquotetemplate","blockrulertemplate","blocksidebartemplate","blocktabletemplate","blocktoctemplate","blockulisttemplate","blockversetemplate","blockvideotemplate","documenttemplate","embeddedtemplate","inlineanchortemplate","inlinebreaktemplate","inlinebuttontemplate","inlinecallouttemplate","inlinefootnotetemplate","inlineimagetemplate","inlineindextermtemplate","inlinekbdtemplate","inlinemenutemplate","inlinequotedtemplate","sectiontemplate","helpers","inline","lexer","listitem","pathresolver","reader","renderer","safemode","section","substituters","table","cell","column","parsercontext","<<()","[]()","activate_rowspan()","advance()","advance()","anchor()","anchor()","apply_attribute_value_subs()","apply_header_subs()","apply_literal_subs()","apply_normal_subs()","apply_para_subs()","apply_passthrough_subs()","apply_subs()","apply_title_subs()","assign_caption()","assign_index()","assign_width()","attr()","attr?()","attribute()","attribute_locked?()","attrvalue()","author()","backend()","blocks?()","buffer_has_unclosed_quotes?()","buffer_quoted?()","build_block()","callout_ids()","camelcase_to_underscore()","catalog_callouts()","catalog_inline_anchors()","cell_closed?()","cell_open?()","chomp_last!()","clear_blocks()","clear_playback_attributes()","close_cell()","close_open_cell()","close_row()","common_attrs()","common_attrs_erb()","compact()","consume_comments()","consume_line_comments()","content()","content()","content()","content()","content()","content()","content_erb()","counter()","counter_increment()","create_columns()","current_list()","debug()","default_asciidoctor_stylesheet()","default_coderay_stylesheet()","delete_at()","delete_attribute()","docinfo()","docinfo()","doctitle()","doctype()","effective_col_visits()","embedded?()","empty?()","encode_uri()","end_of_row?()","expand_path()","extract_passthroughs()","extract_view_mapping()","first_section()","fold_first()","footnotes()","footnotes?()","generate_callout_id()","generate_data_uri()","generate_id()","generate_next_callout_id()","get_binding()","get_line()","grab_lines_for_list_item()","grab_lines_until()","has_header?()","has_more_lines?()","header_row?()","highlight_source()","icon_uri()","id()","image_uri()","inherited()","initialize_section()","insert()","invoke!()","is_delimited_block?()","is_next_line_document_title?()","is_next_line_section?()","is_root?()","is_section_title?()","is_sibling_list_item?()","is_single_line_section_title?()","is_two_line_section_title?()","is_web_root?()","join_path()","keep_cell_open()","lines()","load()","load_eruby()","load_file()","mark_cell_closed()","match_delimiter()","media_uri()","menu()","menu()","mkdir_p()","name()","nested?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_block()","next_labeled_list()","next_list()","next_list_item()","next_outline_list()","next_section()","next_table()","nextval()","noheader()","normalize_asset_path()","normalize_data()","normalize_include_data()","normalize_system_path()","normalize_web_path()","notitle()","open_block()","open_block()","outline()","paragraph()","paragraph()","parse()","parse()","parse!()","parse!()","parse_attribute()","parse_attribute_value()","parse_attributes()","parse_block_metadata_line()","parse_block_metadata_lines()","parse_cell_spec()","parse_col_specs()","parse_document_header()","parse_header_metadata()","parse_into()","parse_section_title()","parse_style_attribute()","partition_header_footer()","partition_path()","peek_line()","peek_lines()","playback_attributes()","posixfy()","preprocess_conditional_inclusion()","preprocess_include()","preprocess_next_line()","preserve_endlines()","process_attribute_entries()","process_attribute_entry()","process_authors()","push_cell_spec()","puts_indented()","quote_text()","quote_text()","read_asset()","read_error()","read_next_id()","read_output()","redirect_streams()","register()","register()","reindex_sections()","rekey()","rekey()","render()","render()","render()","render()","render()","render()","render()","render()","render_file()","renderer()","renderer()","require_library()","reset_block_indent!()","reset_streams()","resolve_expr_val()","resolve_list_marker()","resolve_ordered_list_marker()","resolve_subs()","restore_attributes()","restore_passthroughs()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","result()","revdate()","rewind()","role_class()","roman_numeral_to_int()","sanitize_attribute_name()","sanitize_attribute_name()","save_attributes()","scan_name()","scan_to_delimiter()","scan_to_quote()","section_level()","sections()","sectnum()","set_attr()","set_attribute()","set_debug()","show_debug_output?()","single_line_section_level()","size()","skip_blank()","skip_blank_lines()","skip_comment_lines()","skip_delimiter()","skip_matched_delimiter()","source()","source_lines()","starts_with_delimiter?()","store_attribute()","style_class()","sub_attributes()","sub_callouts()","sub_macros()","sub_post_replacements()","sub_quotes()","sub_replacements()","sub_specialcharacters()","system_path()","tag()","take_cell_spec()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template()","template_classes()","text()","text()","text?()","title()","title()","title=()","title?()","title_div()","title_tag()","title_tags()","to_s()","to_s()","to_s()","to_s()","to_s()","toc()","transform_quoted_text()","unescape_bracketed_text()","unshift()","unshift_line()","update_attributes()","update_backend_attributes()","views()","web_path()","readme.adoc"],"longSearchIndex":["asciidoctor","asciidoctor::abstractblock","asciidoctor::abstractnode","asciidoctor::attributelist","asciidoctor::basetemplate","asciidoctor::block","asciidoctor::callouts","asciidoctor::cli","asciidoctor::cli::invoker","asciidoctor::cli::options","asciidoctor::debug","asciidoctor::docbook45","asciidoctor::docbook45::blockadmonitiontemplate","asciidoctor::docbook45::blockaudiotemplate","asciidoctor::docbook45::blockcolisttemplate","asciidoctor::docbook45::blockdlisttemplate","asciidoctor::docbook45::blockexampletemplate","asciidoctor::docbook45::blockfloatingtitletemplate","asciidoctor::docbook45::blockimagetemplate","asciidoctor::docbook45::blocklistingtemplate","asciidoctor::docbook45::blockliteraltemplate","asciidoctor::docbook45::blockolisttemplate","asciidoctor::docbook45::blockopentemplate","asciidoctor::docbook45::blockpagebreaktemplate","asciidoctor::docbook45::blockparagraphtemplate","asciidoctor::docbook45::blockpasstemplate","asciidoctor::docbook45::blockpreambletemplate","asciidoctor::docbook45::blockquotetemplate","asciidoctor::docbook45::blockrulertemplate","asciidoctor::docbook45::blocksidebartemplate","asciidoctor::docbook45::blocktabletemplate","asciidoctor::docbook45::blocktoctemplate","asciidoctor::docbook45::blockulisttemplate","asciidoctor::docbook45::blockversetemplate","asciidoctor::docbook45::blockvideotemplate","asciidoctor::docbook45::documenttemplate","asciidoctor::docbook45::embeddedtemplate","asciidoctor::docbook45::inlineanchortemplate","asciidoctor::docbook45::inlinebreaktemplate","asciidoctor::docbook45::inlinebuttontemplate","asciidoctor::docbook45::inlinecallouttemplate","asciidoctor::docbook45::inlinefootnotetemplate","asciidoctor::docbook45::inlineimagetemplate","asciidoctor::docbook45::inlineindextermtemplate","asciidoctor::docbook45::inlinekbdtemplate","asciidoctor::docbook45::inlinemenutemplate","asciidoctor::docbook45::inlinequotedtemplate","asciidoctor::docbook45::sectiontemplate","asciidoctor::document","asciidoctor::emptytemplate","asciidoctor::html5","asciidoctor::html5::blockadmonitiontemplate","asciidoctor::html5::blockaudiotemplate","asciidoctor::html5::blockcolisttemplate","asciidoctor::html5::blockdlisttemplate","asciidoctor::html5::blockexampletemplate","asciidoctor::html5::blockfloatingtitletemplate","asciidoctor::html5::blockimagetemplate","asciidoctor::html5::blocklistingtemplate","asciidoctor::html5::blockliteraltemplate","asciidoctor::html5::blockolisttemplate","asciidoctor::html5::blockopentemplate","asciidoctor::html5::blockpagebreaktemplate","asciidoctor::html5::blockparagraphtemplate","asciidoctor::html5::blockpasstemplate","asciidoctor::html5::blockpreambletemplate","asciidoctor::html5::blockquotetemplate","asciidoctor::html5::blockrulertemplate","asciidoctor::html5::blocksidebartemplate","asciidoctor::html5::blocktabletemplate","asciidoctor::html5::blocktoctemplate","asciidoctor::html5::blockulisttemplate","asciidoctor::html5::blockversetemplate","asciidoctor::html5::blockvideotemplate","asciidoctor::html5::documenttemplate","asciidoctor::html5::embeddedtemplate","asciidoctor::html5::inlineanchortemplate","asciidoctor::html5::inlinebreaktemplate","asciidoctor::html5::inlinebuttontemplate","asciidoctor::html5::inlinecallouttemplate","asciidoctor::html5::inlinefootnotetemplate","asciidoctor::html5::inlineimagetemplate","asciidoctor::html5::inlineindextermtemplate","asciidoctor::html5::inlinekbdtemplate","asciidoctor::html5::inlinemenutemplate","asciidoctor::html5::inlinequotedtemplate","asciidoctor::html5::sectiontemplate","asciidoctor::helpers","asciidoctor::inline","asciidoctor::lexer","asciidoctor::listitem","asciidoctor::pathresolver","asciidoctor::reader","asciidoctor::renderer","asciidoctor::safemode","asciidoctor::section","asciidoctor::substituters","asciidoctor::table","asciidoctor::table::cell","asciidoctor::table::column","asciidoctor::table::parsercontext","asciidoctor::abstractblock#<<()","asciidoctor::abstractblock#[]()","asciidoctor::table::parsercontext#activate_rowspan()","asciidoctor::reader#advance()","asciidoctor::table::parsercontext#advance()","asciidoctor::docbook45::inlineanchortemplate#anchor()","asciidoctor::html5::inlineanchortemplate#anchor()","asciidoctor::document#apply_attribute_value_subs()","asciidoctor::substituters#apply_header_subs()","asciidoctor::substituters#apply_literal_subs()","asciidoctor::substituters#apply_normal_subs()","asciidoctor::substituters#apply_para_subs()","asciidoctor::substituters#apply_passthrough_subs()","asciidoctor::substituters#apply_subs()","asciidoctor::substituters#apply_title_subs()","asciidoctor::abstractblock#assign_caption()","asciidoctor::abstractblock#assign_index()","asciidoctor::table::column#assign_width()","asciidoctor::abstractnode#attr()","asciidoctor::abstractnode#attr?()","asciidoctor::basetemplate#attribute()","asciidoctor::document#attribute_locked?()","asciidoctor::basetemplate#attrvalue()","asciidoctor::document#author()","asciidoctor::document#backend()","asciidoctor::abstractblock#blocks?()","asciidoctor::table::parsercontext#buffer_has_unclosed_quotes?()","asciidoctor::table::parsercontext#buffer_quoted?()","asciidoctor::lexer::build_block()","asciidoctor::callouts#callout_ids()","asciidoctor::renderer::camelcase_to_underscore()","asciidoctor::lexer::catalog_callouts()","asciidoctor::lexer::catalog_inline_anchors()","asciidoctor::table::parsercontext#cell_closed?()","asciidoctor::table::parsercontext#cell_open?()","asciidoctor::reader#chomp_last!()","asciidoctor::abstractblock#clear_blocks()","asciidoctor::document#clear_playback_attributes()","asciidoctor::table::parsercontext#close_cell()","asciidoctor::table::parsercontext#close_open_cell()","asciidoctor::table::parsercontext#close_row()","asciidoctor::basetemplate#common_attrs()","asciidoctor::basetemplate#common_attrs_erb()","asciidoctor::basetemplate#compact()","asciidoctor::reader#consume_comments()","asciidoctor::reader#consume_line_comments()","asciidoctor::basetemplate#content()","asciidoctor::block#content()","asciidoctor::document#content()","asciidoctor::listitem#content()","asciidoctor::section#content()","asciidoctor::table::cell#content()","asciidoctor::basetemplate#content_erb()","asciidoctor::document#counter()","asciidoctor::document#counter_increment()","asciidoctor::table#create_columns()","asciidoctor::callouts#current_list()","asciidoctor::debug::debug()","asciidoctor::html5::default_asciidoctor_stylesheet()","asciidoctor::html5::default_coderay_stylesheet()","asciidoctor::abstractblock#delete_at()","asciidoctor::document#delete_attribute()","asciidoctor::docbook45::documenttemplate#docinfo()","asciidoctor::document#docinfo()","asciidoctor::document#doctitle()","asciidoctor::document#doctype()","asciidoctor::table::parsercontext#effective_col_visits()","asciidoctor::document#embedded?()","asciidoctor::reader#empty?()","asciidoctor::helpers::encode_uri()","asciidoctor::table::parsercontext#end_of_row?()","asciidoctor::pathresolver#expand_path()","asciidoctor::substituters#extract_passthroughs()","asciidoctor::renderer::extract_view_mapping()","asciidoctor::document#first_section()","asciidoctor::listitem#fold_first()","asciidoctor::document#footnotes()","asciidoctor::document#footnotes?()","asciidoctor::callouts#generate_callout_id()","asciidoctor::abstractnode#generate_data_uri()","asciidoctor::section#generate_id()","asciidoctor::callouts#generate_next_callout_id()","asciidoctor::abstractnode#get_binding()","asciidoctor::reader#get_line()","asciidoctor::lexer::grab_lines_for_list_item()","asciidoctor::reader#grab_lines_until()","asciidoctor::document#has_header?()","asciidoctor::reader#has_more_lines?()","asciidoctor::table#header_row?()","asciidoctor::substituters#highlight_source()","asciidoctor::abstractnode#icon_uri()","asciidoctor::basetemplate#id()","asciidoctor::abstractnode#image_uri()","asciidoctor::basetemplate::inherited()","asciidoctor::lexer::initialize_section()","asciidoctor::abstractblock#insert()","asciidoctor::cli::invoker#invoke!()","asciidoctor::lexer::is_delimited_block?()","asciidoctor::lexer::is_next_line_document_title?()","asciidoctor::lexer::is_next_line_section?()","asciidoctor::pathresolver#is_root?()","asciidoctor::lexer::is_section_title?()","asciidoctor::lexer::is_sibling_list_item?()","asciidoctor::lexer::is_single_line_section_title?()","asciidoctor::lexer::is_two_line_section_title?()","asciidoctor::pathresolver#is_web_root?()","asciidoctor::pathresolver#join_path()","asciidoctor::table::parsercontext#keep_cell_open()","asciidoctor::reader#lines()","asciidoctor::load()","asciidoctor::renderer#load_eruby()","asciidoctor::load_file()","asciidoctor::table::parsercontext#mark_cell_closed()","asciidoctor::table::parsercontext#match_delimiter()","asciidoctor::abstractnode#media_uri()","asciidoctor::docbook45::inlinemenutemplate#menu()","asciidoctor::html5::inlinemenutemplate#menu()","asciidoctor::helpers::mkdir_p()","asciidoctor::document#name()","asciidoctor::document#nested?()","asciidoctor::abstractblock::new()","asciidoctor::abstractnode::new()","asciidoctor::attributelist::new()","asciidoctor::basetemplate::new()","asciidoctor::block::new()","asciidoctor::callouts::new()","asciidoctor::cli::invoker::new()","asciidoctor::cli::options::new()","asciidoctor::document::new()","asciidoctor::inline::new()","asciidoctor::lexer::new()","asciidoctor::listitem::new()","asciidoctor::pathresolver::new()","asciidoctor::reader::new()","asciidoctor::renderer::new()","asciidoctor::section::new()","asciidoctor::table::new()","asciidoctor::table::cell::new()","asciidoctor::table::column::new()","asciidoctor::table::parsercontext::new()","asciidoctor::lexer::next_block()","asciidoctor::lexer::next_labeled_list()","asciidoctor::callouts#next_list()","asciidoctor::lexer::next_list_item()","asciidoctor::lexer::next_outline_list()","asciidoctor::lexer::next_section()","asciidoctor::lexer::next_table()","asciidoctor::document#nextval()","asciidoctor::document#noheader()","asciidoctor::abstractnode#normalize_asset_path()","asciidoctor::reader#normalize_data()","asciidoctor::reader#normalize_include_data()","asciidoctor::abstractnode#normalize_system_path()","asciidoctor::abstractnode#normalize_web_path()","asciidoctor::document#notitle()","asciidoctor::docbook45::blockopentemplate#open_block()","asciidoctor::html5::blockopentemplate#open_block()","asciidoctor::html5::documenttemplate::outline()","asciidoctor::docbook45::blockparagraphtemplate#paragraph()","asciidoctor::html5::blockparagraphtemplate#paragraph()","asciidoctor::attributelist#parse()","asciidoctor::lexer::parse()","asciidoctor::cli::options::parse!()","asciidoctor::cli::options#parse!()","asciidoctor::attributelist#parse_attribute()","asciidoctor::attributelist#parse_attribute_value()","asciidoctor::substituters#parse_attributes()","asciidoctor::lexer::parse_block_metadata_line()","asciidoctor::lexer::parse_block_metadata_lines()","asciidoctor::lexer::parse_cell_spec()","asciidoctor::lexer::parse_col_specs()","asciidoctor::lexer::parse_document_header()","asciidoctor::lexer::parse_header_metadata()","asciidoctor::attributelist#parse_into()","asciidoctor::lexer::parse_section_title()","asciidoctor::lexer::parse_style_attribute()","asciidoctor::table#partition_header_footer()","asciidoctor::pathresolver#partition_path()","asciidoctor::reader#peek_line()","asciidoctor::reader#peek_lines()","asciidoctor::document#playback_attributes()","asciidoctor::pathresolver#posixfy()","asciidoctor::reader#preprocess_conditional_inclusion()","asciidoctor::reader#preprocess_include()","asciidoctor::reader#preprocess_next_line()","asciidoctor::basetemplate#preserve_endlines()","asciidoctor::lexer::process_attribute_entries()","asciidoctor::lexer::process_attribute_entry()","asciidoctor::lexer::process_authors()","asciidoctor::table::parsercontext#push_cell_spec()","asciidoctor::debug::puts_indented()","asciidoctor::docbook45::inlinequotedtemplate#quote_text()","asciidoctor::html5::inlinequotedtemplate#quote_text()","asciidoctor::abstractnode#read_asset()","asciidoctor::cli::invoker#read_error()","asciidoctor::callouts#read_next_id()","asciidoctor::cli::invoker#read_output()","asciidoctor::cli::invoker#redirect_streams()","asciidoctor::callouts#register()","asciidoctor::document#register()","asciidoctor::abstractblock#reindex_sections()","asciidoctor::attributelist#rekey()","asciidoctor::attributelist::rekey()","asciidoctor::render()","asciidoctor::basetemplate#render()","asciidoctor::block#render()","asciidoctor::document#render()","asciidoctor::inline#render()","asciidoctor::renderer#render()","asciidoctor::section#render()","asciidoctor::table#render()","asciidoctor::render_file()","asciidoctor::abstractnode#renderer()","asciidoctor::document#renderer()","asciidoctor::helpers::require_library()","asciidoctor::lexer::reset_block_indent!()","asciidoctor::cli::invoker#reset_streams()","asciidoctor::reader#resolve_expr_val()","asciidoctor::lexer::resolve_list_marker()","asciidoctor::lexer::resolve_ordered_list_marker()","asciidoctor::substituters#resolve_subs()","asciidoctor::document#restore_attributes()","asciidoctor::substituters#restore_passthroughs()","asciidoctor::docbook45::blockopentemplate#result()","asciidoctor::docbook45::blockparagraphtemplate#result()","asciidoctor::docbook45::blocktoctemplate#result()","asciidoctor::docbook45::inlineanchortemplate#result()","asciidoctor::docbook45::inlinebuttontemplate#result()","asciidoctor::docbook45::inlinecallouttemplate#result()","asciidoctor::docbook45::inlinekbdtemplate#result()","asciidoctor::docbook45::inlinemenutemplate#result()","asciidoctor::docbook45::inlinequotedtemplate#result()","asciidoctor::docbook45::sectiontemplate#result()","asciidoctor::emptytemplate#result()","asciidoctor::html5::blockopentemplate#result()","asciidoctor::html5::blockpagebreaktemplate#result()","asciidoctor::html5::blockparagraphtemplate#result()","asciidoctor::html5::blockrulertemplate#result()","asciidoctor::html5::blocktoctemplate#result()","asciidoctor::html5::inlineanchortemplate#result()","asciidoctor::html5::inlinebreaktemplate#result()","asciidoctor::html5::inlinebuttontemplate#result()","asciidoctor::html5::inlinecallouttemplate#result()","asciidoctor::html5::inlineindextermtemplate#result()","asciidoctor::html5::inlinekbdtemplate#result()","asciidoctor::html5::inlinemenutemplate#result()","asciidoctor::html5::inlinequotedtemplate#result()","asciidoctor::html5::sectiontemplate#result()","asciidoctor::document#revdate()","asciidoctor::callouts#rewind()","asciidoctor::basetemplate#role_class()","asciidoctor::lexer::roman_numeral_to_int()","asciidoctor::lexer::sanitize_attribute_name()","asciidoctor::reader#sanitize_attribute_name()","asciidoctor::document#save_attributes()","asciidoctor::attributelist#scan_name()","asciidoctor::attributelist#scan_to_delimiter()","asciidoctor::attributelist#scan_to_quote()","asciidoctor::lexer::section_level()","asciidoctor::abstractblock#sections()","asciidoctor::section#sectnum()","asciidoctor::abstractnode#set_attr()","asciidoctor::document#set_attribute()","asciidoctor::debug::set_debug()","asciidoctor::debug::show_debug_output?()","asciidoctor::lexer::single_line_section_level()","asciidoctor::abstractblock#size()","asciidoctor::attributelist#skip_blank()","asciidoctor::reader#skip_blank_lines()","asciidoctor::reader#skip_comment_lines()","asciidoctor::attributelist#skip_delimiter()","asciidoctor::table::parsercontext#skip_matched_delimiter()","asciidoctor::document#source()","asciidoctor::document#source_lines()","asciidoctor::table::parsercontext#starts_with_delimiter?()","asciidoctor::lexer::store_attribute()","asciidoctor::basetemplate#style_class()","asciidoctor::substituters#sub_attributes()","asciidoctor::substituters#sub_callouts()","asciidoctor::substituters#sub_macros()","asciidoctor::substituters#sub_post_replacements()","asciidoctor::substituters#sub_quotes()","asciidoctor::substituters#sub_replacements()","asciidoctor::substituters#sub_specialcharacters()","asciidoctor::pathresolver#system_path()","asciidoctor::basetemplate#tag()","asciidoctor::table::parsercontext#take_cell_spec()","asciidoctor::basetemplate#template()","asciidoctor::docbook45::blockadmonitiontemplate#template()","asciidoctor::docbook45::blockcolisttemplate#template()","asciidoctor::docbook45::blockdlisttemplate#template()","asciidoctor::docbook45::blockexampletemplate#template()","asciidoctor::docbook45::blockfloatingtitletemplate#template()","asciidoctor::docbook45::blockimagetemplate#template()","asciidoctor::docbook45::blocklistingtemplate#template()","asciidoctor::docbook45::blockliteraltemplate#template()","asciidoctor::docbook45::blockolisttemplate#template()","asciidoctor::docbook45::blockopentemplate#template()","asciidoctor::docbook45::blockpagebreaktemplate#template()","asciidoctor::docbook45::blockparagraphtemplate#template()","asciidoctor::docbook45::blockpasstemplate#template()","asciidoctor::docbook45::blockpreambletemplate#template()","asciidoctor::docbook45::blockquotetemplate#template()","asciidoctor::docbook45::blockrulertemplate#template()","asciidoctor::docbook45::blocksidebartemplate#template()","asciidoctor::docbook45::blocktabletemplate#template()","asciidoctor::docbook45::blocktoctemplate#template()","asciidoctor::docbook45::blockulisttemplate#template()","asciidoctor::docbook45::blockversetemplate#template()","asciidoctor::docbook45::documenttemplate#template()","asciidoctor::docbook45::embeddedtemplate#template()","asciidoctor::docbook45::inlineanchortemplate#template()","asciidoctor::docbook45::inlinebreaktemplate#template()","asciidoctor::docbook45::inlinebuttontemplate#template()","asciidoctor::docbook45::inlinecallouttemplate#template()","asciidoctor::docbook45::inlinefootnotetemplate#template()","asciidoctor::docbook45::inlineimagetemplate#template()","asciidoctor::docbook45::inlineindextermtemplate#template()","asciidoctor::docbook45::inlinekbdtemplate#template()","asciidoctor::docbook45::inlinemenutemplate#template()","asciidoctor::docbook45::inlinequotedtemplate#template()","asciidoctor::docbook45::sectiontemplate#template()","asciidoctor::emptytemplate#template()","asciidoctor::html5::blockadmonitiontemplate#template()","asciidoctor::html5::blockaudiotemplate#template()","asciidoctor::html5::blockcolisttemplate#template()","asciidoctor::html5::blockdlisttemplate#template()","asciidoctor::html5::blockexampletemplate#template()","asciidoctor::html5::blockfloatingtitletemplate#template()","asciidoctor::html5::blockimagetemplate#template()","asciidoctor::html5::blocklistingtemplate#template()","asciidoctor::html5::blockliteraltemplate#template()","asciidoctor::html5::blockolisttemplate#template()","asciidoctor::html5::blockopentemplate#template()","asciidoctor::html5::blockpagebreaktemplate#template()","asciidoctor::html5::blockparagraphtemplate#template()","asciidoctor::html5::blockpasstemplate#template()","asciidoctor::html5::blockpreambletemplate#template()","asciidoctor::html5::blockquotetemplate#template()","asciidoctor::html5::blockrulertemplate#template()","asciidoctor::html5::blocksidebartemplate#template()","asciidoctor::html5::blocktabletemplate#template()","asciidoctor::html5::blocktoctemplate#template()","asciidoctor::html5::blockulisttemplate#template()","asciidoctor::html5::blockversetemplate#template()","asciidoctor::html5::blockvideotemplate#template()","asciidoctor::html5::documenttemplate#template()","asciidoctor::html5::embeddedtemplate#template()","asciidoctor::html5::inlineanchortemplate#template()","asciidoctor::html5::inlinebreaktemplate#template()","asciidoctor::html5::inlinebuttontemplate#template()","asciidoctor::html5::inlinecallouttemplate#template()","asciidoctor::html5::inlinefootnotetemplate#template()","asciidoctor::html5::inlineimagetemplate#template()","asciidoctor::html5::inlineindextermtemplate#template()","asciidoctor::html5::inlinekbdtemplate#template()","asciidoctor::html5::inlinemenutemplate#template()","asciidoctor::html5::inlinequotedtemplate#template()","asciidoctor::html5::sectiontemplate#template()","asciidoctor::basetemplate::template_classes()","asciidoctor::listitem#text()","asciidoctor::table::cell#text()","asciidoctor::listitem#text?()","asciidoctor::abstractblock#title()","asciidoctor::document#title()","asciidoctor::document#title=()","asciidoctor::abstractblock#title?()","asciidoctor::basetemplate#title_div()","asciidoctor::basetemplate#title_tag()","asciidoctor::docbook45::documenttemplate#title_tags()","asciidoctor::block#to_s()","asciidoctor::document#to_s()","asciidoctor::listitem#to_s()","asciidoctor::section#to_s()","asciidoctor::table::cell#to_s()","asciidoctor::html5::blockpreambletemplate#toc()","asciidoctor::substituters#transform_quoted_text()","asciidoctor::substituters#unescape_bracketed_text()","asciidoctor::reader#unshift()","asciidoctor::reader#unshift_line()","asciidoctor::abstractnode#update_attributes()","asciidoctor::document#update_backend_attributes()","asciidoctor::renderer#views()","asciidoctor::pathresolver#web_path()",""],"info":[["Asciidoctor","","Asciidoctor.html","","<p>Methods for parsing Asciidoc input files and rendering documentsusing eRuby\ntemplates.\n<p>Asciidoc documents …\n"],["Asciidoctor::AbstractBlock","","Asciidoctor/AbstractBlock.html","",""],["Asciidoctor::AbstractNode","","Asciidoctor/AbstractNode.html","","<p>An abstract base class that provides state and methods for managing anode\nof AsciiDoc content. The state …\n"],["Asciidoctor::AttributeList","","Asciidoctor/AttributeList.html","","<p>Handles parsing AsciiDoc attribute lists into a Hash of key/valuepairs. By\ndefault, attributes must each …\n"],["Asciidoctor::BaseTemplate","","Asciidoctor/BaseTemplate.html","","<p>An abstract base class that provides methods for definining and rendering\nthebackend templates. Concrete …\n"],["Asciidoctor::Block","","Asciidoctor/Block.html","","<p>Methods for managing blocks of Asciidoc content in a section.\n<p>Examples\n\n<pre>block = Asciidoctor::Block.new(document, ...</pre>\n"],["Asciidoctor::Callouts","","Asciidoctor/Callouts.html","","<p>Maintains a catalog of callouts and their associations.\n"],["Asciidoctor::Cli","","Asciidoctor/Cli.html","",""],["Asciidoctor::Cli::Invoker","","Asciidoctor/Cli/Invoker.html","","<p>Public Invocation class for starting Asciidoctor via CLI\n"],["Asciidoctor::Cli::Options","","Asciidoctor/Cli/Options.html","","<p>List of options that can be specified on the command line\n"],["Asciidoctor::Debug","","Asciidoctor/Debug.html","",""],["Asciidoctor::DocBook45","","Asciidoctor/DocBook45.html","",""],["Asciidoctor::DocBook45::BlockAdmonitionTemplate","","Asciidoctor/DocBook45/BlockAdmonitionTemplate.html","",""],["Asciidoctor::DocBook45::BlockAudioTemplate","","Asciidoctor/DocBook45/BlockAudioTemplate.html","",""],["Asciidoctor::DocBook45::BlockColistTemplate","","Asciidoctor/DocBook45/BlockColistTemplate.html","",""],["Asciidoctor::DocBook45::BlockDlistTemplate","","Asciidoctor/DocBook45/BlockDlistTemplate.html","",""],["Asciidoctor::DocBook45::BlockExampleTemplate","","Asciidoctor/DocBook45/BlockExampleTemplate.html","",""],["Asciidoctor::DocBook45::BlockFloatingTitleTemplate","","Asciidoctor/DocBook45/BlockFloatingTitleTemplate.html","",""],["Asciidoctor::DocBook45::BlockImageTemplate","","Asciidoctor/DocBook45/BlockImageTemplate.html","",""],["Asciidoctor::DocBook45::BlockListingTemplate","","Asciidoctor/DocBook45/BlockListingTemplate.html","",""],["Asciidoctor::DocBook45::BlockLiteralTemplate","","Asciidoctor/DocBook45/BlockLiteralTemplate.html","",""],["Asciidoctor::DocBook45::BlockOlistTemplate","","Asciidoctor/DocBook45/BlockOlistTemplate.html","",""],["Asciidoctor::DocBook45::BlockOpenTemplate","","Asciidoctor/DocBook45/BlockOpenTemplate.html","",""],["Asciidoctor::DocBook45::BlockPageBreakTemplate","","Asciidoctor/DocBook45/BlockPageBreakTemplate.html","",""],["Asciidoctor::DocBook45::BlockParagraphTemplate","","Asciidoctor/DocBook45/BlockParagraphTemplate.html","",""],["Asciidoctor::DocBook45::BlockPassTemplate","","Asciidoctor/DocBook45/BlockPassTemplate.html","",""],["Asciidoctor::DocBook45::BlockPreambleTemplate","","Asciidoctor/DocBook45/BlockPreambleTemplate.html","",""],["Asciidoctor::DocBook45::BlockQuoteTemplate","","Asciidoctor/DocBook45/BlockQuoteTemplate.html","",""],["Asciidoctor::DocBook45::BlockRulerTemplate","","Asciidoctor/DocBook45/BlockRulerTemplate.html","",""],["Asciidoctor::DocBook45::BlockSidebarTemplate","","Asciidoctor/DocBook45/BlockSidebarTemplate.html","",""],["Asciidoctor::DocBook45::BlockTableTemplate","","Asciidoctor/DocBook45/BlockTableTemplate.html","",""],["Asciidoctor::DocBook45::BlockTocTemplate","","Asciidoctor/DocBook45/BlockTocTemplate.html","",""],["Asciidoctor::DocBook45::BlockUlistTemplate","","Asciidoctor/DocBook45/BlockUlistTemplate.html","",""],["Asciidoctor::DocBook45::BlockVerseTemplate","","Asciidoctor/DocBook45/BlockVerseTemplate.html","",""],["Asciidoctor::DocBook45::BlockVideoTemplate","","Asciidoctor/DocBook45/BlockVideoTemplate.html","",""],["Asciidoctor::DocBook45::DocumentTemplate","","Asciidoctor/DocBook45/DocumentTemplate.html","",""],["Asciidoctor::DocBook45::EmbeddedTemplate","","Asciidoctor/DocBook45/EmbeddedTemplate.html","",""],["Asciidoctor::DocBook45::InlineAnchorTemplate","","Asciidoctor/DocBook45/InlineAnchorTemplate.html","",""],["Asciidoctor::DocBook45::InlineBreakTemplate","","Asciidoctor/DocBook45/InlineBreakTemplate.html","",""],["Asciidoctor::DocBook45::InlineButtonTemplate","","Asciidoctor/DocBook45/InlineButtonTemplate.html","",""],["Asciidoctor::DocBook45::InlineCalloutTemplate","","Asciidoctor/DocBook45/InlineCalloutTemplate.html","",""],["Asciidoctor::DocBook45::InlineFootnoteTemplate","","Asciidoctor/DocBook45/InlineFootnoteTemplate.html","",""],["Asciidoctor::DocBook45::InlineImageTemplate","","Asciidoctor/DocBook45/InlineImageTemplate.html","",""],["Asciidoctor::DocBook45::InlineIndextermTemplate","","Asciidoctor/DocBook45/InlineIndextermTemplate.html","",""],["Asciidoctor::DocBook45::InlineKbdTemplate","","Asciidoctor/DocBook45/InlineKbdTemplate.html","",""],["Asciidoctor::DocBook45::InlineMenuTemplate","","Asciidoctor/DocBook45/InlineMenuTemplate.html","",""],["Asciidoctor::DocBook45::InlineQuotedTemplate","","Asciidoctor/DocBook45/InlineQuotedTemplate.html","",""],["Asciidoctor::DocBook45::SectionTemplate","","Asciidoctor/DocBook45/SectionTemplate.html","",""],["Asciidoctor::Document","","Asciidoctor/Document.html","","<p>Methods for parsing Asciidoc documents and rendering themusing erb\ntemplates.\n<p>There are several strategies …\n"],["Asciidoctor::EmptyTemplate","","Asciidoctor/EmptyTemplate.html","",""],["Asciidoctor::HTML5","","Asciidoctor/HTML5.html","",""],["Asciidoctor::HTML5::BlockAdmonitionTemplate","","Asciidoctor/HTML5/BlockAdmonitionTemplate.html","",""],["Asciidoctor::HTML5::BlockAudioTemplate","","Asciidoctor/HTML5/BlockAudioTemplate.html","",""],["Asciidoctor::HTML5::BlockColistTemplate","","Asciidoctor/HTML5/BlockColistTemplate.html","",""],["Asciidoctor::HTML5::BlockDlistTemplate","","Asciidoctor/HTML5/BlockDlistTemplate.html","",""],["Asciidoctor::HTML5::BlockExampleTemplate","","Asciidoctor/HTML5/BlockExampleTemplate.html","",""],["Asciidoctor::HTML5::BlockFloatingTitleTemplate","","Asciidoctor/HTML5/BlockFloatingTitleTemplate.html","",""],["Asciidoctor::HTML5::BlockImageTemplate","","Asciidoctor/HTML5/BlockImageTemplate.html","",""],["Asciidoctor::HTML5::BlockListingTemplate","","Asciidoctor/HTML5/BlockListingTemplate.html","",""],["Asciidoctor::HTML5::BlockLiteralTemplate","","Asciidoctor/HTML5/BlockLiteralTemplate.html","",""],["Asciidoctor::HTML5::BlockOlistTemplate","","Asciidoctor/HTML5/BlockOlistTemplate.html","",""],["Asciidoctor::HTML5::BlockOpenTemplate","","Asciidoctor/HTML5/BlockOpenTemplate.html","",""],["Asciidoctor::HTML5::BlockPageBreakTemplate","","Asciidoctor/HTML5/BlockPageBreakTemplate.html","",""],["Asciidoctor::HTML5::BlockParagraphTemplate","","Asciidoctor/HTML5/BlockParagraphTemplate.html","",""],["Asciidoctor::HTML5::BlockPassTemplate","","Asciidoctor/HTML5/BlockPassTemplate.html","",""],["Asciidoctor::HTML5::BlockPreambleTemplate","","Asciidoctor/HTML5/BlockPreambleTemplate.html","",""],["Asciidoctor::HTML5::BlockQuoteTemplate","","Asciidoctor/HTML5/BlockQuoteTemplate.html","",""],["Asciidoctor::HTML5::BlockRulerTemplate","","Asciidoctor/HTML5/BlockRulerTemplate.html","",""],["Asciidoctor::HTML5::BlockSidebarTemplate","","Asciidoctor/HTML5/BlockSidebarTemplate.html","",""],["Asciidoctor::HTML5::BlockTableTemplate","","Asciidoctor/HTML5/BlockTableTemplate.html","",""],["Asciidoctor::HTML5::BlockTocTemplate","","Asciidoctor/HTML5/BlockTocTemplate.html","",""],["Asciidoctor::HTML5::BlockUlistTemplate","","Asciidoctor/HTML5/BlockUlistTemplate.html","",""],["Asciidoctor::HTML5::BlockVerseTemplate","","Asciidoctor/HTML5/BlockVerseTemplate.html","",""],["Asciidoctor::HTML5::BlockVideoTemplate","","Asciidoctor/HTML5/BlockVideoTemplate.html","",""],["Asciidoctor::HTML5::DocumentTemplate","","Asciidoctor/HTML5/DocumentTemplate.html","",""],["Asciidoctor::HTML5::EmbeddedTemplate","","Asciidoctor/HTML5/EmbeddedTemplate.html","",""],["Asciidoctor::HTML5::InlineAnchorTemplate","","Asciidoctor/HTML5/InlineAnchorTemplate.html","",""],["Asciidoctor::HTML5::InlineBreakTemplate","","Asciidoctor/HTML5/InlineBreakTemplate.html","",""],["Asciidoctor::HTML5::InlineButtonTemplate","","Asciidoctor/HTML5/InlineButtonTemplate.html","",""],["Asciidoctor::HTML5::InlineCalloutTemplate","","Asciidoctor/HTML5/InlineCalloutTemplate.html","",""],["Asciidoctor::HTML5::InlineFootnoteTemplate","","Asciidoctor/HTML5/InlineFootnoteTemplate.html","",""],["Asciidoctor::HTML5::InlineImageTemplate","","Asciidoctor/HTML5/InlineImageTemplate.html","",""],["Asciidoctor::HTML5::InlineIndextermTemplate","","Asciidoctor/HTML5/InlineIndextermTemplate.html","",""],["Asciidoctor::HTML5::InlineKbdTemplate","","Asciidoctor/HTML5/InlineKbdTemplate.html","",""],["Asciidoctor::HTML5::InlineMenuTemplate","","Asciidoctor/HTML5/InlineMenuTemplate.html","",""],["Asciidoctor::HTML5::InlineQuotedTemplate","","Asciidoctor/HTML5/InlineQuotedTemplate.html","",""],["Asciidoctor::HTML5::SectionTemplate","","Asciidoctor/HTML5/SectionTemplate.html","",""],["Asciidoctor::Helpers","","Asciidoctor/Helpers.html","",""],["Asciidoctor::Inline","","Asciidoctor/Inline.html","","<p>Methods for managing inline elements in AsciiDoc block\n"],["Asciidoctor::Lexer","","Asciidoctor/Lexer.html","","<p>Methods to parse lines of AsciiDoc into an object hierarchyrepresenting the\nstructure of the document. …\n"],["Asciidoctor::ListItem","","Asciidoctor/ListItem.html","","<p>Methods for managing items for AsciiDoc olists, ulist, and dlists.\n"],["Asciidoctor::PathResolver","","Asciidoctor/PathResolver.html","","<p>Handles all operations for resolving, cleaning and joining paths.This class\nincludes operations for handling …\n"],["Asciidoctor::Reader","","Asciidoctor/Reader.html","","<p>Methods for retrieving lines from AsciiDoc source files\n"],["Asciidoctor::Renderer","","Asciidoctor/Renderer.html","","<p>Methods for rendering Asciidoc Documents, Sections, and Blocksusing eRuby\ntemplates.\n"],["Asciidoctor::SafeMode","","Asciidoctor/SafeMode.html","",""],["Asciidoctor::Section","","Asciidoctor/Section.html","","<p>Methods for managing sections of AsciiDoc content in a document.The section\nresponds as an Array of content …\n"],["Asciidoctor::Substituters","","Asciidoctor/Substituters.html","","<p>Methods to perform substitutions on lines of AsciiDoc text. This moduleis\nintented to be mixed-in to …\n"],["Asciidoctor::Table","","Asciidoctor/Table.html","","<p>Methods and constants for managing AsciiDoc table content in a document.It\nsupports all three of AsciiDoc’s …\n"],["Asciidoctor::Table::Cell","","Asciidoctor/Table/Cell.html","","<p>Methods for managing the a cell in an AsciiDoc table.\n"],["Asciidoctor::Table::Column","","Asciidoctor/Table/Column.html","","<p>Methods to manage the columns of an AsciiDoc table. In particular, itkeeps\ntrack of the column specs …\n"],["Asciidoctor::Table::ParserContext","","Asciidoctor/Table/ParserContext.html","","<p>Methods for managing the parsing of an AsciiDoc table. Instances of\nthisclass are primarily responsible …\n"],["<<","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-3C-3C","(block)","<p>Append a content block to this block’s list of blocks.\n<p>block &mdash; The new child block.\n\n<p>Examples\n"],["[]","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-5B-5D","(i)","<p>Get the element at i in the array of blocks.\n<p>i &mdash; The Integer array index number.\n\n\n<pre>section = Section.new\n\nsection ...</pre>\n"],["activate_rowspan","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-activate_rowspan","(rowspan, colspan)","<p>Activate a rowspan. The rowspan Array is consulted whendetermining the\neffective number of cells in the …\n"],["advance","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-advance","()","<p>Advance to the next line by discarding the line at the front of the stack\n<p>Removes the line at the front …\n"],["advance","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-advance","()","<p>Advance to the next line (which may come after the parser begins\nprocessingthe next line if the last …\n"],["anchor","Asciidoctor::DocBook45::InlineAnchorTemplate","Asciidoctor/DocBook45/InlineAnchorTemplate.html#method-i-anchor","(target, text, type)",""],["anchor","Asciidoctor::HTML5::InlineAnchorTemplate","Asciidoctor/HTML5/InlineAnchorTemplate.html#method-i-anchor","(target, text, type, document, node)",""],["apply_attribute_value_subs","Asciidoctor::Document","Asciidoctor/Document.html#method-i-apply_attribute_value_subs","(value)","<p>Apply substitutions to the attribute value\n<p>If the value is an inline passthrough macro (e.g., pass:), …\n"],["apply_header_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_header_subs","(text)","<p>Apply substitutions for header metadata and attribute assignments\n<p>text &mdash; String containing the text process …\n"],["apply_literal_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_literal_subs","(lines)","<p>Apply substitutions for titles\n<p>lines &mdash; A String Array containing the lines of text process\n<p>returns &mdash; A String …\n"],["apply_normal_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_normal_subs","(lines)","<p>Apply normal substitutions.\n<p>lines &mdash; The lines of text to process. Can be a String or a String Array\n<p>returns … &mdash; "],["apply_para_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_para_subs","(lines)","<p>Apply explicit substitutions, if specified, otherwise normal substitutions.\n<p>lines &mdash; The lines of text to …\n"],["apply_passthrough_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_passthrough_subs","(lines)","<p>Apply substitutions for passthrough text\n<p>lines &mdash; A String Array containing the lines of text process\n<p>returns … &mdash; "],["apply_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_subs","(lines, subs = COMPOSITE_SUBS[:normal])","<p>Apply the specified substitutions to the lines of text\n<p>lines &mdash; The lines of text to process. Can be a String …\n"],["apply_title_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-apply_title_subs","(title)","<p>Apply substitutions for titles.\n<p>title &mdash; The String title to process\n<p>returns &mdash; A String with title substitutions …\n"],["assign_caption","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-assign_caption","(caption = nil, key = nil)","<p>Generate a caption and assign it to this block if oneis not already\nassigned.\n<p>If the block has a title …\n"],["assign_index","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-assign_index","(section)","<p>Assign the next index (0-based) to this section\n<p>Assign the next index of this section within the parentBlock …\n"],["assign_width","Asciidoctor::Table::Column","Asciidoctor/Table/Column.html#method-i-assign_width","(total_width, even_width)","<p>Calculate and assign the widths (percentage and absolute) for this column\n<p>This method assigns the colpcwidth …\n"],["attr","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-attr","(name, default = nil, inherit = true)","<p>Get the value of the specified attribute\n<p>Get the value for the specified attribute. First look in the …\n"],["attr?","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-attr-3F","(name, expect = nil, inherit = true)","<p>Check if the attribute is defined, optionally performing acomparison of its\nvalue if expected is not …\n"],["attribute","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-attribute","(name, key)","<p>create template matter to insert an attribute if the variable has a value\n"],["attribute_locked?","Asciidoctor::Document","Asciidoctor/Document.html#method-i-attribute_locked-3F","(name)","<p>Determine if the attribute has been locked by being assigned in document\noptions\n<p>key &mdash; The attribute key …\n\n"],["attrvalue","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-attrvalue","(key, sibling = true, inherit = true)","<p>create template matter to insert a style class if the variable has a value\n"],["author","Asciidoctor::Document","Asciidoctor/Document.html#method-i-author","()","<p>Convenience method to retrieve the document attribute ‘author’\n<p>returns the full name of the author as …\n"],["backend","Asciidoctor::Document","Asciidoctor/Document.html#method-i-backend","()",""],["blocks?","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-blocks-3F","()","<p>Determine whether this Block contains block content\n<p>returns Whether this Block has block content\n"],["buffer_has_unclosed_quotes?","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-buffer_has_unclosed_quotes-3F","(append = nil)","<p>Determines whether the buffer has unclosed quotes. Used for CSV data.\n<p>returns true if the buffer has unclosed …\n"],["buffer_quoted?","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-buffer_quoted-3F","()","<p>Determines whether the buffer contains quoted data. Used for CSV data.\n<p>returns true if the buffer starts …\n"],["build_block","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-build_block","(block_context, content_type, terminator, parent, reader, attributes, options = {})","<p>whether a block supports complex content should be a config settingif\nterminator is false, that means …\n"],["callout_ids","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-callout_ids","(li_ordinal)","<p>Get a space-separated list of callout ids for the specified list item\n<p>li_ordinal &mdash; the Integer ordinal (1-based) …\n\n"],["camelcase_to_underscore","Asciidoctor::Renderer","Asciidoctor/Renderer.html#method-c-camelcase_to_underscore","(str)","<p>Convert a CamelCase word to an underscore-delimited word\n<p>Examples\n\n<pre>Renderer.camelcase_to_underscore('BlockSidebar') ...</pre>\n"],["catalog_callouts","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-catalog_callouts","(text, document)","<p>Catalog any callouts found in the text, but don’t process them\n<p>text &mdash; The String of text in which to look …\n"],["catalog_inline_anchors","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-catalog_inline_anchors","(text, document)","<p>Catalog any inline anchors found in the text, but don’t process them\n<p>text &mdash; The String text in which to …\n"],["cell_closed?","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-cell_closed-3F","()","<p>Checks whether the current cell has been marked as closed\n<p>returns true if the cell is marked as closed, …\n"],["cell_open?","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-cell_open-3F","()","<p>Checks whether the current cell is still open\n<p>returns true if the cell is marked as open, false otherwise …\n"],["chomp_last!","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-chomp_last-21","()","<p>Chomp the String on the last line if this reader contains at least one line\n<p>Delegates to chomp!\n<p>Returns …\n"],["clear_blocks","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-clear_blocks","()","<p>Clear this Block’s list of blocks.\n\n<pre>section = Section.new\n\nsection &lt;&lt; 'foo'\nsection &lt;&lt; 'bar'\nsection.blocks ...</pre>\n"],["clear_playback_attributes","Asciidoctor::Document","Asciidoctor/Document.html#method-i-clear_playback_attributes","(attributes)","<p>Delete any attributes stored for playback\n"],["close_cell","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-close_cell","(eol = false)","<p>Close the current cell, instantiate a new Table::Cell, add it tothe current\nrow and, if the number of …\n"],["close_open_cell","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-close_open_cell","(next_cell_spec = {})","<p>If the current cell is open, close it. In additional, push thecell spec\ncaptured from the end of this …\n"],["close_row","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-close_row","()","<p>Close the row by adding it to the Table and resetting the rowArray and\ncounter variables.\n<p>returns nothing …\n"],["common_attrs","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-common_attrs","(id, role, reftext)",""],["common_attrs_erb","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-common_attrs_erb","()",""],["compact","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-compact","(str)","<p>Compact blank lines in the provided text. This method also restoresevery\nHTML line feed entity found …\n"],["consume_comments","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-consume_comments","(options = {})","<p>Consume consecutive lines containing line- or block-level comments.\n<p>Returns the Array of lines that were …\n"],["consume_line_comments","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-consume_line_comments","()","<p>Consume consecutive lines containing line comments.\n<p>Returns the Array of lines that were consumed\n<p>Examples …\n"],["content","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-content","(node)",""],["content","Asciidoctor::Block","Asciidoctor/Block.html#method-i-content","()","<p>Get an HTML-ified version of the source buffer, with specialAsciidoc\ncharacters and entities converted …\n"],["content","Asciidoctor::Document","Asciidoctor/Document.html#method-i-content","()",""],["content","Asciidoctor::ListItem","Asciidoctor/ListItem.html#method-i-content","()",""],["content","Asciidoctor::Section","Asciidoctor/Section.html#method-i-content","()","<p>Get the String section content by aggregating rendered section blocks.\n<p>Examples\n\n<pre>section = Section.new\nsection ...</pre>\n"],["content","Asciidoctor::Table::Cell","Asciidoctor/Table/Cell.html#method-i-content","()","<p>Handles the body data (tbody, tfoot), applying styles and partitioning into\nparagraphs\n"],["content_erb","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-content_erb","()",""],["counter","Asciidoctor::Document","Asciidoctor/Document.html#method-i-counter","(name, seed = nil)","<p>Get the named counter and take the next number in the sequence.\n<p>name &mdash; the String name of the counter\n<p>seed … &mdash; "],["counter_increment","Asciidoctor::Document","Asciidoctor/Document.html#method-i-counter_increment","(counter_name, block)","<p>Increment the specified counter and store it in the block’s attributes\n<p>counter_name &mdash; the String name of …\n"],["create_columns","Asciidoctor::Table","Asciidoctor/Table.html#method-i-create_columns","(col_specs)","<p>Creates the Column objects from the column spec\n<p>returns nothing\n"],["current_list","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-current_list","()","<p>The current list for which callouts are being collected\n<p>Returns The Array of callouts at the position …\n"],["debug","Asciidoctor::Debug","Asciidoctor/Debug.html#method-c-debug","()",""],["default_asciidoctor_stylesheet","Asciidoctor::HTML5","Asciidoctor/HTML5.html#method-c-default_asciidoctor_stylesheet","()","<p>Generate the default stylesheet for Asciidoctor\n<p>returns the default Asciidoctor stylesheet as a String …\n"],["default_coderay_stylesheet","Asciidoctor::HTML5","Asciidoctor/HTML5.html#method-c-default_coderay_stylesheet","()","<p>Generate the default stylesheet for CodeRay\n<p>returns the default CodeRay stylesheet as a String\n"],["delete_at","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-delete_at","(i)","<p>Delete the element at i in the array of section blocks,returning that\nelement or nil if i is out of range. …\n"],["delete_attribute","Asciidoctor::Document","Asciidoctor/Document.html#method-i-delete_attribute","(name)","<p>Delete the specified attribute from the document if the name is not locked\n<p>If the attribute is locked, …\n"],["docinfo","Asciidoctor::DocBook45::DocumentTemplate","Asciidoctor/DocBook45/DocumentTemplate.html#method-i-docinfo","()",""],["docinfo","Asciidoctor::Document","Asciidoctor/Document.html#method-i-docinfo","(ext = nil)","<p>Read the docinfo file(s) for inclusion in thedocument template\n<p>If the docinfo1 attribute is set, read …\n"],["doctitle","Asciidoctor::Document","Asciidoctor/Document.html#method-i-doctitle","()","<p>We need to be able to return some semblance of a title\n"],["doctype","Asciidoctor::Document","Asciidoctor/Document.html#method-i-doctype","()",""],["effective_col_visits","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-effective_col_visits","()","<p>Calculate the effective column visits, which consists of the number ofcells\nplus any active rowspans. …\n"],["embedded?","Asciidoctor::Document","Asciidoctor/Document.html#method-i-embedded-3F","()",""],["empty?","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-empty-3F","()","<p>Check whether this reader is empty (contains no lines)\n<p>If preprocessing is enabled for this Reader, and …\n"],["encode_uri","Asciidoctor::Helpers","Asciidoctor/Helpers.html#method-c-encode_uri","(str)","<p>Encode a string for inclusion in a URI\n<p>str &mdash; the string to encode\n\n<p>returns an encoded version of the str\n"],["end_of_row?","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-end_of_row-3F","()","<p>Check whether we’ve met the number of effective columns for the current\nrow.\n"],["expand_path","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-expand_path","(path)","<p>Expand the path by resolving any parent references (..)and cleaning self\nreferences (.).\n<p>The result will …\n"],["extract_passthroughs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-extract_passthroughs","(text)","<p>Extract the passthrough text from the document for reinsertion after\nprocessing.\n<p>text &mdash; The String from …\n"],["extract_view_mapping","Asciidoctor::Renderer","Asciidoctor/Renderer.html#method-c-extract_view_mapping","(qualified_class)","<p>Extracts the view name and backend from a qualified Ruby class\n<p>The purpose of this method is to determine …\n"],["first_section","Asciidoctor::Document","Asciidoctor/Document.html#method-i-first_section","()","<p>QUESTION move to AbstractBlock?\n"],["fold_first","Asciidoctor::ListItem","Asciidoctor/ListItem.html#method-i-fold_first","(continuation_connects_first_block = false, content_adjacent = false)","<p>Fold the first paragraph block into the text\n<p>Here are the rules for when a folding occurs:\n<p>Given: this …\n"],["footnotes","Asciidoctor::Document","Asciidoctor/Document.html#method-i-footnotes","()",""],["footnotes?","Asciidoctor::Document","Asciidoctor/Document.html#method-i-footnotes-3F","()",""],["generate_callout_id","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-generate_callout_id","(list_index, co_index)","<p>Generate a unique id for the callout at the specified position\n<p>list_index &mdash; The 1-based Integer index of …\n"],["generate_data_uri","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-generate_data_uri","(target_image, asset_dir_key = nil)","<p>Generate a data URI that can be used to embed an image in the output\ndocument\n<p>First, and foremost, the …\n"],["generate_id","Asciidoctor::Section","Asciidoctor/Section.html#method-i-generate_id","()","<p>Generate a String id for this section.\n<p>The generated id is prefixed with value of the ‘idprefix’ attribute, …\n"],["generate_next_callout_id","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-generate_next_callout_id","()","<p>Generate a unique id for the callout based on the internal indexes\n<p>Returns A unique String id for this …\n"],["get_binding","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-get_binding","(template)","<p>Get the execution context of this object (via Kernel#binding).\n<p>This method is used to set the ‘self’ reference …\n"],["get_line","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-get_line","(preprocess = true)","<p>Get the next line of source data. Consumes the line returned.\n<p>preprocess &mdash; A Boolean flag indicating whether …\n\n"],["grab_lines_for_list_item","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-grab_lines_for_list_item","(reader, list_type, sibling_trait = nil, has_text = true)","<p>Collect the lines belonging to the current list item, navigatingthrough all\nthe rules that determine …\n"],["grab_lines_until","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-grab_lines_until","(options = {}, &block)","<p>Return all the lines from `@lines` until we (1) run out them,(2) find a\nblank line with :break_on_blank_lines …\n"],["has_header?","Asciidoctor::Document","Asciidoctor/Document.html#method-i-has_header-3F","()",""],["has_more_lines?","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-has_more_lines-3F","()","<p>Check whether there are any lines left to read.\n<p>If preprocessing is enabled for this Reader, and there …\n"],["header_row?","Asciidoctor::Table","Asciidoctor/Table.html#method-i-header_row-3F","()","<p>Returns whether the current row being processed isthe header row\n"],["highlight_source","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-highlight_source","(source)","<p>Highlight the source code if a source highlighter is definedon the\ndocument, otherwise return the text …\n"],["icon_uri","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-icon_uri","(name)","<p>Construct a reference or data URI to an icon image for thespecified icon\nname.\n<p>If the ‘icon’ attribute …\n"],["id","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-id","()","<p>create template matter to insert an id if one is specified for the block\n"],["image_uri","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-image_uri","(target_image, asset_dir_key = 'imagesdir')","<p>Construct a URI reference or data URI to the target image.\n<p>If the target image is a URI reference, then …\n"],["inherited","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-c-inherited","(klass)",""],["initialize_section","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-initialize_section","(reader, parent, attributes = {})","<p>Initialize a new Section object and assign any attributes provided\n<p>The information for this section is …\n"],["insert","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-insert","(i, block)","<p>Insert a content block at the specified index in this block’slist of\nblocks.\n<p>i &mdash; The Integer array index …\n\n"],["invoke!","Asciidoctor::Cli::Invoker","Asciidoctor/Cli/Invoker.html#method-i-invoke-21","()",""],["is_delimited_block?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_delimited_block-3F","(line, return_match_data = false)","<p>Determines whether this line is the start of any of the delimited blocks\n<p>returns the match data if this …\n"],["is_next_line_document_title?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_next_line_document_title-3F","(reader, attributes)","<p>Convenience API for checking if the next line on the Reader is the document\ntitle\n<p>reader &mdash; the source Reader …\n"],["is_next_line_section?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_next_line_section-3F","(reader, attributes)","<p>Checks if the next line on the Reader is a section title\n<p>reader &mdash; the source Reader\n<p>attributes &mdash; a Hash of …\n"],["is_root?","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-is_root-3F","(path)","<p>Check if the specified path is an absolute root pathThis operation\ncorrectly handles both posix and windows …\n"],["is_section_title?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_section_title-3F","(line1, line2 = nil)","<p>Checks if these lines are a section title\n<p>line1 &mdash; the first line as a String\n<p>line2 &mdash; the second line as a  …\n"],["is_sibling_list_item?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_sibling_list_item-3F","(line, list_type, sibling_trait)","<p>Determine whether the this line is a sibling list itemaccording to the list\ntype and trait (marker) provided. …\n"],["is_single_line_section_title?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_single_line_section_title-3F","(line1)",""],["is_two_line_section_title?","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-is_two_line_section_title-3F","(line1, line2)",""],["is_web_root?","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-is_web_root-3F","(path)","<p>Determine if the path is an absolute (root) web path\n<p>path &mdash; the String path to check\n\n<p>returns a Boolean indicating …\n"],["join_path","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-join_path","(segments, root = nil)","<p>Join the segments using the posix file separator (since Ruby knowshow to\nwork with paths specified this …\n"],["keep_cell_open","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-keep_cell_open","()","<p>Marks that the cell should be kept open. Used when the end of the line\nisreached and the cell may contain …\n"],["lines","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-lines","()","<p>Get a copy of the remaining Array of String lines parsed from the source\n"],["load","Asciidoctor","Asciidoctor.html#method-c-load","(input, options = {}, &block)","<p>Parse the AsciiDoc source input into an Asciidoctor::Document\n<p>Accepts input as an IO (or StringIO), String …\n"],["load_eruby","Asciidoctor::Renderer","Asciidoctor/Renderer.html#method-i-load_eruby","(name)","<p>Load the eRuby implementation\n<p>name &mdash; the String name of the eRuby implementation (default: ‘erb’)\n\n<p>returns …\n"],["load_file","Asciidoctor","Asciidoctor.html#method-c-load_file","(filename, options = {}, &block)","<p>Parse the contents of the AsciiDoc source file into an\nAsciidoctor::Document\n<p>Accepts input as an IO,  …\n"],["mark_cell_closed","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-mark_cell_closed","()","<p>Marks the cell as closed so that the parser knows to instantiate a new\ncellinstance and add it to the …\n"],["match_delimiter","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-match_delimiter","(line)","<p>Checks whether the line provided contains the cell delimiterused by this\ntable.\n<p>returns MatchData if the …\n"],["media_uri","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-media_uri","(target, asset_dir_key = 'imagesdir')","<p>Construct a URI reference to the target media.\n<p>If the target media is a URI reference, then leave it untouched. …\n"],["menu","Asciidoctor::DocBook45::InlineMenuTemplate","Asciidoctor/DocBook45/InlineMenuTemplate.html#method-i-menu","(menu, submenus, menuitem)",""],["menu","Asciidoctor::HTML5::InlineMenuTemplate","Asciidoctor/HTML5/InlineMenuTemplate.html#method-i-menu","(menu, submenus, menuitem)",""],["mkdir_p","Asciidoctor::Helpers","Asciidoctor/Helpers.html#method-c-mkdir_p","(dir)",""],["name","Asciidoctor::Document","Asciidoctor/Document.html#method-i-name","()",""],["nested?","Asciidoctor::Document","Asciidoctor/Document.html#method-i-nested-3F","()",""],["new","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-c-new","(parent, context)",""],["new","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-c-new","(parent, context)",""],["new","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-c-new","(source, block = nil, quotes = ['\\'', '\"'], delimiter = ',', escape_char = '\\\\')",""],["new","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-c-new","(view, eruby)",""],["new","Asciidoctor::Block","Asciidoctor/Block.html#method-c-new","(parent, context, buffer = nil)","<p>Initialize an Asciidoctor::Block object.\n<p>parent &mdash; The parent Asciidoc Object.\n<p>context &mdash; The Symbol context …\n"],["new","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-c-new","()",""],["new","Asciidoctor::Cli::Invoker","Asciidoctor/Cli/Invoker.html#method-c-new","(*options)",""],["new","Asciidoctor::Cli::Options","Asciidoctor/Cli/Options.html#method-c-new","(options = {})",""],["new","Asciidoctor::Document","Asciidoctor/Document.html#method-c-new","(data = [], options = {}, &block)","<p>Initialize an Asciidoc object.\n<p>data &mdash; The Array of Strings holding the Asciidoc source document. (default: …\n"],["new","Asciidoctor::Inline","Asciidoctor/Inline.html#method-c-new","(parent, context, text = nil, opts = {})",""],["new","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-new","()","<p>Make sure the Lexer object doesn’t get initialized.\n<p>Raises RuntimeError if this constructor is invoked. …\n"],["new","Asciidoctor::ListItem","Asciidoctor/ListItem.html#method-c-new","(parent, text = nil)","<p>Initialize an Asciidoctor::ListItem object.\n<p>parent &mdash; The parent list block for this list item\n<p>text &mdash; the String …\n"],["new","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-c-new","(file_separator = nil, working_dir = nil)","<p>Construct a new instance of PathResolver, optionally specifying thefile\nseparator (to override the system …\n"],["new","Asciidoctor::Reader","Asciidoctor/Reader.html#method-c-new","(data = nil, document = nil, preprocess = false, &block)","<p>Initialize the Reader object.\n<p>data &mdash; The Array of Strings holding the Asciidoc source document. Theoriginal …\n"],["new","Asciidoctor::Renderer","Asciidoctor/Renderer.html#method-c-new","(options={})","<p>Initialize an Asciidoctor::Renderer object.\n"],["new","Asciidoctor::Section","Asciidoctor/Section.html#method-c-new","(parent = nil, level = nil)","<p>Initialize an Asciidoctor::Section object.\n<p>parent &mdash; The parent Asciidoc Object.\n\n"],["new","Asciidoctor::Table","Asciidoctor/Table.html#method-c-new","(parent, attributes)",""],["new","Asciidoctor::Table::Cell","Asciidoctor/Table/Cell.html#method-c-new","(column, text, attributes = {})",""],["new","Asciidoctor::Table::Column","Asciidoctor/Table/Column.html#method-c-new","(table, index, attributes = {})",""],["new","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-c-new","(table, attributes = {})",""],["next_block","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-next_block","(reader, parent, attributes = {}, options = {})","<p>Return the next Section or Block object from the Reader.\n<p>Begins by skipping over blank lines to find the …\n"],["next_labeled_list","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-next_labeled_list","(reader, match, parent)","<p>Parse and construct a labeled (e.g., definition) list Block from the\ncurrent position of the Reader\n<p>reader … &mdash; "],["next_list","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-next_list","()","<p>Advance to the next callout list in the document\n<p>Returns nothing\n"],["next_list_item","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-next_list_item","(reader, list_block, match, sibling_trait = nil)","<p>Parse and construct the next ListItem for the current bulleted(unordered or\nordered) list Block, callout …\n"],["next_outline_list","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-next_outline_list","(reader, list_type, parent)","<p>Parse and construct an outline list Block from the current position of the\nReader\n<p>reader &mdash; The Reader from …\n"],["next_section","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-next_section","(reader, parent, attributes = {})","<p>Return the next section from the Reader.\n<p>This method process block metadata, content and subsections for …\n"],["next_table","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-next_table","(table_reader, parent, attributes)","<p>Parse the table contained in the provided Reader\n<p>table_reader &mdash; a Reader containing the source lines of …\n"],["nextval","Asciidoctor::Document","Asciidoctor/Document.html#method-i-nextval","(current)","<p>Get the next value in the sequence.\n<p>Handles both integer and character sequences.\n<p>current &mdash; the value to …\n"],["noheader","Asciidoctor::Document","Asciidoctor/Document.html#method-i-noheader","()",""],["normalize_asset_path","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-normalize_asset_path","(asset_ref, asset_name = 'path', autocorrect = true)","<p>Normalize the asset file or directory to a concrete and rinsed path\n<p>Delegates to normalize_system_path …\n"],["normalize_data","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-normalize_data","(data)","<p>Private: Normalize raw input, used for the outermost Reader.\n<p>This method strips whitespace from the end …\n"],["normalize_include_data","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-normalize_include_data","(data, indent = nil)","\n<pre>Private: Normalize raw input read from an include directive\n\nThis method strips whitespace from the end ...</pre>\n"],["normalize_system_path","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-normalize_system_path","(target, start = nil, jail = nil, opts = {})","<p>Resolve and normalize a secure path from the target and start pathsusing\nthe PathResolver.\n<p>See PathResolver::system_path …\n"],["normalize_web_path","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-normalize_web_path","(target, start = nil)","<p>Normalize the web page using the PathResolver.\n<p>See PathResolver::web_path(target, start) for details. …\n"],["notitle","Asciidoctor::Document","Asciidoctor/Document.html#method-i-notitle","()",""],["open_block","Asciidoctor::DocBook45::BlockOpenTemplate","Asciidoctor/DocBook45/BlockOpenTemplate.html#method-i-open_block","(node, id, style, role, reftext, title)",""],["open_block","Asciidoctor::HTML5::BlockOpenTemplate","Asciidoctor/HTML5/BlockOpenTemplate.html#method-i-open_block","(node, id, style, role, title, content)",""],["outline","Asciidoctor::HTML5::DocumentTemplate","Asciidoctor/HTML5/DocumentTemplate.html#method-c-outline","(node, to_depth = 2)",""],["paragraph","Asciidoctor::DocBook45::BlockParagraphTemplate","Asciidoctor/DocBook45/BlockParagraphTemplate.html#method-i-paragraph","(id, style, role, reftext, title, content)",""],["paragraph","Asciidoctor::HTML5::BlockParagraphTemplate","Asciidoctor/HTML5/BlockParagraphTemplate.html#method-i-paragraph","(id, role, title, content)",""],["parse","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-parse","(posattrs = [])",""],["parse","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse","(reader, document, options = {})","<p>Parses AsciiDoc source read from the Reader into the Document\n<p>This method is the main entry-point into …\n"],["parse!","Asciidoctor::Cli::Options","Asciidoctor/Cli/Options.html#method-c-parse-21","(args)",""],["parse!","Asciidoctor::Cli::Options","Asciidoctor/Cli/Options.html#method-i-parse-21","(args)",""],["parse_attribute","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-parse_attribute","(index = 0, pos_attrs = [])",""],["parse_attribute_value","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-parse_attribute_value","(quote)",""],["parse_attributes","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-parse_attributes","(attrline, posattrs = ['role'], opts = {})","<p>Parse the attributes in the attribute line\n<p>attrline &mdash; A String of unprocessed attributes (key/value pairs) …\n"],["parse_block_metadata_line","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_block_metadata_line","(reader, parent, attributes, options = {})","<p>Parse the next line if it contains metadata for the following block\n<p>This method handles lines with the …\n"],["parse_block_metadata_lines","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_block_metadata_lines","(reader, parent, attributes = {}, options = {})","<p>Parse lines of metadata until a line of metadata is not found.\n<p>This method processes sequential lines …\n"],["parse_cell_spec","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_cell_spec","(line, pos = :start)","<p>Parse the cell specs for the current cell.\n<p>The cell specs dictate the cell’s alignments, styles or filters,colspan, …\n"],["parse_col_specs","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_col_specs","(records)","<p>Parse the column specs for this table.\n<p>The column specs dictate the number of columns, relativewidth of …\n"],["parse_document_header","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_document_header","(reader, document)","<p>Parses the document header of the AsciiDoc source read from the Reader\n<p>Reads the AsciiDoc source from …\n"],["parse_header_metadata","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_header_metadata","(reader, document = nil)","<p>Consume and parse the two header lines (line 1 = author info, line 2 =\nrevision info).\n<p>Returns the Hash …\n"],["parse_into","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-parse_into","(attributes, posattrs = [])",""],["parse_section_title","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_section_title","(reader, document)","<p>Parse the section title from the current position of the reader\n<p>Parse a single or double-line section …\n"],["parse_style_attribute","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-parse_style_attribute","(attributes)","<p>Parse the first positional attribute and assign named attributes\n<p>Parse the first positional attribute …\n"],["partition_header_footer","Asciidoctor::Table","Asciidoctor/Table.html#method-i-partition_header_footer","(attributes)","<p>Partition the rows into header, footer and body as determinedby the options\non the table\n<p>returns nothing …\n"],["partition_path","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-partition_path","(path, web_path = false)","<p>Partition the path into path segments and remove any empty segmentsor\nsegments that are self references …\n"],["peek_line","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-peek_line","(preprocess = true)","<p>Get the next line of source data. Does not consume the line returned.\n<p>preprocess &mdash; A Boolean flag indicating …\n\n"],["peek_lines","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-peek_lines","(number = 1)","<p>TODO document &amp; test me!\n"],["playback_attributes","Asciidoctor::Document","Asciidoctor/Document.html#method-i-playback_attributes","(block_attributes)","<p>Replay attribute assignments at the block level\n"],["posixfy","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-posixfy","(path)","<p>Normalize path by converting any backslashes to forward slashes\n<p>path &mdash; the String path to normalize\n\n<p>returns …\n"],["preprocess_conditional_inclusion","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-preprocess_conditional_inclusion","(directive, target, delimiter, text)","<p>Preprocess the directive (macro) to conditionally include content.\n<p>Preprocess the conditional inclusion …\n"],["preprocess_include","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-preprocess_include","(target, raw_attributes)","<p>Preprocess the directive (macro) to include the target document.\n<p>Preprocess the directive to include the …\n"],["preprocess_next_line","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-preprocess_next_line","()","<p>Preprocess the next line until the cursor is at a line of content\n<p>Evaluate preprocessor macros on the …\n"],["preserve_endlines","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-preserve_endlines","(str, node)","<p>Preserve endlines by replacing them with the HTML line feed entity.\n<p>If the compact flag on the document’s …\n"],["process_attribute_entries","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-process_attribute_entries","(reader, parent, attributes = nil)",""],["process_attribute_entry","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-process_attribute_entry","(reader, parent, attributes = nil, match = nil)",""],["process_authors","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-process_authors","(author_line, names_only = false, multiple = true)","<p>Parse the author line into a Hash of author metadata\n<p>author_line &mdash; the String author line\n<p>names_only &mdash; a Boolean …\n"],["push_cell_spec","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-push_cell_spec","(cell_spec = {})","<p>Puts a cell spec onto the stack. Cell specs precede the delimiter, so\nastack is used to carry over the …\n"],["puts_indented","Asciidoctor::Debug","Asciidoctor/Debug.html#method-c-puts_indented","(level, *args)",""],["quote_text","Asciidoctor::DocBook45::InlineQuotedTemplate","Asciidoctor/DocBook45/InlineQuotedTemplate.html#method-i-quote_text","(text, type, role)",""],["quote_text","Asciidoctor::HTML5::InlineQuotedTemplate","Asciidoctor/HTML5/InlineQuotedTemplate.html#method-i-quote_text","(text, type, role)",""],["read_asset","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-read_asset","(path, warn_on_failure = false)","<p>Read the contents of the file at the specified path.This method assumes\nthat the path is safe to read. …\n"],["read_error","Asciidoctor::Cli::Invoker","Asciidoctor/Cli/Invoker.html#method-i-read_error","()",""],["read_next_id","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-read_next_id","()","<p>Get the next callout index in the document\n<p>Reads the next callout index in the document and advances the …\n"],["read_output","Asciidoctor::Cli::Invoker","Asciidoctor/Cli/Invoker.html#method-i-read_output","()",""],["redirect_streams","Asciidoctor::Cli::Invoker","Asciidoctor/Cli/Invoker.html#method-i-redirect_streams","(out, err = nil)",""],["register","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-register","(li_ordinal)","<p>Register a new callout for the given list item ordinal.\n<p>Generates a unique id for this callout based on …\n"],["register","Asciidoctor::Document","Asciidoctor/Document.html#method-i-register","(type, value)",""],["reindex_sections","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-reindex_sections","()","<p>Reassign the section indexes\n<p>Walk the descendents of the current Document or Sectionand reassign the\nsection …\n"],["rekey","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-rekey","(posattrs)",""],["rekey","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-c-rekey","(attributes, pos_attrs)",""],["render","Asciidoctor","Asciidoctor.html#method-c-render","(input, options = {}, &block)","<p>Parse the AsciiDoc source input into an Asciidoctor::Document and render\nitto the specified backend format …\n"],["render","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-render","(node = Object.new, locals = {})","<p>Render this template in the execution context ofthe supplied concrete\ninstance of Asciidoctor::AbstractNode …\n"],["render","Asciidoctor::Block","Asciidoctor/Block.html#method-i-render","()","<p>Get the rendered String content for this Block.  If the blockhas child\nblocks, the content method should …\n"],["render","Asciidoctor::Document","Asciidoctor/Document.html#method-i-render","(opts = {})","<p>Render the Asciidoc document using the templatesloaded by Renderer. If a\n:template_dir is not specified,or …\n"],["render","Asciidoctor::Inline","Asciidoctor/Inline.html#method-i-render","()",""],["render","Asciidoctor::Renderer","Asciidoctor/Renderer.html#method-i-render","(view, object, locals = {})","<p>Render an Asciidoc object with a specified view template.\n<p>view &mdash; the String view template name.\n<p>object &mdash; the …\n"],["render","Asciidoctor::Section","Asciidoctor/Section.html#method-i-render","()","<p>Get the rendered String content for this Section and all its childBlocks.\n"],["render","Asciidoctor::Table","Asciidoctor/Table.html#method-i-render","()","<p>Get the rendered String content for this Block.  If the blockhas child\nblocks, the content method should …\n"],["render_file","Asciidoctor","Asciidoctor.html#method-c-render_file","(filename, options = {}, &block)","<p>Parse the contents of the AsciiDoc source file into an\nAsciidoctor::Documentand render it to the specified …\n"],["renderer","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-renderer","()","<p>Get the Asciidoctor::Renderer instance being used for\ntheAsciidoctor::Document to which this node belongs …\n"],["renderer","Asciidoctor::Document","Asciidoctor/Document.html#method-i-renderer","(opts = {})",""],["require_library","Asciidoctor::Helpers","Asciidoctor/Helpers.html#method-c-require_library","(name)","<p>Prior to invoking Kernel#require, issues a warning urging amanual require\nif running in a threaded environment. …\n"],["reset_block_indent!","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-reset_block_indent-21","(lines, indent = 0)","<p>Remove the indentation (block offset) shared by all the lines, thenindent\nthe lines by the specified …\n"],["reset_streams","Asciidoctor::Cli::Invoker","Asciidoctor/Cli/Invoker.html#method-i-reset_streams","()",""],["resolve_expr_val","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-resolve_expr_val","(str)","<p>Private: Resolve the value of one side of the expression\n"],["resolve_list_marker","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-resolve_list_marker","(list_type, marker, ordinal = 0, validate = false)","<p>Resolve the 0-index marker for this list item\n<p>For ordered lists, match the marker used for this list item …\n"],["resolve_ordered_list_marker","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-resolve_ordered_list_marker","(marker, ordinal = 0, validate = false)","<p>Resolve the 0-index marker for this ordered list item\n<p>Match the marker used for this ordered list item …\n"],["resolve_subs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-resolve_subs","(subs)","<p>Resolve the list of comma-delimited subs against the possible options.\n<p>subs &mdash; A comma-delimited String of …\n\n"],["restore_attributes","Asciidoctor::Document","Asciidoctor/Document.html#method-i-restore_attributes","()","<p>Restore the attributes to the previously saved state\n"],["restore_passthroughs","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-restore_passthroughs","(text)","<p>Restore the passthrough text by reinserting into the placeholder positions\n<p>text &mdash; The String text into which …\n\n"],["result","Asciidoctor::DocBook45::BlockOpenTemplate","Asciidoctor/DocBook45/BlockOpenTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::BlockParagraphTemplate","Asciidoctor/DocBook45/BlockParagraphTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::BlockTocTemplate","Asciidoctor/DocBook45/BlockTocTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::InlineAnchorTemplate","Asciidoctor/DocBook45/InlineAnchorTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::InlineButtonTemplate","Asciidoctor/DocBook45/InlineButtonTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::InlineCalloutTemplate","Asciidoctor/DocBook45/InlineCalloutTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::InlineKbdTemplate","Asciidoctor/DocBook45/InlineKbdTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::InlineMenuTemplate","Asciidoctor/DocBook45/InlineMenuTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::InlineQuotedTemplate","Asciidoctor/DocBook45/InlineQuotedTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::DocBook45::SectionTemplate","Asciidoctor/DocBook45/SectionTemplate.html#method-i-result","(sec)",""],["result","Asciidoctor::EmptyTemplate","Asciidoctor/EmptyTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::BlockOpenTemplate","Asciidoctor/HTML5/BlockOpenTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::BlockPageBreakTemplate","Asciidoctor/HTML5/BlockPageBreakTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::BlockParagraphTemplate","Asciidoctor/HTML5/BlockParagraphTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::BlockRulerTemplate","Asciidoctor/HTML5/BlockRulerTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::BlockTocTemplate","Asciidoctor/HTML5/BlockTocTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineAnchorTemplate","Asciidoctor/HTML5/InlineAnchorTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineBreakTemplate","Asciidoctor/HTML5/InlineBreakTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineButtonTemplate","Asciidoctor/HTML5/InlineButtonTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineCalloutTemplate","Asciidoctor/HTML5/InlineCalloutTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineIndextermTemplate","Asciidoctor/HTML5/InlineIndextermTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineKbdTemplate","Asciidoctor/HTML5/InlineKbdTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineMenuTemplate","Asciidoctor/HTML5/InlineMenuTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::InlineQuotedTemplate","Asciidoctor/HTML5/InlineQuotedTemplate.html#method-i-result","(node)",""],["result","Asciidoctor::HTML5::SectionTemplate","Asciidoctor/HTML5/SectionTemplate.html#method-i-result","(sec)",""],["revdate","Asciidoctor::Document","Asciidoctor/Document.html#method-i-revdate","()","<p>Convenience method to retrieve the document attribute ‘revdate’\n<p>returns the date of last revision for …\n"],["rewind","Asciidoctor::Callouts","Asciidoctor/Callouts.html#method-i-rewind","()","<p>Rewind the list index pointer, intended to be used when switchingfrom the\nparsing to rendering phase. …\n"],["role_class","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-role_class","()","<p>create template matter to insert a style class from the role attribute if\nspecified\n"],["roman_numeral_to_int","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-roman_numeral_to_int","(value)","<p>Converts a Roman numeral to an integer value.\n<p>value &mdash; The String Roman numeral to convert\n\n<p>Returns the Integer …\n"],["sanitize_attribute_name","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-sanitize_attribute_name","(name)","<p>Convert a string to a legal attribute name.\n<p>name &mdash; the String name of the attribute\n\n<p>Returns a String with …\n"],["sanitize_attribute_name","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-sanitize_attribute_name","(name)","<p>Convert a string to a legal attribute name.\n<p>name &mdash; The String holding the Asciidoc attribute name.\n\n<p>Returns …\n"],["save_attributes","Asciidoctor::Document","Asciidoctor/Document.html#method-i-save_attributes","()","<p>Branch the attributes so that the original state can be restoredat a future\ntime.\n"],["scan_name","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-scan_name","()",""],["scan_to_delimiter","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-scan_to_delimiter","()",""],["scan_to_quote","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-scan_to_quote","(quote)",""],["section_level","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-section_level","(line)","<p>Private: Get the Integer section level based on the charactersused in the\nASCII line under the section …\n"],["sections","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-sections","()","<p>Get the Array of child Section objects\n<p>Only applies to Document and Section instances\n<p>Examples\n"],["sectnum","Asciidoctor::Section","Asciidoctor/Section.html#method-i-sectnum","(delimiter = '.', append = nil)","<p>Get the section number for the current Section\n<p>The section number is a unique, dot separated Stringwhere …\n"],["set_attr","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-set_attr","(key, val, overwrite = nil)","<p>Assign the value to the specified key in thisblock’s attributes hash.\n<p>key &mdash; The attribute key (or name) …\n"],["set_attribute","Asciidoctor::Document","Asciidoctor/Document.html#method-i-set_attribute","(name, value)","<p>Set the specified attribute on the document if the name is not locked\n<p>If the attribute is locked, false …\n"],["set_debug","Asciidoctor::Debug","Asciidoctor/Debug.html#method-c-set_debug","(value)",""],["show_debug_output?","Asciidoctor::Debug","Asciidoctor/Debug.html#method-c-show_debug_output-3F","()",""],["single_line_section_level","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-single_line_section_level","(marker)",""],["size","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-size","()","<p>Get the Integer number of blocks in this block\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">section</span> = <span class=\"ruby-constant\">Section</span>.<span class=\"ruby-identifier\">new</span>\n\n<span class=\"ruby-identifier\">section</span>.<span class=\"ruby-identifier\">size</span>\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">0</span>\n\n<span class=\"ruby-identifier\">section</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["skip_blank","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-skip_blank","()",""],["skip_blank_lines","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-skip_blank_lines","()","<p>Private: Strip off leading blank lines in the Array of lines.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@lines</span>\n=<span class=\"ruby-operator\">&gt;</span> [<span class=\"ruby-string\">&quot;\\n&quot;</span>, <span class=\"ruby-string\">&quot;\\t\\n&quot;</span>, <span class=\"ruby-string\">&quot;Foo\\n&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["skip_comment_lines","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-skip_comment_lines","(options = {})",""],["skip_delimiter","Asciidoctor::AttributeList","Asciidoctor/AttributeList.html#method-i-skip_delimiter","()",""],["skip_matched_delimiter","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-skip_matched_delimiter","(match, escaped = false)","<p>Skip beyond the matched delimiter because it was a false positive(either\nbecause it was escaped or in …\n"],["source","Asciidoctor::Document","Asciidoctor/Document.html#method-i-source","()","<p>Make the raw source for the Document available.\n"],["source_lines","Asciidoctor::Document","Asciidoctor/Document.html#method-i-source_lines","()","<p>Make the raw source lines for the Document available.\n"],["starts_with_delimiter?","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-starts_with_delimiter-3F","(line)","<p>Checks whether the line provided starts with the cell delimiterused by this\ntable.\n<p>returns true if the …\n"],["store_attribute","Asciidoctor::Lexer","Asciidoctor/Lexer.html#method-c-store_attribute","(name, value, doc = nil, attrs = nil)","<p>Store the attribute in the document and register attribute entry if\naccessible\n<p>name &mdash; the String name of …\n"],["style_class","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-style_class","(sibling = true)","<p>create template matter to insert a style class from the style attribute if\nspecified\n"],["sub_attributes","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_attributes","(data)","<p>Substitute attribute references\n<p>Attribute references are in the format {name}.\n<p>If an attribute referenced …\n"],["sub_callouts","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_callouts","(text)","<p>Substitute callout references\n<p>text &mdash; The String text to process\n\n<p>returns The String with the callout references …\n"],["sub_macros","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_macros","(text)","<p>Substitute inline macros (e.g., links, images, etc)\n<p>Replace inline macros, which may span multiple lines, …\n"],["sub_post_replacements","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_post_replacements","(text)","<p>Substitute post replacements\n<p>text &mdash; The String text to process\n\n<p>returns The String with the post replacements …\n"],["sub_quotes","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_quotes","(text)","<p>Substitute quoted text (includes emphasis, strong, monospaced, etc)\n<p>text &mdash; The String text to process\n\n<p>returns …\n"],["sub_replacements","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_replacements","(text)","<p>Substitute replacement characters (e.g., copyright, trademark, etc)\n<p>text &mdash; The String text to process\n\n<p>returns …\n"],["sub_specialcharacters","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-sub_specialcharacters","(text)","<p>Substitute special characters (i.e., encode XML)\n<p>Special characters are defined in the Asciidoctor::SPECIAL_CHARS …\n"],["system_path","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-system_path","(target, start, jail = nil, opts = {})","<p>Resolve a system path from the target and start paths. If a jailpath is\nspecified, enforce that the resolved …\n"],["tag","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-tag","(name, key, dynamic = false)",""],["take_cell_spec","Asciidoctor::Table::ParserContext","Asciidoctor/Table/ParserContext.html#method-i-take_cell_spec","()","<p>Takes a cell spec from the stack. Cell specs precede the delimiter, so\nastack is used to carry over the …\n"],["template","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockAdmonitionTemplate","Asciidoctor/DocBook45/BlockAdmonitionTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockColistTemplate","Asciidoctor/DocBook45/BlockColistTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockDlistTemplate","Asciidoctor/DocBook45/BlockDlistTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockExampleTemplate","Asciidoctor/DocBook45/BlockExampleTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockFloatingTitleTemplate","Asciidoctor/DocBook45/BlockFloatingTitleTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockImageTemplate","Asciidoctor/DocBook45/BlockImageTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockListingTemplate","Asciidoctor/DocBook45/BlockListingTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockLiteralTemplate","Asciidoctor/DocBook45/BlockLiteralTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockOlistTemplate","Asciidoctor/DocBook45/BlockOlistTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockOpenTemplate","Asciidoctor/DocBook45/BlockOpenTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockPageBreakTemplate","Asciidoctor/DocBook45/BlockPageBreakTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockParagraphTemplate","Asciidoctor/DocBook45/BlockParagraphTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockPassTemplate","Asciidoctor/DocBook45/BlockPassTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockPreambleTemplate","Asciidoctor/DocBook45/BlockPreambleTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockQuoteTemplate","Asciidoctor/DocBook45/BlockQuoteTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockRulerTemplate","Asciidoctor/DocBook45/BlockRulerTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockSidebarTemplate","Asciidoctor/DocBook45/BlockSidebarTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockTableTemplate","Asciidoctor/DocBook45/BlockTableTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockTocTemplate","Asciidoctor/DocBook45/BlockTocTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockUlistTemplate","Asciidoctor/DocBook45/BlockUlistTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::BlockVerseTemplate","Asciidoctor/DocBook45/BlockVerseTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::DocumentTemplate","Asciidoctor/DocBook45/DocumentTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::EmbeddedTemplate","Asciidoctor/DocBook45/EmbeddedTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineAnchorTemplate","Asciidoctor/DocBook45/InlineAnchorTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineBreakTemplate","Asciidoctor/DocBook45/InlineBreakTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineButtonTemplate","Asciidoctor/DocBook45/InlineButtonTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineCalloutTemplate","Asciidoctor/DocBook45/InlineCalloutTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineFootnoteTemplate","Asciidoctor/DocBook45/InlineFootnoteTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineImageTemplate","Asciidoctor/DocBook45/InlineImageTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineIndextermTemplate","Asciidoctor/DocBook45/InlineIndextermTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineKbdTemplate","Asciidoctor/DocBook45/InlineKbdTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineMenuTemplate","Asciidoctor/DocBook45/InlineMenuTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::InlineQuotedTemplate","Asciidoctor/DocBook45/InlineQuotedTemplate.html#method-i-template","()",""],["template","Asciidoctor::DocBook45::SectionTemplate","Asciidoctor/DocBook45/SectionTemplate.html#method-i-template","()",""],["template","Asciidoctor::EmptyTemplate","Asciidoctor/EmptyTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockAdmonitionTemplate","Asciidoctor/HTML5/BlockAdmonitionTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockAudioTemplate","Asciidoctor/HTML5/BlockAudioTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockColistTemplate","Asciidoctor/HTML5/BlockColistTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockDlistTemplate","Asciidoctor/HTML5/BlockDlistTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockExampleTemplate","Asciidoctor/HTML5/BlockExampleTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockFloatingTitleTemplate","Asciidoctor/HTML5/BlockFloatingTitleTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockImageTemplate","Asciidoctor/HTML5/BlockImageTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockListingTemplate","Asciidoctor/HTML5/BlockListingTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockLiteralTemplate","Asciidoctor/HTML5/BlockLiteralTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockOlistTemplate","Asciidoctor/HTML5/BlockOlistTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockOpenTemplate","Asciidoctor/HTML5/BlockOpenTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockPageBreakTemplate","Asciidoctor/HTML5/BlockPageBreakTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockParagraphTemplate","Asciidoctor/HTML5/BlockParagraphTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockPassTemplate","Asciidoctor/HTML5/BlockPassTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockPreambleTemplate","Asciidoctor/HTML5/BlockPreambleTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockQuoteTemplate","Asciidoctor/HTML5/BlockQuoteTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockRulerTemplate","Asciidoctor/HTML5/BlockRulerTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockSidebarTemplate","Asciidoctor/HTML5/BlockSidebarTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockTableTemplate","Asciidoctor/HTML5/BlockTableTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockTocTemplate","Asciidoctor/HTML5/BlockTocTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockUlistTemplate","Asciidoctor/HTML5/BlockUlistTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockVerseTemplate","Asciidoctor/HTML5/BlockVerseTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::BlockVideoTemplate","Asciidoctor/HTML5/BlockVideoTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::DocumentTemplate","Asciidoctor/HTML5/DocumentTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::EmbeddedTemplate","Asciidoctor/HTML5/EmbeddedTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineAnchorTemplate","Asciidoctor/HTML5/InlineAnchorTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineBreakTemplate","Asciidoctor/HTML5/InlineBreakTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineButtonTemplate","Asciidoctor/HTML5/InlineButtonTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineCalloutTemplate","Asciidoctor/HTML5/InlineCalloutTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineFootnoteTemplate","Asciidoctor/HTML5/InlineFootnoteTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineImageTemplate","Asciidoctor/HTML5/InlineImageTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineIndextermTemplate","Asciidoctor/HTML5/InlineIndextermTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineKbdTemplate","Asciidoctor/HTML5/InlineKbdTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineMenuTemplate","Asciidoctor/HTML5/InlineMenuTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::InlineQuotedTemplate","Asciidoctor/HTML5/InlineQuotedTemplate.html#method-i-template","()",""],["template","Asciidoctor::HTML5::SectionTemplate","Asciidoctor/HTML5/SectionTemplate.html#method-i-template","()",""],["template_classes","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-c-template_classes","()",""],["text","Asciidoctor::ListItem","Asciidoctor/ListItem.html#method-i-text","()",""],["text","Asciidoctor::Table::Cell","Asciidoctor/Table/Cell.html#method-i-text","()","<p>Get the text with normal substitutions applied for this cell. Used for\ncells in the head rows\n"],["text?","Asciidoctor::ListItem","Asciidoctor/ListItem.html#method-i-text-3F","()",""],["title","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-title","()","<p>Get the String title of this Block with title substitions applied\n<p>The following substitutions are applied …\n"],["title","Asciidoctor::Document","Asciidoctor/Document.html#method-i-title","()","<p>The title explicitly defined in the document attributes\n"],["title=","Asciidoctor::Document","Asciidoctor/Document.html#method-i-title-3D","(title)",""],["title?","Asciidoctor::AbstractBlock","Asciidoctor/AbstractBlock.html#method-i-title-3F","()","<p>A convenience method that indicates whether the title instancevariable is\nblank (nil or empty)\n"],["title_div","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-title_div","(opts = {})",""],["title_tag","Asciidoctor::BaseTemplate","Asciidoctor/BaseTemplate.html#method-i-title_tag","(optional = true)",""],["title_tags","Asciidoctor::DocBook45::DocumentTemplate","Asciidoctor/DocBook45/DocumentTemplate.html#method-i-title_tags","(str)",""],["to_s","Asciidoctor::Block","Asciidoctor/Block.html#method-i-to_s","()",""],["to_s","Asciidoctor::Document","Asciidoctor/Document.html#method-i-to_s","()",""],["to_s","Asciidoctor::ListItem","Asciidoctor/ListItem.html#method-i-to_s","()",""],["to_s","Asciidoctor::Section","Asciidoctor/Section.html#method-i-to_s","()",""],["to_s","Asciidoctor::Table::Cell","Asciidoctor/Table/Cell.html#method-i-to_s","()",""],["toc","Asciidoctor::HTML5::BlockPreambleTemplate","Asciidoctor/HTML5/BlockPreambleTemplate.html#method-i-toc","(node)",""],["transform_quoted_text","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-transform_quoted_text","(match, type, scope)","<p>Transform (render) a quoted text region\n<p>match &mdash; The MatchData for the quoted text region\n<p>type &mdash; The quoting …\n"],["unescape_bracketed_text","Asciidoctor::Substituters","Asciidoctor/Substituters.html#method-i-unescape_bracketed_text","(text)","<p>Strip bounding whitespace, fold endlines and unescaped closingsquare\nbrackets from text extracted from …\n"],["unshift","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-unshift","(*new_lines)","<p>Push Array of lines onto the front of the Array of source data, unless\n`lines` has no non-nil values. …\n"],["unshift_line","Asciidoctor::Reader","Asciidoctor/Reader.html#method-i-unshift_line","(line)","<p>Push the String line onto the beginning of the Array of source data.\n<p>Since this line was (assumed to be) …\n"],["update_attributes","Asciidoctor::AbstractNode","Asciidoctor/AbstractNode.html#method-i-update_attributes","(attributes)","<p>Update the attributes of this node with the new values inthe attributes\nargument.\n<p>If an attribute already …\n"],["update_backend_attributes","Asciidoctor::Document","Asciidoctor/Document.html#method-i-update_backend_attributes","()","<p>Update the backend attributes to reflect a change in the selected backend\n"],["views","Asciidoctor::Renderer","Asciidoctor/Renderer.html#method-i-views","()",""],["web_path","Asciidoctor::PathResolver","Asciidoctor/PathResolver.html#method-i-web_path","(target, start = nil)","<p>Resolve a web path from the target and start paths.The main function of\nthis operation is to resolve …\n"],["README.adoc","","README_adoc.html","","<p>Asciidoctor\n<p>:awestruct-layout: base :homepage: asciidoctor.org :asciidoc: asciidoc.org\n:sources: github.com/asciidoctor/asciidoctor …\n"]]}}