<?xml version="1.0" encoding="utf-8" ?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
<id>http://asciidoctor.org/</id>
<title>Asciidoctor</title>
<updated>2013-07-16T12:36:32-06:00</updated>
<link href="http://asciidoctor.org/feed.atom" rel="self" type="application/atom+xml" />
<link href="http://asciidoctor.org/" rel="alternate" type="text/html" />
<entry>
<id>http://asciidoctor.org/news/2013/07/16/oscon-2013-docs-workshop-preview/</id>
<title>Easier Documentation, Simpler Websites And Faster Collaboration @ OSCON 2013</title>
<updated>2013-07-16T12:36:32-06:00</updated>
<published>2013-07-16T12:36:32-06:00</published>
<link href="http://asciidoctor.org/news/2013/07/16/oscon-2013-docs-workshop-preview/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="github" />
<category scheme="http://asciidoctor.org/news/tags" term="awestruct" />
<category scheme="http://asciidoctor.org/news/tags" term="content-strategy" />
<summary>
Do you find producing and collaborating on documentation or web content difficult?
At OSCON 2013, we&#8217;ll work with you to reduce the friction of creating content by simplifying your content workflow, teaching you how to collaborate more efficiently and helping to make writing and publishing enjoyable!








Join us on Tuesday, July 23 at our workshop titled Easier Documentation, Simpler Websites And Faster Collaboration to learn about tools and techniques that lighten your documentation workload and jumpstart your content strategy.
To attend, register for OSCON 2013, then sign up for the workshop!


TIP: Use code ARQIKE for a 20% discount off registration!





How?


It begins with writing......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Do you find producing and collaborating on documentation or web content difficult?
At OSCON 2013, we&amp;#8217;ll work with you to reduce the friction of creating content by simplifying your content workflow, teaching you how to collaborate more efficiently and helping to make writing and publishing enjoyable!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;https://en.oreilly.com/oscon2013/public/register/order&quot;&gt;&lt;img src=&quot;http://cdn.oreillystatic.com/en/assets/1/event/95/oscon2013_attending_300x250.png&quot; alt=&quot;OSCON banner&quot; width=&quot;260&quot; height=&quot;200&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Join us on Tuesday, July 23 at our workshop titled &lt;a href=&quot;http://www.oscon.com/oscon2013/public/schedule/detail/29335&quot;&gt;Easier Documentation, Simpler Websites And Faster Collaboration&lt;/a&gt; to learn about tools and techniques that lighten your documentation workload and jumpstart your content strategy.
To attend, register for OSCON 2013, then sign up for the workshop!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; Use code &lt;strong&gt;ARQIKE&lt;/strong&gt; for a 20% discount off &lt;a href=&quot;https://en.oreilly.com/oscon2013/public/register/order&quot;&gt;registration&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#how&quot;&gt;&lt;/a&gt;How?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;it-begins-with-writing-content&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#it-begins-with-writing-content&quot;&gt;&lt;/a&gt;It begins with writing content&amp;#8230;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;in the same format you use to write e-mail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;Plain text *embellished* with _subtle_ markup.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Indeed, that&amp;#8217;s the focus of the lightweight markup language &lt;a href=&quot;http://asciidoctor.org/what-is-asciidoc&quot;&gt;AsciiDoc&lt;/a&gt;.
The AsciiDoc syntax feels natural and that keeps you focused on the content.
Content written in AsciiDoc is easy to read and edit in raw form, which facilitates collaboration.
It can also be translated into HTML for presentation, hello web publishing!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock thumb right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;http://foundation.zurb.com&quot;&gt;&lt;img src=&quot;http://asciidoctor.org/images/zurb-foundation-yeti.png&quot; alt=&quot;Zurb Foundation Yeti&quot; width=&quot;260&quot; height=&quot;160&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;next-we-do-some-baking&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#next-we-do-some-baking&quot;&gt;&lt;/a&gt;Next, we do some baking.&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After composing some documentation in AsciiDoc, we&amp;#8217;ll pull together our content into a cohesive website using the static site generators &lt;a href=&quot;http://awestruct.org&quot;&gt;Awestruct&lt;/a&gt; and &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;.
Then we&amp;#8217;ll leverage CSS frameworks like &lt;a href=&quot;http://bootstrap.twitter.com&quot;&gt;Bootstrap&lt;/a&gt; and &lt;a href=&quot;http://foundation.zurb.com&quot;&gt;Zurb Foundation&lt;/a&gt; to dress up the content with an elegant look and feel.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;it-s-push-to-publish&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#it-s-push-to-publish&quot;&gt;&lt;/a&gt;It&amp;#8217;s push to publish!&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ll then publish our website to GitHub Pages using a single command, &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s when the real fun starts.
From GitHub, we can &lt;a href=&quot;https://github.com/blog/1557-github-flow-in-the-browser&quot;&gt;collaborate on the content&lt;/a&gt; using git and the web-based collaboration tools in the GitHub interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;https://github.com/asciidoctor/asciidoctor.github.com/commits/develop/docs/asciidoc-syntax-quick-reference.adoc&quot;&gt;&lt;img src=&quot;http://asciidoctor.org/images/github-history.png&quot; alt=&quot;Revision history in GitHub&quot; width=&quot;360&quot; height=&quot;270&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;The revision history is safely tucked away in the git repository.&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;don-t-forget-to-chunk&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#don-t-forget-to-chunk&quot;&gt;&lt;/a&gt;Don&amp;#8217;t forget to chunk!&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are billions of devices connected to the web.
And more are coming.
Regardless of how the device market changes over time, the challenge for us remains the same.
We need to get our content on &lt;em&gt;all&lt;/em&gt; of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;AsciiDoc is more than just a lightweight markup language.
It enables and encourages us to write reusable, structured content.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image right&quot;&gt;&lt;img src=&quot;http://asciidoctor.org/images/chunking.jpg&quot; alt=&quot;Chunking&quot; width=&quot;400&quot; height=&quot;192&quot;&gt;&lt;/span&gt; Reusable content can be mixed and matched with other content to create a composition that suits a device, context or situation.
It&amp;#8217;s also a way to keep our content DRY (Don&amp;#8217;t Repeat Yourself) so we don&amp;#8217;t have to update the same content in a dozen places, or even two.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Structured content is meaningful, semantic content that is flagged using metadata.
We can do lots of things with a document if we know what&amp;#8217;s in it.
We can pull out a lead or excerpt.
We can hide content when it isn&amp;#8217;t needed.
We can present a structure and allow the user to drill into what they want to see.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Content no longer lives on a &amp;#8220;page&amp;#8221;.
The future unit of publishing is the &lt;a href=&quot;http://asciidoctor.org/news/2013/07/16/oscon-2013-docs-workshop-preview&quot;&gt;&amp;#8220;chunk&amp;#8221;&lt;/a&gt;.
These smaller, discrete sources can be tuned to specific platforms or aggregated using automation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The web is changing.
It&amp;#8217;s left the desktop.
It&amp;#8217;s now a road warrior.
The way we think about content publishing must adapt.
More than ever before, we &lt;strong&gt;must&lt;/strong&gt; separate content from presentation.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;recap&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#recap&quot;&gt;&lt;/a&gt;Recap&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Writing documentation is hard.
So we don&amp;#8217;t do it often enough.
And yet, we&amp;#8217;re skipping out on the best opportunity to reach and influence our target audience.
Let&amp;#8217;s do something about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Attend &lt;a href=&quot;http://www.oscon.com/oscon2013/public/schedule/detail/29335&quot;&gt;Easier Documentation, Simpler Websites And Faster Collaboration&lt;/a&gt; to learn how:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;lightweight markup makes writing documentation easier&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;static site generators and CSS frameworks make websites simpler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git and GitHub make collaborating on content and publishing it online faster&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8230;all powered by open source software:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:33%;&quot;&gt;
&lt;col style=&quot;width:33%;&quot;&gt;
&lt;col style=&quot;width:33%;&quot;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Ruby&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Git&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;AsciiDoc / Asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Awestruct&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Jekyll&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Haml / Slim&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;SASS / Compass&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Zurb Foundation&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Travis CI&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s bake better documentation, together.
Documentation that&amp;#8217;s &lt;em&gt;reusable&lt;/em&gt; and &lt;em&gt;structured&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;what-where-and-when&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#what-where-and-when&quot;&gt;&lt;/a&gt;What, Where and When?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;hdlist&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Title: 
&lt;br&gt;
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;Easier Documentation, Simpler Websites And Faster Collaboration&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Date: 
&lt;br&gt;
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;Tuesday, July 23, 2013&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Time: 
&lt;br&gt;
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;1:30 - 5:00 PM (3h 30m)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Room: 
&lt;br&gt;
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;D139/140, Oregon Convention Center&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Type: 
&lt;br&gt;
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;Workshop&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Category: 
&lt;br&gt;
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;Tools &amp;amp; Techniques&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find all the details about the workshop, including the session abstract, on the &lt;a href=&quot;http://www.oscon.com/oscon2013/public/schedule/detail/29335&quot;&gt;official session page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;who&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#who&quot;&gt;&lt;/a&gt;Who?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;attendees&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#attendees&quot;&gt;&lt;/a&gt;Attendees&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Open source community members like you who are passionate about documentation and web publishing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Not sure if that&amp;#8217;s you?
Do you contribute to, maintain or organize any of the following?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;manuals, user guides, tutorials or READMEs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;news, press releases or announcements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;articles or books&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;brochures or press kits&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;conference or event information&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;request for proposals (RFPs)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;resume or personal site&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you nodded, then you&amp;#8217;re one of us :)&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;trainers&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#trainers&quot;&gt;&lt;/a&gt;Trainers&lt;/h3&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;
&lt;span class=&quot;image thumb right&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://github.com/mojavelinux&quot;&gt;&lt;img src=&quot;https://github.com/mojavelinux.png&quot; alt=&quot;mojavelinux&quot;&gt;&lt;/a&gt;&lt;/span&gt; Dan Allen&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dan is an open source advocate, community catalyst, author and speaker. He proudly pursues these passions as a Red Hat employee and community member.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In his role as Principal Software Engineer at Red Hat, he leads the Asciidoctor project and serves as the community manager for Arquillian.
He draws on these experiences to help make a variety of open source projects wildly successful.
Besides drinking a Trappist beer or indulging in Belgian chocolate, there&amp;#8217;s nothing he&amp;#8217;d rather do.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;
&lt;span class=&quot;image thumb right&quot;&gt;&lt;a class=&quot;image&quot; href=&quot;https://github.com/graphitefriction&quot;&gt;&lt;img src=&quot;https://github.com/graphitefriction.png&quot; alt=&quot;graphitefriction&quot;&gt;&lt;/a&gt;&lt;/span&gt; Sarah White&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sarah is the content strategist for both the Arquillian and Asciidoctor projects&amp;#8212;an ideal position for someone passionate about open source, alien invasions and writing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If there&amp;#8217;s room for improvement, Sarah will find it.
&lt;em&gt;Lots of it.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Long ago, in a not-too-distant galaxy, she assessed hazardous waste sites and tracked pesticide routes through watersheds.
So she knows a thing or two about identifying and eradicating stuff that kills, including software bugs and poor documentation.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;prerequisites&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#prerequisites&quot;&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Knowledge of HTML and being comfortable using the commandline are both essential.
Some knowledge of git and Ruby is useful, though a novice should be able to pick up the necessary training &amp;#8220;on the job&amp;#8221;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Laptop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com&quot;&gt;GitHub account&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ruby 1.9 (or JRuby 1.7)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt; &lt;code&gt;apt-get install rubygems&lt;/code&gt;, &lt;code&gt;yum install rubygems&lt;/code&gt; or equivalent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OSX:&lt;/strong&gt; Available by default&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt; &lt;a href=&quot;http://rubyinstaller.org&quot;&gt;RubyInstaller&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://git-scm.com/downloads&quot;&gt;Git client&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt; &lt;code&gt;apt-get install git&lt;/code&gt;, &lt;code&gt;yum install git&lt;/code&gt; or equivalent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OSX:&lt;/strong&gt; &lt;a href=&quot;http://mac.github.com&quot;&gt;GitHub for Mac&lt;/a&gt; (also installs git)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt; &lt;a href=&quot;http://windows.github.com&quot;&gt;GitHub for Windows&lt;/a&gt; (also installs git)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Text editor&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;reading-list&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#reading-list&quot;&gt;&lt;/a&gt;Reading list&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve prepared some reading material that will give you a better idea of what the session is about and what you&amp;#8217;ll be learning.
These resources should also help you continue to learn about the subject after the workshop is over.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Strategy&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://blogs.hbr.org/cs/2013/06/dont_let_paper_paradigms_drive.html&quot;&gt;Don&amp;#8217;t Let Paper Paradigms Drive Your Digital Strategy&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://aneventapart.com/news/post/aea-video-karen-mcgrane-adapting-ourselves-to-adaptive-content&quot;&gt;Adapting Ourselves to Adaptive Content&lt;/a&gt; &lt;em class=&quot;icon-facetime-video&quot;&gt;&lt;/em&gt; &amp;#8592; &lt;strong&gt;a must see!&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://contentstrategy.com/book.html&quot;&gt;Content Strategy for the Web&lt;/a&gt; &lt;em class=&quot;icon-book&quot;&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Tech&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoctor.org/docs/what-is-asciidoc-why-use-it&quot;&gt;What is AsciiDoc? Why do we need it?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://awestruct.org/getting_started&quot;&gt;Getting Started with Awestruct&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/blog/1557-github-flow-in-the-browser&quot;&gt;GitHub Flow in the Browser&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A full list of resources is available on the &lt;a href=&quot;https://github.com/graphitefriction/oscon-2013-docs-workshop/wiki/Reference%20Resources&quot;&gt;Reference Resources&lt;/a&gt; page on the workshop&amp;#8217;s wiki.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;We look forward to seeing you at OSCON!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/06/23/asciidoctor-maven-plugin-0-1-3-1-released/</id>
<title>Asciidoctor Maven plugin 0.1.3.1 released!</title>
<updated>2013-06-23T20:05:00-06:00</updated>
<published>2013-06-23T20:05:00-06:00</published>
<link href="http://asciidoctor.org/news/2013/06/23/asciidoctor-maven-plugin-0-1-3-1-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
I&#8217;m proud to announce the Asciidoctor Maven plugin 0.1.3.1 release!
This is simply a bug fix release to correct some of the things I messed up with 0.1.3 (sorry about that).
Like version 0.1.3 before it, it&#8217;s based on the same version of the Asciidoctor Java integration project and the Asciidoctor projects&#8201;&#8212;&#8201;0.1.3.


Thank you to all the contributors for helping out.


Go forth and make great documentation once again!


Plugin artifact information




 



Group ID
Artifact ID
Latest versions
Download




org.asciidoctor
asciidoctor-maven-plugin
0.1.3.1
pom jar




Upgrading to 0.1.3.1 (recommended) is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.


For more information about issues fixed in this release,......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m proud to announce the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt; 0.1.3.1 release!
This is simply a bug fix release to correct some of the things I messed up with 0.1.3 (sorry about that).
Like version 0.1.3 before it, it&amp;#8217;s based on the same version of the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration#readme&quot;&gt;Asciidoctor Java integration&lt;/a&gt; project and the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor&quot;&gt;Asciidoctor&lt;/a&gt; projects&amp;#8201;&amp;#8212;&amp;#8201;0.1.3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you to all the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/contributors&quot;&gt;contributors&lt;/a&gt; for helping out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Go forth and make great documentation once again!&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Plugin artifact information&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Group ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Artifact ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Latest versions&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctor-maven-plugin%22&quot;&gt;asciidoctor-maven-plugin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctor-maven-plugin%7C0.1.3.1%7Cmaven-plugin&quot;&gt;0.1.3.1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.3.1/asciidoctor-maven-plugin-0.1.3.1.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.3.1/asciidoctor-maven-plugin-0.1.3.1.jar&quot;&gt;jar&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Upgrading to 0.1.3.1 (recommended) is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information about issues fixed in this release, please see the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/issues?milestone=6&amp;amp;state=closed&quot;&gt;0.1.3.1 milestone&lt;/a&gt; in the issue tracker!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/06/12/asciidoctor-maven-plugin-0-1-3-released/</id>
<title>Asciidoctor Maven plugin 0.1.3 released!</title>
<updated>2013-06-12T00:58:44-06:00</updated>
<published>2013-06-12T00:58:44-06:00</published>
<link href="http://asciidoctor.org/news/2013/06/12/asciidoctor-maven-plugin-0-1-3-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
It has taken me a little while longer to get this release out the door than I would have hoped, but it&#8217;s here at last!
I&#8217;m proud to release Asciidoctor Maven plugin version 0.1.3!
Like the other versions before it, it is based on the same version of the Asciidoctor Java integration project and the Asciidoctor projects&#8201;&#8212;&#8201;0.1.3.


There&#8217;s very little new things for the end user in this release as the changes were mostly to use some of the new ease of use things from the Java Integration project.


I would like to call out the help of Brian Leathem in this release in......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It has taken me a little while longer to get this release out the door than I would have hoped, but it&amp;#8217;s here at last!
I&amp;#8217;m proud to release &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt; version 0.1.3!
Like the other versions before it, it is based on the same version of the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration#readme&quot;&gt;Asciidoctor Java integration&lt;/a&gt; project and the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor&quot;&gt;Asciidoctor&lt;/a&gt; projects&amp;#8201;&amp;#8212;&amp;#8201;0.1.3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s very little new things for the end user in this release as the changes were mostly to use some of the new ease of use things from the Java Integration project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I would like to call out the help of &lt;a href=&quot;https://github.com/bleathem&quot;&gt;Brian Leathem&lt;/a&gt; in this release in helping me go through a few things and pushing me to release it. Also, thank you to all the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/contributors&quot;&gt;contributors&lt;/a&gt; for helping out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Go forth and make great documentation once again!&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Plugin artifact information&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Group ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Artifact ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Latest versions&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctor-maven-plugin%22&quot;&gt;asciidoctor-maven-plugin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctor-maven-plugin%7C0.1.3%7Cmaven-plugin&quot;&gt;0.1.3&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.3/asciidoctor-maven-plugin-0.1.3.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.3/asciidoctor-maven-plugin-0.1.3.jar&quot;&gt;jar&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Upgrading to 0.1.3 (recommended) is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information about issues fixed in this release, please see the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/issues?milestone=4&amp;amp;state=closed&quot;&gt;0.1.3 milestone&lt;/a&gt; in the issue tracker!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/06/03/asciidoclet-announcement/</id>
<title>Write Javadocs in AsciiDoc with Asciidoclet</title>
<updated>2013-06-03T23:47:37-06:00</updated>
<published>2013-06-03T23:47:37-06:00</published>
<link href="http://asciidoctor.org/news/2013/06/03/asciidoclet-announcement/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
We&#8217;re excited to announce the newest member of the Asciidoctor family, Asciidoclet. Asciidoclet is a Javadoc Doclet based on Asciidoctor that enables developers to write Javadoc comments using the AsciiDoc syntax.





Motivation


From the very beginning, a concept the designers of Java got right was to include documentation with source code. This allowed documentation to stay closer in sync with ever-changing source and allowed multiple viewing platforms, most notably the HTML generation and IDE integration.


The main drawback of Javadoc has been the requirement to use embedded HTML fragments to achieve advanced (or even modest) formatting. This is where the AsciiDoc integration shines.......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re excited to announce the newest member of the &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt; family, &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt;. &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt; is a Javadoc Doclet based on &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt; that enables developers to write Javadoc comments using the &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; syntax.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;motivation&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#motivation&quot;&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the very beginning, a concept the designers of Java got right was to include documentation with source code. This allowed documentation to stay closer in sync with ever-changing source and allowed multiple viewing platforms, most notably the HTML generation and IDE integration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main drawback of Javadoc has been the requirement to use embedded HTML fragments to achieve advanced (or even modest) formatting. This is where the &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; integration shines. Being a lightweight markup language, &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; gives developers access to advanced formatting without having to fiddle with low-level HTML markup. In other words, developers can focus on &lt;em&gt;the content&lt;/em&gt; rather than &lt;em&gt;the markup&lt;/em&gt; and still achieve a beautiful end result.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pairing AsciiDoc with Javadocs means readable source and beautifully rendered Javadocs, &lt;em&gt;the best of both worlds!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt; is plugged into Javadoc, it&amp;#8217;s just a matter of using &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; mark up in Javadocs. The following example demonstrates a number of features of &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;/**
 * = Asciidoclet &lt;i class=&quot;conum&quot;&gt;1&lt;/i&gt;
 *
 * Sample comments that include +source code+. &lt;i class=&quot;conum&quot;&gt;2&lt;/i&gt;
 *
 * [source,java] &lt;i class=&quot;conum&quot;&gt;3&lt;/i&gt;
 * --
 * public class Asciidoclet extends Doclet {
 *     private final Asciidoctor asciidoctor = Asciidoctor.Factory.create();
 *
 *     @SuppressWarnings(&quot;UnusedDeclaration&quot;) &lt;i class=&quot;conum&quot;&gt;4&lt;/i&gt;
 *     public static boolean start(RootDoc rootDoc) {
 *         new Asciidoclet().render(rootDoc);
 *         return Standard.start(rootDoc);
 *     }
 * }
 * --
 *
 * @author https://github.com/johncarl81[John Ericksen] &lt;i class=&quot;conum&quot;&gt;5&lt;/i&gt;
 */
public class Asciidoclet extends Doclet {
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;1&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;Titles are easy to create using the &lt;code&gt;=&lt;/code&gt; markup.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;2&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;Paragraphs are the default and do not require the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; html tag. Inline source may be marked up by surrounding the text in &lt;code&gt;+&lt;/code&gt; symbols.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;3&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;Source is easily marked up using the &lt;code&gt;[source,language]&lt;/code&gt; tag and block delimiters, &lt;code&gt;--&lt;/code&gt;, also called &quot;fences&quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;4&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;The notorious &lt;code&gt;@&lt;/code&gt; symbol is automatically handled by &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt;, avoiding the standard &lt;code&gt;{@literal @}&lt;/code&gt; boilerplate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;5&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;Inline &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; markup is available within Javadoc tags. This example highlights link rendering.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;distribution&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#distribution&quot;&gt;&lt;/a&gt;Distribution&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoclet is published to Maven Central. The artifact information is summarized in the table below.&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Artifact information for Asciidoclet&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:20%;&quot;&gt;
&lt;col style=&quot;width:20%;&quot;&gt;
&lt;col style=&quot;width:20%;&quot;&gt;
&lt;col style=&quot;width:40%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Group Id&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Artifact Id&lt;/th&gt;
&lt;th class=&quot;tableblock halign-center valign-top&quot;&gt;Version&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoclet%22&quot;&gt;asciidoclet&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoclet%7C0.1.3%7Cjar&quot;&gt;0.1.3&lt;/a&gt;*&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoclet/0.1.3/asciidoclet-0.1.3.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoclet/0.1.3/asciidoclet-0.1.3.jar&quot;&gt;jar&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoclet/0.1.3/asciidoclet-0.1.3-javadoc.jar&quot;&gt;javadoc (jar)&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoclet/0.1.3/asciidoclet-0.1.3-sources.jar&quot;&gt;source (jar)&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;* This release is based on the Asciidoctor 0.1.3 release.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;installation&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt; is a standard Javadoc Doclet and may be used as such. One of the easiest ways to install &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;Asciidoclet&lt;/a&gt; is by adding it as a Doclet to the &lt;code&gt;maven-javadoc-plugin&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Maven Doclet declaration&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml language-xml&quot;&gt;&amp;lt;plugin&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;maven-javadoc-plugin&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.9&amp;lt;/version&amp;gt;
    &amp;lt;executions&amp;gt;
        &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;attach-javadocs&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
                &amp;lt;goal&amp;gt;jar&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
        &amp;lt;/execution&amp;gt;
    &amp;lt;/executions&amp;gt;
    &amp;lt;configuration&amp;gt;
        &amp;lt;doclet&amp;gt;org.asciidoctor.Asciidoclet&amp;lt;/doclet&amp;gt;
        &amp;lt;docletArtifact&amp;gt;
           &amp;lt;groupId&amp;gt;org.asciidoctor&amp;lt;/groupId&amp;gt;
           &amp;lt;artifactId&amp;gt;asciidoclet&amp;lt;/artifactId&amp;gt;
           &amp;lt;version&amp;gt;${asciidoclet.version}&amp;lt;/version&amp;gt;
        &amp;lt;/docletArtifact&amp;gt;
    &amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We hope that this extension helps you push your Javadocs to new heights. As always, collaboration is welcome and you may find (and fork) the source on &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big thanks to &lt;a href=&quot;https://github.com/lordofthejars&quot;&gt;Alex Soto&lt;/a&gt; of the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration project&lt;/a&gt;, &lt;a href=&quot;https://github.com/lightguard&quot;&gt;Jason Porter&lt;/a&gt; and &lt;a href=&quot;https://github.com/mojavelinux&quot;&gt;Dan Allen&lt;/a&gt; for their feedback and support and everyone else who contributes to the &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt; project. Writing this extension could not have been easier because of the great work and collaboration of the &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt; community.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/06/03/asciidoctor-java-integration-0-1-3-released/</id>
<title>Asciidoctor Java integration 0.1.3 released!</title>
<updated>2013-06-03T16:52:31-06:00</updated>
<published>2013-06-03T16:52:31-06:00</published>
<link href="http://asciidoctor.org/news/2013/06/03/asciidoctor-java-integration-0-1-3-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
The Asciidoctor Java integration is the official means of using Asciidoctor to render your AsciiDoc documentation using Java instead of Ruby.


The following issues have been resolved in version 0.1.3:





Promoted icons, iconsdir and scriptsdir attributes in the fluent API.
Resolves #31.


Required libraries for rendering documents are preloaded.
Resolves #32.


Copycss hack is removed. Asciidoctor can generate css file when it is executed from Java.
Resolves #40.


Added support for the parse_header_only mode.
Resolves #42.


Promoted base_dir option to attributes in the fluent API.
Resolves #43.


Removed requirement to invoke asMap() on builders.
Resolves #45.


Promoted numbered attribute in the fluent API.
Resolves #47.


Updated asciidoctor dependency to 0.1.3.
Resolves #48.


Attributes argument of render can be......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; is the official means of using &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; to render your &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; documentation using Java instead of Ruby.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following issues have been resolved in version 0.1.3:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;icons&lt;/code&gt;, &lt;code&gt;iconsdir&lt;/code&gt; and &lt;code&gt;scriptsdir&lt;/code&gt; attributes in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/31&quot;&gt;#31&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Required libraries for rendering documents are preloaded.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/32&quot;&gt;#32&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copycss hack is removed. Asciidoctor can generate css file when it is executed from Java.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/40&quot;&gt;#40&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added support for the &lt;code&gt;parse_header_only&lt;/code&gt; mode.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/42&quot;&gt;#42&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;base_dir&lt;/code&gt; option to attributes in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/43&quot;&gt;#43&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed requirement to invoke asMap() on builders.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/45&quot;&gt;#45&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;numbered&lt;/code&gt; attribute in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/47&quot;&gt;#47&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated asciidoctor dependency to 0.1.3.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/48&quot;&gt;#48&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attributes argument of render can be a string or array
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/50&quot;&gt;#50&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;linkattrs&lt;/code&gt; attribute in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/51&quot;&gt;#51&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;experimental&lt;/code&gt; attribute in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/52&quot;&gt;#52&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added support for setting &lt;code&gt;icons&lt;/code&gt; value.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/53&quot;&gt;#53&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information, visit the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; project on GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

The argument type for &lt;code&gt;icons&lt;/code&gt; method has been changed from &lt;code&gt;boolean&lt;/code&gt; to &lt;code&gt;String&lt;/code&gt; to accomodate the font-based icons introduced in Asciidoctor 0.1.3 by &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/53&quot;&gt;#53&lt;/a&gt;.
The equivalent method to &lt;code&gt;.icons(true)&lt;/code&gt; is &lt;code&gt;.icons(Attributes.ORIGINAL_ADMONITION_ICONS_WITH_IMG)&lt;/code&gt;.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/05/31/asciidoctor-0-1-3-released/</id>
<title>Asciidoctor 0.1.3 released!</title>
<updated>2013-05-31T22:24:04-06:00</updated>
<published>2013-05-31T22:24:04-06:00</published>
<link href="http://asciidoctor.org/news/2013/05/31/asciidoctor-0-1-3-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<summary>
We&#8217;re thrilled to announce the release of Asciidoctor 0.1.3.
Read Installing or Updating Asciidoctor to learn how to get it setup.


Asciidoctor is an open source text processor and publishing toolchain written in Ruby for converting AsciiDoc markup into HTML 5, DocBook 4.5 and custom formats.
Asciidoctor is written in Ruby, but available to any JVM language using the Java integration library.


This release marks an important milestone.
It&#8217;s been exactly 6 months since Dan picked up Asciidoctor and started driving it forward.
The project sure has come a long way since then.
With this release, we&#8217;ve moved past just implementing AsciiDoc to advancing it, as this......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’re thrilled to announce the release of &lt;a href=&quot;http://rubygems.org/gems/asciidoctor&quot;&gt;Asciidoctor 0.1.3&lt;/a&gt;.&lt;br&gt;
Read &lt;a href=&quot;http://asciidoctor.org/docs/install-toolchain/#installing-or-updating-asciidoctor&quot;&gt;Installing or Updating Asciidoctor&lt;/a&gt; to learn how to get it setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Asciidoctor is an open source text processor and publishing toolchain written in Ruby for converting AsciiDoc markup into HTML 5, DocBook 4.5 and custom formats.
Asciidoctor is written in Ruby, but available to any JVM language using the Java integration library.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release marks an important milestone.
It’s been exactly 6 months since Dan picked up Asciidoctor and started driving it forward.
The project sure has come a long way since then.
With this release, we’ve moved past just implementing AsciiDoc to advancing it, as this post highlights.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;overview&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The focus of this release cycle was on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AsciiDoc compliance (yes, still)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New shorthand syntax and macros&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved styles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Markdown compatibility&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fixes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The valuable feedback we’ve received has helped bring Asciidoctor to 99.5% compliance with the AsciiDoc syntax and key parts of the Markdown syntax.
The improvements have given Asciidoctor a &lt;strong&gt;10% boost in speed&lt;/strong&gt; over the previous release, nearly &lt;strong&gt;40x as fast&lt;/strong&gt; as the native AsciiDoc processor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This document covers most of the new and noteworthy fixes and enhancements.
Here’s the TL;DR version if you’re in a hurry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;File encoding and Windows path bugs fixed!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Haml/Slim/Jade-inspired syntax for defining the id and role for block content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shorthand syntax to set the table format using the first position of the block delimiter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternate &quot;air quotes&quot; delimiters for defining block quotations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for Markdown blockquotes and headings (to join fenced code blocks)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Font-based admonition icons powered by &lt;a href=&quot;http://fortawesome.github.io/Font-Awesome&quot; target=&quot;_blank&quot;&gt;Font Awesome&lt;/a&gt; and CSS-based callout icons&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linked section titles as floating anchors or linked title text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Target window and role (i.e., CSS class) attributes for links&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Option to use &lt;a href=&quot;https://code.google.com/p/google-code-prettify&quot; target=&quot;_blank&quot;&gt;google-code-prettify&lt;/a&gt; to highlight source code blocks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attributes resolved in target of include macro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Control over block indentation of included content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sidebar placement for table of contents (&lt;code&gt;toc2&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Macros for keyboard shortcuts, menu selections and UI buttons (experimental)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Table of contents honors numbered setting for section titles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inline doctype for rendering simple, unstructured content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shorthand syntax for passing attributes to the Asciidoctor API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;General style improvements in default stylesheet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated asciidoc.conf compatibility configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1,000+ tests in the test suite&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Over &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues?milestone=4&amp;amp;state=closed&quot;&gt;40 issues resolved&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Read on to learn about these great improvements!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;write-faster-with-new-shorthand-syntax&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#write-faster-with-new-shorthand-syntax&quot;&gt;&lt;/a&gt;Write faster with new shorthand syntax!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;shorthand-notation-for-setting-code-id-code-and-code-role-code-block-attributes&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#shorthand-notation-for-setting-code-id-code-and-code-role-code-block-attributes&quot;&gt;&lt;/a&gt;Shorthand notation for setting &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;role&lt;/code&gt; block attributes&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the spirit of Haml, Jade, and Slim, Asciidoctor allows you to assign the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;role&lt;/code&gt; attributes on a block using attribute shortcuts.
This shorthand syntax is useful for creating presentations with AsciiDoc, where lots of style classes in the markup are needed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consider the following AsciiDoc markup:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[[goals]]
[role=&quot;incremental&quot;]
* Goal 1
* Goal 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In Asciidoctor, this can now be written as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[#goals.incremental]
* Goal 1
* Goal 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;#&lt;/code&gt; prefix is recognized as shorthand for &lt;code&gt;id=&lt;/code&gt;, and the &lt;code&gt;.&lt;/code&gt; prefix is recognized as shorthand for &lt;code&gt;role=&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Both source snippets produce the following HTML:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;div id=&quot;goals&quot; class=&quot;ulist incremental&quot;&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Goal 1&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Goal 2&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This shorthand notation is part of a block’s style.
Thus, it leverages the first attribute position to its fullest extent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let’s say you want to create a blockquote from an open block and assign it an id and role.
You prepend the style &lt;code&gt;quote&lt;/code&gt; to the &lt;code&gt;#&lt;/code&gt; (&lt;code&gt;id&lt;/code&gt;) and &lt;code&gt;.&lt;/code&gt; (&lt;code&gt;role&lt;/code&gt;) in the first attribute position, as this example shows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[quote#think.big, Donald Trump]
____
As long as you're going to be thinking anyway, think big.
____&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That produces the following HTML:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;div id=&quot;think&quot; class=&quot;quoteblock big&quot;&amp;gt;
&amp;lt;blockquote&amp;gt;
&amp;lt;div class=&quot;paragraph&quot;&amp;gt;
&amp;lt;p&amp;gt;As long as your going to be thinking anyway, think big.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/blockquote&amp;gt;
&amp;lt;div class=&quot;attribution&quot;&amp;gt;
&amp;amp;#8212; Donald Trump
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are some other things to know about this notation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To specifiy multiple roles using the shorthand syntax, separate them by dots&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, &lt;code&gt;[.summary.incremental]&lt;/code&gt; emits the HTML attribute &lt;code&gt;class=&quot;summary incremental&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The order of id and role values in the shorthand syntax does not matter&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, &lt;code&gt;[#goals.incremental]&lt;/code&gt; and &lt;code&gt;[.incremental#goals]&lt;/code&gt; produce the same output.&lt;/p&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/#block-metadata&quot;&gt;block attributes&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;shorthand-notation-for-setting-code-csv-code-and-code-dsv-code-table-formats&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#shorthand-notation-for-setting-code-csv-code-and-code-dsv-code-table-formats&quot;&gt;&lt;/a&gt;Shorthand notation for setting &lt;code&gt;csv&lt;/code&gt; and &lt;code&gt;dsv&lt;/code&gt; table formats&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first position of the table block delimiter (i.e., &lt;code&gt;|===&lt;/code&gt;) can be replaced by the data delimiter to set the table format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Instead of specifying the &lt;code&gt;csv&lt;/code&gt; format using a block attribute, as shown here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[format=&quot;csv&quot;]
|===
a,b,c
|===&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;you can simply replace the leading pipe (&lt;code&gt;|&lt;/code&gt;) with a comma (&lt;code&gt;,&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;,===
a,b,c
,===&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the same way, the &lt;code&gt;dsv&lt;/code&gt; format can be specified by replacing the leading pipe (&lt;code&gt;|&lt;/code&gt;) with a colon (&lt;code&gt;:&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;:===
a:b:c
:===&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, you only need the block attribute list for setting any additional options.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/#a-new-perspective-on-tables&quot;&gt;tables&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;alternate-blockquote-syntax&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#alternate-blockquote-syntax&quot;&gt;&lt;/a&gt;Alternate blockquote syntax&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor 0.1.3 brings three new syntax variations for marking up blockquotes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;

&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Quoted paragraph&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Air quotes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Markdown-style&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here’s an example of a traditional AsciiDoc quote block with three parts (quoted text, attribution and source):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[quote, Thomas Jefferson, Papers of Thomas Jefferson: Volume 11]
____
I hold it that a little rebellion now and then is a good thing,
and as necessary in the political world as storms in the physical.
____&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are the three new alternatives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;quoted-paragraph-blockquote&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#quoted-paragraph-blockquote&quot;&gt;&lt;/a&gt;Quoted paragraph blockquote&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can turn a single paragraph into a blockquote by:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;

&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;surrounding it with double quotes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;adding an optional attribution (prefixed with two dashes) below the quoted text.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;&quot;I hold it that a little rebellion now and then is a good thing,
and as necessary in the political world as storms in the physical.&quot;
-- Thomas Jefferson, Papers of Thomas Jefferson: Volume 11&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here’s the result of the abbreviated blockquote syntax:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;

&lt;blockquote&gt;
I hold it that a little rebellion now and then is a good thing,
and as necessary in the political world as storms in the physical.
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
&lt;cite&gt;Papers of Thomas Jefferson: Volume 11&lt;/cite&gt;
&lt;br&gt;
— Thomas Jefferson
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;nixon-inspired-air-quotes&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#nixon-inspired-air-quotes&quot;&gt;&lt;/a&gt;Nixon-inspired “Air quotes”&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a tip of the hat to Dick, Asciidoctor recognizes text between &quot;air quotes&quot; as a quote block.
Air quotes are the best thing since fenced code blocks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[, Richard M. Nixon]
&quot;&quot;
When the President does it, that means that it's not illegal.
&quot;&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Air_quotes&quot; target=&quot;_blank&quot;&gt;Air quotes&lt;/a&gt; are two double quotes on each line, emulating the gesture of making quote marks with two fingers on each hand.
This gesture is reminiscinet of the &lt;a href=&quot;http://www.flickr.com/photos/lee20sk/3942032514&quot; target=&quot;_blank&quot;&gt;V for Victory gesture&lt;/a&gt; made famous by Richard Nixon.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;markdown-style-blockquotes&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#markdown-style-blockquotes&quot;&gt;&lt;/a&gt;Markdown-style blockquotes&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor even supports Markdown-style blockquotes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;&amp;gt; I hold it that a little rebellion now and then is a good thing,
&amp;gt; and as necessary in the political world as storms in the physical.
&amp;gt; -- Thomas Jefferson, Papers of Thomas Jefferson: Volume 11&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This markup renders the same as the example above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Like Markdown, Asciidoctor supports block content inside the blockquote, including nested blockquotes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Markdown-style blockquote containing block content&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;no-highlight language-no-highlight&quot;&gt;&amp;gt; &amp;gt; What's new?
&amp;gt;
&amp;gt; I've got Markdown in my AsciiDoc!
&amp;gt;
&amp;gt; &amp;gt; Like what?
&amp;gt;
&amp;gt; * Blockquotes
&amp;gt; * Headings
&amp;gt; * Fenced code blocks
&amp;gt;
&amp;gt; &amp;gt; Is there more?
&amp;gt;
&amp;gt; Yep. AsciiDoc and Markdown share a lot of common syntax already.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here’s how this conversation renders:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;

&lt;blockquote&gt;
&lt;div class=&quot;quoteblock&quot;&gt;

&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What’s new?&lt;/p&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve got Markdown in my AsciiDoc!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;

&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Like what?&lt;/p&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Blockquotes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Headings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fenced code blocks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;

&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Is there more?&lt;/p&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yep. AsciiDoc and Markdown share a lot of common syntax already. Just try it.&lt;/p&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/#building-blocks-in-asciidoc&quot;&gt;blocks&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;target-window-and-role-attributes-for-links&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#target-window-and-role-attributes-for-links&quot;&gt;&lt;/a&gt;Target window and role attributes for links&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You often need to set the target attribute on a link element (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;) so the link opens in a new window (e.g., &lt;code&gt;&amp;lt;a href=&quot;…&quot; target=&quot;_blank&quot;&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This type of configuration is normally specified using attributes.
However, AsciiDoc does not parse attributes in the link macro by default.
In Asciidoctor, you can now enable parsing of link macro attributes by setting the &lt;code&gt;linkattrs&lt;/code&gt; document attribute in the header.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt; :linkattrs:&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can then specify the name of the target window using the &lt;code&gt;window&lt;/code&gt; attribute:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;http://google.com[Google, window=&quot;_blank&quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since &lt;code&gt;_blank&lt;/code&gt; is the most common window name, we’ve introduced shorthand for it.
Just end the link text with a caret (&lt;code&gt;^&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;http://google.com[Google^]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock caution&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-caution&quot; title=&quot;Caution&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

If you use the caret syntax more than once in a single paragraph, you may need to escape the first occurrence with a backslash.
If the link text contains a comma, then you need to surround the link text in double quotes.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since Asciidoctor is parsing the attributes, that opens the door for adding a role (i.e., CSS class) to the link:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;http://google.com[Google^, role=&quot;external&quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Have fun styling your links!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;font-awesome-icons-fancy-section-anchors-and-other-style-options&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#font-awesome-icons-fancy-section-anchors-and-other-style-options&quot;&gt;&lt;/a&gt;Font awesome icons, fancy section anchors and other style options&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You no longer have to carry icons around with you where ever you go!
Asciidoctor 0.1.3 introduces Font-based admonition and CSS-based callout icons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;admonition-icons-powered-by-font-awesome&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#admonition-icons-powered-by-font-awesome&quot;&gt;&lt;/a&gt;Admonition icons powered by Font Awesome&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Icons can make your document look sharp, but they are a pain to manage.
That is, until now!
Asciidoctor can &quot;draw&quot; icons using &lt;a href=&quot;http://fortawesome.github.io/Font-Awesome&quot; target=&quot;_blank&quot;&gt;Font Awesome&lt;/a&gt; and CSS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To use this feature, just set the value of the &lt;code&gt;icons&lt;/code&gt; document attribute to &lt;code&gt;font&lt;/code&gt;.
Asciidoctor will then emit HTML markup that selects an appropriate font character from the Font Awesome font for each admonition block.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here’s an example, starting with the AsciiDoc source:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;:icons: font

NOTE: Asciidoctor now supports font-based admonition icons, powered by Font Awesome!&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here’s the HTML it produces:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;div class=&quot;admonitionblock note&quot;&amp;gt;
&amp;lt;table&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&quot;icon&quot;&amp;gt;
&amp;lt;i class=&quot;icon-note&quot; title=&quot;Note&quot;&amp;gt;&amp;lt;/i&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td class=&quot;content&quot;&amp;gt;
Asciidoctor now supports font-based admonition icons, powered by Font Awesome!
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And here’s a preview of how it renders:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;exampleblock&quot;&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

Asciidoctor now supports font-based admonition icons, powered by Font Awesome!
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor adds a reference to the Font Awesome stylesheet, served from a CDN, to the document header.
The stylesheet then imports the font from the same server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot;
  href=&quot;http://cdnjs.cloudflare.com/ajax/libs/font-awesome/3.1.0/css/font-awesome.min.css&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-important&quot; title=&quot;Important&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

The default stylesheet (or any stylesheet produced by the &lt;a href=&quot;http://asciidoctor.org/docs/produce-custom-themes-using-asciidoctor-stylesheet-factory/&quot;&gt;Asciidoctor stylesheet factory&lt;/a&gt;) is required for this feature to work.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/#admonitions&quot;&gt;admonition blocks&lt;/a&gt; | &lt;a href=&quot;http://asciidoctor.org/docs/render-documents/styles-and-attributes&quot;&gt;Asciidoctor stylesheets&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;css-based-callout-icons&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#css-based-callout-icons&quot;&gt;&lt;/a&gt;CSS-based callout icons&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The font icons setting also enables callout icons drawn using CSS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;:icons: font &lt;i class=&quot;conum&quot;&gt;1&lt;/i&gt;

NOTE: Asciidoctor now supports font-based admonition icons, powered by Font Awesome! &lt;i class=&quot;conum&quot;&gt;2&lt;/i&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;1&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;Activates font-based icons in the HTML5 backend&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;2&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;Admonition block that uses a font-based icon&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Kick that icon directory to the curb.
You’re untethered!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;section-titles-as-links-and-styled-with-floating-icons&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#section-titles-as-links-and-styled-with-floating-icons&quot;&gt;&lt;/a&gt;Section titles as links and styled with floating icons&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Two document attributes are available to control section linking:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;sectanchors&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;When this attribute is enabled on a document, an anchor (empty link) is added before the section title.
The default Asciidoctor stylesheet renders the anchor as a section entity (&lt;code&gt;§&lt;/code&gt;) that floats to the left of the section title.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;sectlinks&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;When this attribute is enabled on a document, the section titles are turned into links.
The default Asciidoctor stylesheet displays linked section titles in the same color as normal section titles.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

Section title anchors depend on the default Asciidoctor stylesheet to render properly.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/#section-titles&quot;&gt;section titles&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;lead-paragraph-style&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#lead-paragraph-style&quot;&gt;&lt;/a&gt;Lead paragraph style&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Simply apply &lt;code&gt;role=&quot;lead&quot;&lt;/code&gt; (or &lt;code&gt;.lead&lt;/code&gt;) above any paragraph, and it will appear in the style of a lead paragraph (i.e., larger font).&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;cleaner-quote-blocks-and-verses&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#cleaner-quote-blocks-and-verses&quot;&gt;&lt;/a&gt;Cleaner quote blocks and verses&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If a quote or verse block does not have an attribution, the empty attribution div is no longer displayed in the HTML5 output.
This corrects any output styling inconsistencies caused by the empty div.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;AsciiDoc quote block syntax without attribution&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[quote]
____
Words of wisdom.
____&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;HTML output using Asciidoctor 0.1.2 and older versions&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;div class=&quot;quoteblock&quot;&amp;gt;
&amp;lt;blockquote&amp;gt;
&amp;lt;div class=&quot;paragraph&quot;&amp;gt;
&amp;lt;p&amp;gt;Words of wisdom.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/blockquote&amp;gt;

&amp;lt;div class=&quot;attribution&quot;&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;HTML output using Asciidoctor 0.1.3&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;div class=&quot;quoteblock&quot;&amp;gt;
&amp;lt;blockquote&amp;gt;
&amp;lt;div class=&quot;paragraph&quot;&amp;gt;
&amp;lt;p&amp;gt;Words of wisdom.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The default stylesheet has been updated to follow suit.
Additionally, verse blocks have been given a style makeover, so they should appear consistent with the default look and feel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The stylesheet has also been updated with some new styles for the experimental user input macros.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;return-of-the-mac-ros-making-it-clear-what-readers-are-supposed-to-press&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#return-of-the-mac-ros-making-it-clear-what-readers-are-supposed-to-press&quot;&gt;&lt;/a&gt;Return of the Mac(ros): Making it clear what readers are supposed to press&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-important&quot; title=&quot;Important&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

You &lt;strong&gt;must&lt;/strong&gt; set the &lt;code&gt;experimental&lt;/code&gt; attribute to enable these macros.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;keyboard-shortcuts&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#keyboard-shortcuts&quot;&gt;&lt;/a&gt;Keyboard shortcuts&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor now recognizes a macro for creating keyboard shortcuts following the syntax &lt;code&gt;kbd:[key(+key)*]&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[options=&quot;header&quot;, caption=&quot;&quot;]
.Common browser keyboard shortcuts
|===
|Shortcut |Purpose

|kbd:[F11]
|Toggle fullscreen

|kbd:[Ctrl+T]
|Open a new tab

|kbd:[Ctrl+Shift+N]
|New incognito window

|kbd:[Ctrl + +]
|Increase zoom
|===&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;renders as:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Common browser keyboard shortcuts&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:50%;&quot;&gt;
&lt;col style=&quot;width:50%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Shortcut&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;kbd&gt;F11&lt;/kbd&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Toggle fullscreen&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;kbd class=&quot;keyseq&quot;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;T&lt;/kbd&gt;&lt;/kbd&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Open a new tab&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;kbd class=&quot;keyseq&quot;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;N&lt;/kbd&gt;&lt;/kbd&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;New incognito window&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;kbd class=&quot;keyseq&quot;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt;&lt;/kbd&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Increase zoom&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You no longer have to struggle to explain to users what combination of keys they are supposed to press.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;menu-selections&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#menu-selections&quot;&gt;&lt;/a&gt;Menu selections&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Trying to explain to someone how to select a menu item can be a pain.
With the new &lt;code&gt;menu&lt;/code&gt; macro, the symbols do the work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;To save the file, select menu:File[Save].

Select menu:View[Zoom &amp;gt; Reset] to reset the zoom level to the default setting.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The instructions in the example appove appear as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;exampleblock&quot;&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To save the file, select &lt;span class=&quot;menuseq&quot;&gt;&lt;span class=&quot;menu&quot;&gt;File&lt;/span&gt; ▸ &lt;span class=&quot;menuitem&quot;&gt;Save&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Select &lt;span class=&quot;menuseq&quot;&gt;&lt;span class=&quot;menu&quot;&gt;View&lt;/span&gt; ▸ &lt;span class=&quot;submenu&quot;&gt;Zoom&lt;/span&gt; ▸ &lt;span class=&quot;menuitem&quot;&gt;Reset&lt;/span&gt;&lt;/span&gt; to reset the zoom level to the default setting.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;ui-buttons&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#ui-buttons&quot;&gt;&lt;/a&gt;UI buttons&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It can be equally difficult to communicate to the reader that they need to press a button.
They can’t tell if you are saying “OK” or they are supposed to look for a button labeled &quot;OK&quot;.
It’s all about getting the semantics right.
The new &lt;code&gt;btn&lt;/code&gt; macro to the rescue!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;Press the btn:[OK] button when you are finished.

Select a file in the file navigator and click btn:[Open].&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here’s the result:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;exampleblock&quot;&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Press the &lt;b class=&quot;button&quot;&gt;OK&lt;/b&gt; button when you are finished.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Select a file in the file navigator and click &lt;b class=&quot;button&quot;&gt;Open&lt;/b&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are looking for feedback on these macros before setting them in stone.
If you have suggestions, we want to hear from you!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;a-better-programmer-s-best-friend&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#a-better-programmer-s-best-friend&quot;&gt;&lt;/a&gt;A better programmer’s best friend&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;AsciiDoc is a programmer’s best friend because it keeps your source code close to the documentation and makes inserting source code easy.
Now there are even more options for pulling source code snippets into your document and highlighting them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;normalizing-the-block-indentation-of-included-source-code&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#normalizing-the-block-indentation-of-included-source-code&quot;&gt;&lt;/a&gt;Normalizing the block indentation of included source code&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Source code snippets from external files are often padded with leading block indent.
This leading block indent is relevant in its original context.
However, once inside the documentation, this leading block indent is no longer needed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The attribute &lt;code&gt;indent&lt;/code&gt; allows the leading block indent to be stripped and, optionally, a new block indent to be inserted for blocks with verbatim content (listing, literal, source, verse, etc.).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When &lt;code&gt;indent&lt;/code&gt; is 0, the leading block indent is stripped (tabs are replaced with 4 spaces).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When &lt;code&gt;indent&lt;/code&gt; is &amp;gt; 0, the leading block indent is first stripped (tabs are replaced with 4 spaces), then a block is indented by the number of columns equal to this value.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, this AsciiDoc source:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[source,ruby,indent=0]
----
    def names
      @name.split ' '
    end
----&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Produces:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;def names
  @name.split ' '
end&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’ll need this feature when including content:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[source,ruby,indent=0]
----
include::lib/document.rb[lines=5..10]
----&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This AsciiDoc source:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[indent=2]
----
    def names
      @name.split ' '
    end
----&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Produces:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;  def names
    @name.split ' '
  end&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-important&quot; title=&quot;Important&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

The relative indentation between the lines of source code &lt;strong&gt;is not affected&lt;/strong&gt;.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;including-files-relative-to-a-common-source-directory&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#including-files-relative-to-a-common-source-directory&quot;&gt;&lt;/a&gt;Including files relative to a common source directory&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor now expands attributes in the target of the include macro.
That means you only have to type the unique part of the path when linking to a source file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;:sourcedir: src/main/java

[source,java]
----
include::{sourcedir}/org/asciidoctor/Asciidoctor.java[]
----&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The target of the include macro resolves to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;src/main/java/org/asciidoctor/Asciidoctor.java&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/#listing-and-source-code-blocks&quot;&gt;include macro and blocks&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;new-source-highlighter-google-code-prettify&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#new-source-highlighter-google-code-prettify&quot;&gt;&lt;/a&gt;New source highlighter: google-code-prettify&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Source code snippets can now be highlighted with the &lt;a href=&quot;https://code.google.com/p/google-code-prettify&quot;&gt;google-code-prettify library&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To use prettify, enable it by setting the &lt;code&gt;source-highlighter&lt;/code&gt; attribute in the document header (or pass it as an argument):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;:source-highlighter: prettify&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor will link to the prettify JavaScript library and stylesheet and emit the HTML prettify requires to highlight the source code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consider this source code block:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[source,java]
----
public class Person {
  private String name;

  public String getName() {
    return name;
  }
}
----&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor produces the following HTML:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;div class=&quot;listingblock&quot;&amp;gt;
&amp;lt;div class=&quot;content monospaced&quot;&amp;gt;
&amp;lt;pre class=&quot;prettyprint java language-java&quot;&amp;gt;&amp;lt;code&amp;gt;public class Person {
  private String name;

  public String getName() {
    return name;
  }
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The key addition is the &lt;code&gt;prettyprint&lt;/code&gt; class on the &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-quick-reference/#source-code&quot;&gt;enabling source code highlighters&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documents-with-more-depth-a-bigger-picture-and-mini-content&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#documents-with-more-depth-a-bigger-picture-and-mini-content&quot;&gt;&lt;/a&gt;Documents with more depth, a bigger picture and mini content&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;level-5-section-title-added&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#level-5-section-title-added&quot;&gt;&lt;/a&gt;Level 5 section title added&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor 0.1.3 includes syntax for the level 5 section title.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;===== Level 5 Section Title&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The level 5 title maps to the &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; tag in the &lt;code&gt;html5&lt;/code&gt; backend.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;part-headings-in-html-backend&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#part-headings-in-html-backend&quot;&gt;&lt;/a&gt;Part headings in HTML backend&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Previously, part headings (level 0 sections in a book doctype document) weren’t distinguishable from other &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tags.
In 0.1.3, these &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tags get the &lt;code&gt;sect0&lt;/code&gt; class name to be consistent with the class names assigned to the other section levels.
This addition simplifies the effort of adding custom styles to the part headings.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;table-of-contents-layout-and-style-options&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#table-of-contents-layout-and-style-options&quot;&gt;&lt;/a&gt;Table of contents layout and style options&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor 0.1.3 includes numerous table of contents (TOC) style changes and options.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;more-table-of-contents-position-options&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#more-table-of-contents-position-options&quot;&gt;&lt;/a&gt;More table of contents position options&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The AsciiDoc &lt;code&gt;toc2&lt;/code&gt; layout is now included in the Asciidoctor default stylesheet as the &lt;code&gt;toc2&lt;/code&gt; class.
To use the alternate TOC, specify the document attribute &lt;code&gt;toc2&lt;/code&gt; in the header.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The table of contents can also be inserted directly beneath a document’s preamble.
To place the TOC under the preamble, assign the new value, &lt;code&gt;preamble&lt;/code&gt; to the &lt;code&gt;toc-placement&lt;/code&gt; attribute.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The TOC macro requires the &lt;code&gt;toc&lt;/code&gt; attribute to be set.
To disable the built-in TOC, unassign the &lt;code&gt;toc-placement&lt;/code&gt; attribute (&lt;code&gt;toc-placement!&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;updated-level-0-section-title-styles&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#updated-level-0-section-title-styles&quot;&gt;&lt;/a&gt;Updated level 0 section title styles&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Level 0 section titles (only applicable to book doctype) are now organized in their own level within the table of contents (in the HTML backend).
A CSS class has been added to each outline level (i.e., &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; element) that cooresponds to the level of the sections it contains (e.g., &lt;code&gt;sect1level&lt;/code&gt;)
The addition of these CSS classes make it easier to style the TOC.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the default stylesheet, the following style changes have been made to the TOC:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Level 0 and level 1 section titles are aligned vertically&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extra spacing has been added between level 0 and level 1 section titles to make level 0 section titles stand out&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Level 0 section titles (i.e., parts) appear in italic text&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also, the &lt;code&gt;type=&quot;none&quot;&lt;/code&gt; attribute has been added to the &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; elements to provide a hint to the browser not to add a number in front of each item.
This change satisfies the requirement that the TOC should &quot;just work&quot; without a stylesheet.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;introducing-the-code-inline-code-doctype-for-inline-formatting-on-input-text&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#introducing-the-code-inline-code-doctype-for-inline-formatting-on-input-text&quot;&gt;&lt;/a&gt;Introducing the &lt;code&gt;inline&lt;/code&gt; doctype for inline formatting on input text&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There may be cases when you only want to apply inline AsciiDoc formatting to input text without wrapping it in a block element.
For example, in the &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet/blob/master/README.asciidoc&quot;&gt;Asciidoclet project&lt;/a&gt; (AsciiDoc in Javadoc), only the inline formatting is needed for the text in Javadoc tags.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The rules for the inline doctype are as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Only a single paragraph is read from the AsciiDoc source&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inline formatting is applied&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The output is not wrapped in the normal paragraph tags&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Given the following input:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;http://asciidoc.org[AsciiDoc] is a _lightweight_ markup language...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Processing it with the options &lt;code&gt;doctype=inline&lt;/code&gt; and &lt;code&gt;backend=html5&lt;/code&gt; produces:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;a href=&quot;http://asciidoc.org&quot;&amp;gt;AsciiDoc&amp;lt;/a&amp;gt; is a &amp;lt;em&amp;gt;lightweight&amp;lt;/em&amp;gt; markup language&amp;amp;#8230;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Asciidoctor processor is now able to cover the full range of output, from unstructured (inline) text to a full, standalone document!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;markdown-in-your-asciidoc&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#markdown-in-your-asciidoc&quot;&gt;&lt;/a&gt;Markdown in your AsciiDoc?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That’s right!
Asciidoctor supports three key elements from the Markdown syntax (where AsciiDoc and Markdown don’t already overlap).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Headings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blockquotes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fenced code blocks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition to the equal marker (&lt;code&gt;=&lt;/code&gt;) used for defining single-line section titles, Asciidoctor recognizes the hash symbol (&lt;code&gt;#&lt;/code&gt;) from Markdown.
That means the outline of a Markdown document will render just fine as an AsciiDoc document.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;markdown language-markdown&quot;&gt;# Document Title

## Section One

content&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Markdown-style blockquotes where previously described in &lt;a href=&quot;#alternate-blockquote-syntax&quot;&gt;Alternate blockquote syntax&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown-style headings and blockquotes join support for fenced code blocks (from GitHub-flavored Markdown), which was added in a previous release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;markdown language-markdown&quot;&gt;```ruby
require 'asciidoctor'

puts Asciidoctor.render(&quot;http://asciidoc.org[AsciiDoc] is a _lightweight_ markup language...&quot;)
```&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We hope these additions help to ease and encourage migration from Markdown to AsciiDoc.
To alleviate concerns about fragmentation from AsciiDoc, we maintain an &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/blob/master/compat/asciidoc.conf&quot;&gt;AsciiDoc configuration file&lt;/a&gt; in the project that brings these same enhancements to AsciiDoc when used.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;important-bug-fixes&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#important-bug-fixes&quot;&gt;&lt;/a&gt;Important bug fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;the-windows-path-bug-is-fixed&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#the-windows-path-bug-is-fixed&quot;&gt;&lt;/a&gt;The Windows path bug is fixed&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor 0.1.3 properly detects the Windows environment and converts all backslashes to forward slashes.
This eliminates file path resolution errors in Windows.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/330&quot;&gt;330&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;file-encoding-errors-when-using-ruby-1-9-and-above-is-fixed&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#file-encoding-errors-when-using-ruby-1-9-and-above-is-fixed&quot;&gt;&lt;/a&gt;File encoding errors when using Ruby 1.9 and above is fixed&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor was not properly setting the encoding on data read from files when the default system encoding was not UTF-8.
To correct this issue, any data that comes into Asciidoctor 0.1.3 is force encoded to UTF-8 on Ruby 1.9 and above.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/308&quot;&gt;308&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;additional-bug-fixes&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#additional-bug-fixes&quot;&gt;&lt;/a&gt;Additional bug fixes&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Asciidoctor CLI no longer splits attribute key/value pairs on the first equal sign.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/291&quot;&gt;291&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asciidoctor no longer crashes if &lt;code&gt;to_file&lt;/code&gt; and &lt;code&gt;base_dir&lt;/code&gt; are both set.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/335&quot;&gt;335&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DocBook renderer works if the author is defined using document attributes.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/301&quot;&gt;301&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;compliance-fixes&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#compliance-fixes&quot;&gt;&lt;/a&gt;Compliance fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;-code-doctitle-code-attribute&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#-code-doctitle-code-attribute&quot;&gt;&lt;/a&gt;&lt;code&gt;doctitle&lt;/code&gt; attribute&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;doctitle&lt;/code&gt; attribute can be used anywhere in a document.
It’s value is identical to the value returned by &lt;code&gt;Document#doctitle&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;AsciiDoc &lt;code&gt;doctitle&lt;/code&gt; syntax&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;= Document Title

The document title is {doctitle}.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;
&lt;code&gt;doctitle&lt;/code&gt; output result&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;The document title is Document Title.&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;horizontal-layout-for-labeled-lists-added-to-docbook-4-5-backend&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#horizontal-layout-for-labeled-lists-added-to-docbook-4-5-backend&quot;&gt;&lt;/a&gt;Horizontal layout for labeled lists added to DocBook 4.5 backend&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;[horizontal]
first term:: definition
+
more detail

second term:: definition&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Renders:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml language-xml&quot;&gt;&amp;lt;informaltable tabstyle=&quot;horizontal&quot; frame=&quot;none&quot; colsep=&quot;0&quot; rowsep=&quot;0&quot;&amp;gt;
&amp;lt;tgroup cols=&quot;2&quot;&amp;gt;
&amp;lt;colspec colwidth=&quot;15*&quot;/&amp;gt;
&amp;lt;colspec colwidth=&quot;85*&quot;/&amp;gt;
&amp;lt;tbody valign=&quot;top&quot;&amp;gt;
&amp;lt;row&amp;gt;
&amp;lt;entry&amp;gt;
&amp;lt;simpara&amp;gt;first term&amp;lt;/simpara&amp;gt;
&amp;lt;/entry&amp;gt;
&amp;lt;entry&amp;gt;
&amp;lt;simpara&amp;gt;definition&amp;lt;/simpara&amp;gt;
&amp;lt;simpara&amp;gt;more detail&amp;lt;/simpara&amp;gt;
&amp;lt;/entry&amp;gt;
&amp;lt;/row&amp;gt;
&amp;lt;row&amp;gt;
&amp;lt;entry&amp;gt;
&amp;lt;simpara&amp;gt;second term&amp;lt;/simpara&amp;gt;
&amp;lt;/entry&amp;gt;
&amp;lt;entry&amp;gt;
&amp;lt;simpara&amp;gt;definition&amp;lt;/simpara&amp;gt;
&amp;lt;/entry&amp;gt;
&amp;lt;/row&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/tgroup&amp;gt;
&amp;lt;/informaltable&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;consecutive-terms-in-labeled-list-share-same-code-varlistentry-code&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#consecutive-terms-in-labeled-list-share-same-code-varlistentry-code&quot;&gt;&lt;/a&gt;Consecutive terms in labeled list share same &lt;code&gt;varlistentry&lt;/code&gt;
&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consecutive terms in a labeled list share the same &lt;code&gt;varlistentry&lt;/code&gt; in the &lt;code&gt;docbook&lt;/code&gt; backend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;term::
alt term::
definition&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Produces:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml language-xml&quot;&gt;&amp;lt;variablelist&amp;gt;
&amp;lt;varlistentry&amp;gt;
&amp;lt;term&amp;gt;
term
&amp;lt;/term&amp;gt;
&amp;lt;term&amp;gt;
alt term
&amp;lt;/term&amp;gt;
&amp;lt;listitem&amp;gt;
&amp;lt;simpara&amp;gt;
definition
&amp;lt;/simpara&amp;gt;
&amp;lt;/listitem&amp;gt;
&amp;lt;/varlistentry&amp;gt;
&amp;lt;/variablelist&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;special-sections-and-styles&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#special-sections-and-styles&quot;&gt;&lt;/a&gt;Special sections and styles&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;partintro&lt;/code&gt; and &lt;code&gt;abstract&lt;/code&gt; styles can be used on open blocks and are handled correctly by the renderer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sections assigned the &lt;code&gt;glossary&lt;/code&gt; and &lt;code&gt;appendix&lt;/code&gt; styles are now handled correctly in Asciidoctor.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;assign-document-variables-inline&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#assign-document-variables-inline&quot;&gt;&lt;/a&gt;Assign document variables inline&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Document variables can be assigned using the following syntax:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;{set:&amp;lt;attrname&amp;gt;[!][:&amp;lt;value&amp;gt;]}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;{set:sourcedir:src/main/java}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It’s effectively the same as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;:sourcedir: src/main/java&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is important for being able to assign document attributes in places where attribute entry lines are not normally processed, such as in a table cell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An example of where this might be used is documented in the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/wiki/How-to-set-the-background-color-of-a-table-cell&quot;&gt;how to set the background color of a table cell&lt;/a&gt; tip.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;block-title-not-allowed-above-document-title&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#block-title-not-allowed-above-document-title&quot;&gt;&lt;/a&gt;Block title not allowed above document title&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Previously, a block title line above a level 0 heading was being processed and passed on to the first content block.
AsciiDoc sees the block title as the first line of content and does not create a header as a result.
Asciidoctor’s behavior is now consistent with AsciiDoc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;.Misplaced block title
= Document Title
Author Name&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;irc-scheme-rendered-as-link&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#irc-scheme-rendered-as-link&quot;&gt;&lt;/a&gt;irc: scheme rendered as link&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following input is now rendered as a link.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;irc://irc.freenode.org/#asciidoctor&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cli-and-api-updates&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#cli-and-api-updates&quot;&gt;&lt;/a&gt;CLI and API updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;specify-any-backend-with-the-asciidoctor-cli&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#specify-any-backend-with-the-asciidoctor-cli&quot;&gt;&lt;/a&gt;Specify any backend with the Asciidoctor CLI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Previously, the Asciidoctor CLI restricted the user from specifying a backend other than &lt;code&gt;html5&lt;/code&gt; or &lt;code&gt;docbook45&lt;/code&gt;.
Now, any non-empty value can be specified as the backend.
This is critical when you want to use a &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-backends&quot;&gt;custom backend&lt;/a&gt;, such as deck.js or dzslides.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;set-safe-mode-with-a-string-symbol-or-integer-in-the-asciidoctor-api&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#set-safe-mode-with-a-string-symbol-or-integer-in-the-asciidoctor-api&quot;&gt;&lt;/a&gt;Set safe mode with a string, symbol or integer in the Asciidoctor API&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The safe level option now accepts a symbol, string or integer value to lookup the safe level.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad', :safe =&amp;gt; 'server')&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;can now be written as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad', :safe =&amp;gt; :server)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;use-a-string-or-symbol-to-set-the-backend-in-the-asciidoctor-api&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#use-a-string-or-symbol-to-set-the-backend-in-the-asciidoctor-api&quot;&gt;&lt;/a&gt;Use a string or symbol to set the backend in the Asciidoctor API&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The backend option now accepts a symbol or string value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad', :backend =&amp;gt; 'docbook')&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;can now be written as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad', :backend =&amp;gt; :docbook)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pass-attributes-as-a-string-or-array-to-the-asciidoctor-api&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#pass-attributes-as-a-string-or-array-to-the-asciidoctor-api&quot;&gt;&lt;/a&gt;Pass attributes as a string or array to the Asciidoctor API&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Previously, attributes were passed as a Hash to the Asciidoctor API methods.
At times, this made the argument list feel heavy.
These methods now accept the attributes as a string or array.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For instance, consider a user wants to pass the attribute that enables the table of contents (&lt;code&gt;toc&lt;/code&gt;) and auto-numbering (&lt;code&gt;numbered&lt;/code&gt;).
Previously, that required:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad',
    :attributes =&amp;gt; {'toc' =&amp;gt; '', 'numbered' =&amp;gt; ''})&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since both attributes are simple flags, the invocation can be simplified as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad',
    :attributes =&amp;gt; ['toc', 'numbered'])&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It can be further simplified using the array-from-string shorthand in Ruby:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad',
    :attributes =&amp;gt; %w(toc numbered))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That leads us into attributes specified as a string:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad',
    :attributes =&amp;gt; 'toc numbered')&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That’s quite an improvement over the original call.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If the attribute requires a value, such as &lt;code&gt;source-highlighter&lt;/code&gt;, you just use the key=value form:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;result = Asciidoctor.render_file('master.ad',
    :attributes =&amp;gt; 'toc numbered source-highlighter=coderay')&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This API call parallels this commandline invocation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;$ asciidoctor -a toc -a numbered -a source-highlighter=coderay master.adoc&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This enhancement is particularly useful in the integrations, such as the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-gradle-plugin&quot;&gt;Gradle plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Learn more in the Asciidoctor Docs: &lt;a href=&quot;http://asciidoctor.org/rdoc/Asciidoctor.html&quot;&gt;Asciidoctor Ruby API&lt;/a&gt; | &lt;a href=&quot;https://oss.sonatype.org/service/local/repositories/releases/archive/org/asciidoctor/asciidoctor-java-integration/0.1.2.1/asciidoctor-java-integration-0.1.2.1-javadoc.jar/!/org/asciidoctor/package-summary.html&quot;&gt;Asciidoctor Java API&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that’s a wrap!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;thanks&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#thanks&quot;&gt;&lt;/a&gt;Thanks!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As we hoped, Asciidoctor 0.1.2 downloads broke into the next increment of 10,000.
RubyGems.org was reporting over &lt;a href=&quot;http://rubygems.org/gems/asciidoctor&quot;&gt;20,000 downloads&lt;/a&gt; of the Asciidoctor gem prior to this release and Maven Central over 100 downloads of the Java integration.
We look forward reaching new landmarks with 0.1.3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The level of participation in the Asciidoctor project continues to grow at an impressive rate.
We welcomed several new projects in this development iteration, including &lt;a href=&quot;https://github.com/asciidoctor/asciidoclet/blob/master/README.asciidoc&quot;&gt;Asciidoclet&lt;/a&gt;, a Javadoclet for writing Javadoc in AsciiDoc by &lt;a href=&quot;https://github.com/johncarl81&quot;&gt;John Ericksen&lt;/a&gt;, as well as several AsciiDoc editor initiatives.
We’re very grateful to everyone who participates, especially those who contribute and spread the word :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’d especially like to thank the following people for their contributions and feedback on this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bleathem&quot;&gt;Brian Leathem&lt;/a&gt; (Enhancements, patches and QA)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lightguard&quot;&gt;Jason Porter&lt;/a&gt; (CLI improvements)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/graphitefriction&quot;&gt;Sarah White&lt;/a&gt; (Documentation, user experience and QA)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lordofthejars&quot;&gt;Alex Soto&lt;/a&gt; (Java integration improvements)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/johncarl81&quot;&gt;John Ericksen&lt;/a&gt; (Asciidoclet)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aalmiray&quot;&gt;Andres Almiray&lt;/a&gt; (Doctorpad editor)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/glaforge&quot;&gt;Guillaume Laforge&lt;/a&gt; (Doctorpad editor)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pilhuhn&quot;&gt;Heiko Rupp&lt;/a&gt; (Bug reports and suggestions)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/eddelplus&quot;&gt;Jochen Eddelbüttel&lt;/a&gt; (Bug reports and Windows testing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/davidfavor&quot;&gt;David Favor&lt;/a&gt; (Bug reports)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/snowolfe&quot;&gt;Bruce Wolfe&lt;/a&gt; (Bug reports)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ge0ffrey&quot;&gt;Geoffrey De Smet&lt;/a&gt; (Feature requests)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dobermai&quot;&gt;Obermaier Dominik&lt;/a&gt; (Feature requests)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lincolnthree&quot;&gt;Lincoln Baxter III&lt;/a&gt; (Feature requests)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;A special shout out to Brian Leathem for finding a critical regression the night before the release.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additional thanks goes to everyone who is using the project and has contributed to it.
Together, we’re making documentation fun, easy, and rewarding!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#what-s-next&quot;&gt;&lt;/a&gt;What’s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release is just the beginning of the release train.
Look for releases of the Java integration, Maven plugin, Gradle plugin and more recent additions such as the editors.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/05/21/asciidoctor-js-render-asciidoc-in-the-browser/</id>
<title>asciidoctor.js - Render AsciiDoc in your browser!</title>
<updated>2013-05-21T01:29:55-06:00</updated>
<published>2013-05-21T01:29:55-06:00</published>
<link href="http://asciidoctor.org/news/2013/05/21/asciidoctor-js-render-asciidoc-in-the-browser/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="javascript" />
<category scheme="http://asciidoctor.org/news/tags" term="port" />
<summary>
We&#8217;ve combined Asciidoctor and Opal to bring AsciiDoc rendering to the browser!





Introduction








asciidoctor.js uses the Opal Ruby-to-JavaScript cross compiler to generate a direct JavaScript port of Asciidoctor, an implementation of AsciiDoc. The result is AsciiDoc rendering in the browser!


The project consists primarily of a Rake build script that executes the Opal compiler on the Asciidoctor source code to produce the asciidoctor.js script.


Opal parses the Ruby code and any required libraries, then rewrites the code into JavaScript under the Opal namespace.
The resulting JavaScript can be executed in any JavaScript runtime environment, such as a browser or node.js application.





Proving the concept


When I first......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve combined &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; and &lt;a href=&quot;http://opalrb.org&quot;&gt;Opal&lt;/a&gt; to bring AsciiDoc rendering to the browser!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introduction&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;imageblock feature right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://asciidoctor.org/images/opal-logo.png&quot; alt=&quot;Opal&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/asciidoctor/asciidoctor.js&quot;&gt;asciidoctor.js&lt;/a&gt; uses the &lt;a href=&quot;http://opalrb.org&quot;&gt;Opal&lt;/a&gt; Ruby-to-JavaScript cross compiler to generate a direct JavaScript port of &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt;, an implementation of AsciiDoc. The result is AsciiDoc rendering in the browser!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project consists primarily of a Rake build script that executes the Opal compiler on the Asciidoctor source code to produce the asciidoctor.js script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Opal parses the Ruby code and any required libraries, then rewrites the code into JavaScript under the Opal namespace.
The resulting JavaScript can be executed in any JavaScript runtime environment, such as a browser or node.js application.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;proving-the-concept&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#proving-the-concept&quot;&gt;&lt;/a&gt;Proving the concept&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When I first discovered Opal, I thought to myself, &quot;yeah, this could work.&quot;
Little did I know that achieving this proof of concept was more than a small task.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The effort involved filling gaps in Opal to support all the features of the Ruby standard library that Asciidoctor uses, as well as changes in Asciidoctor to make it compatible with constraints imposed by JavaScript (such as immutable strings).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While there are still some shortcomings, I&amp;#8217;m proud to say that asciidoctor.js can successfully render the complete AsciiDoc User Guide (a document that has served as a compliance benchmark throughout the development of Asciidoctor).&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-scripts&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#the-scripts&quot;&gt;&lt;/a&gt;The scripts&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are two scripts generated by the Rake build that are needed to run Asciidoctor in the browser:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;opal.js&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The Ruby runtime in JavaScript&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;asciidoctor.js&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The JavaScript port of Asciidoctor&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Don&amp;#8217;t fret over the large size of these files.
We haven&amp;#8217;t even started to optimize, having only just achieved the proof of concept.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With that said, both files gzip rather nicely, bringing asciidoctor.js down from over 500K to around 90K.
There are options in Opal to generate more efficient code, but they are causing problems at the moment.
Once we sort out those issues, the size of the generated files should become quite acceptable.&lt;/p&gt;
&lt;/div&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You need to load both files into your JavaScript environment to use Asciidoctor.
For instance, in an HTML page, add these two &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags (ideally at the bottom of the page):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;html language-html&quot;&gt;&amp;lt;script src=&quot;opal.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;asciidoctor.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can see these scripts in action by running the examples, described in the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor.js#readme&quot;&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To interact with the generated code, you either:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;

&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Write code in Ruby that hooks into the native JavaScript environment, which Opal compiles into JavaScript&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Invoke the JavaScript APIs that Opal generates directly from JavaScript&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s an example that shows how Ruby can interact with the native JavaScript environment to render a string of AsciiDoc in the browser:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;data = %(= asciidoctor.js - Render AsciiDoc in your browser!
Dan Allen
2013-05-21

We've combined http://asciidoctor.org[Asciidoctor] and
http://opalrb.org[Opal] to bring AsciiDoc rendering to the browser!)

$window.addEventListener 'DOMContentLoaded', proc {
  html_doc = Asciidoctor.render(data, :safe =&amp;gt; :safe,
    :attributes =&amp;gt; %w(notitle! anchors imagesdir=./images))
  $document.getElementById('content').innerHTML = html_doc
}, false&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;changes-to-asciidoctor&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#changes-to-asciidoctor&quot;&gt;&lt;/a&gt;Changes to Asciidoctor&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the moment, some changes are necessary in Asciidoctor to get it to compile with Opal.
These changes are maintained in the asciidoctor.js branch of the Asciidoctor git repository, from which asciidoctor.js is compiled.
The goal is to eventually eliminate all of these differences so that Asciidoctor can be compiled to JavaScript as is.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;go-play&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#go-play&quot;&gt;&lt;/a&gt;Go play!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now it&amp;#8217;s time to go play with asciidoctor.js.
Explore what you can do with it and how it can be improved.
Then, get involved in either Asciidoctor or Opal to help make AsciiDoc in the browser the best it can be!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/05/17/asciidoctor-java-integration-0-1-2-1-released/</id>
<title>Asciidoctor Java integration 0.1.2.1 released!</title>
<updated>2013-05-17T20:19:10-02:00</updated>
<published>2013-05-17T20:19:10-02:00</published>
<link href="http://asciidoctor.org/news/2013/05/17/asciidoctor-java-integration-0-1-2-1-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
The Asciidoctor Java integration is the official means of using Asciidoctor to render your AsciiDoc documentation using Java instead of Ruby.


The following issues have been resolved in version 0.1.2.1:





Upgraded JRuby version to 1.7.4.
Resolves #39.


Fixed a bug with to_dir and to_file options when render method was called.
Resolves #38.


Fixed  a NPE in AsciidocDirectoryWalker class when directory was not existing.
Resolves #34.


Promoted stylesheet and stylesdir options to attributes in the fluent API.
Resolves #30.


Fixed a bug with boolean attributes (for JRuby "" is true and null is false).
Resolves #29.


Promoted linkcss option to attributes in the fluent API.
Resolves #28.


Promoted toc option to attributes in the......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; is the official means of using &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; to render your &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; documentation using Java instead of Ruby.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following issues have been resolved in version 0.1.2.1:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Upgraded JRuby version to 1.7.4.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/39&quot;&gt;#39&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed a bug with &lt;code&gt;to_dir&lt;/code&gt; and &lt;code&gt;to_file&lt;/code&gt; options when &lt;code&gt;render&lt;/code&gt; method was called.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/38&quot;&gt;#38&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed  a NPE in &lt;code&gt;AsciidocDirectoryWalker&lt;/code&gt; class when directory was not existing.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/34&quot;&gt;#34&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;stylesheet&lt;/code&gt; and &lt;code&gt;stylesdir&lt;/code&gt; options to attributes in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/30&quot;&gt;#30&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed a bug with boolean attributes (for JRuby &lt;code&gt;&quot;&quot;&lt;/code&gt; is true and &lt;code&gt;null&lt;/code&gt; is false).
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/29&quot;&gt;#29&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;linkcss&lt;/code&gt; option to attributes in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/28&quot;&gt;#28&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;toc&lt;/code&gt; option to attributes in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/27&quot;&gt;#27&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added renderFiles method which renders a list of AsciiDoc files.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/23&quot;&gt;#23&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added create method where you can pass the gem_path variable.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/22&quot;&gt;#22&lt;/a&gt;, you still need to do some work yourself for adapting to OSGi, but reflection is not required anymore.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed a bug with copycss attribute which throws a fatal error when was set with linkcss attribute.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/21&quot;&gt;#21&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added Options and Attributes class to set parameters to Asciidoctor.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/19&quot;&gt;#19&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Changed scope of gems to provided.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/18&quot;&gt;#18&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information, visit the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; project on GitHub.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/05/15/asciidoctor-maven-plugin-0-1-2-1-released/</id>
<title>Asciidoctor Maven plugin 0.1.2.1 released!</title>
<updated>2013-05-15T19:06:41-06:00</updated>
<published>2013-05-15T19:06:41-06:00</published>
<link href="http://asciidoctor.org/news/2013/05/15/asciidoctor-maven-plugin-0-1-2-1-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
Some great things have happened for the Asciidoctor Maven plugin since the last release, I&#8217;m happy to announce the release of version 0.1.2.1!


This release is still based upon the version 0.1.2 release of both the Asciidoctor Java integration project and the Asciidoctor projects.
This release contains bug fixes and a couple of new features, but is still fully compatible with the 0.1.2 release.


Plugin artifact information




 



Group ID
Artifact ID
Latest versions
Download




org.asciidoctor
asciidoctor-maven-plugin
0.1.2.1
pom jar




Upgrading to 0.1.2.1 (recommended) is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.


For more information about issues fixed in this release, please see the......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some great things have happened for the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt; since the last release, I&amp;#8217;m happy to announce the release of version 0.1.2.1!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release is still based upon the version 0.1.2 release of both the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration#readme&quot;&gt;Asciidoctor Java integration&lt;/a&gt; project and the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor&quot;&gt;Asciidoctor&lt;/a&gt; projects.
This release contains bug fixes and a couple of new features, but is still fully compatible with the 0.1.2 release.&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Plugin artifact information&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Group ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Artifact ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Latest versions&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctor-maven-plugin%22&quot;&gt;asciidoctor-maven-plugin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctor-maven-plugin%7C0.1.2.1%7Cmaven-plugin&quot;&gt;0.1.2.1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.2.1/asciidoctor-maven-plugin-0.1.2.1.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.2.1/asciidoctor-maven-plugin-0.1.2.1.jar&quot;&gt;jar&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Upgrading to 0.1.2.1 (recommended) is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information about issues fixed in this release, please see the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/issues?milestone=5&amp;amp;state=closed&quot;&gt;0.1.2.1 milestone&lt;/a&gt; in the issue tracker!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/04/28/asciidoctor-java-integration-0-1-2-released/</id>
<title>Asciidoctor Java integration 0.1.2 released!</title>
<updated>2013-04-28T23:26:10-06:00</updated>
<published>2013-04-28T23:26:10-06:00</published>
<link href="http://asciidoctor.org/news/2013/04/28/asciidoctor-java-integration-0-1-2-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
The Asciidoctor Java integration is the official means of using Asciidoctor to render all your AsciiDoc documentation using Java instead of Ruby.


In this new release, the following issues has been resolved:





Upgraded Asciidoctor gem to 0.1.2.
Resolves #17.


Reduced startup time by tuning JRuby.
Resolves #15, documented in optimization.


Renamed AsciidocDirectoryWalker class to AsciiDocDirectoryWalker to follow naming conventions.
Resolves #12.








If you&#8217;re currently using AsciidocDirectoryWalker, you&#8217;ll need to refactor your code to reflect this name change.







Promoted backend and doctype attributes to options in the fluent API.
Resolves #11.


Added a render method which takes a Reader and Writer interface as input and output content.
Resolves #9, documented in usage.


Changed Asciidoctor#renderFile......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; is the official means of using &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; to render all your &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; documentation using Java instead of Ruby.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this new release, the following issues has been resolved:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Upgraded Asciidoctor gem to 0.1.2.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/17&quot;&gt;#17&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduced startup time by tuning JRuby.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/15&quot;&gt;#15&lt;/a&gt;, documented in &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration#optimization&quot;&gt;optimization&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Renamed &lt;code&gt;AsciidocDirectoryWalker&lt;/code&gt; class to &lt;code&gt;AsciiDocDirectoryWalker&lt;/code&gt; to follow naming conventions.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/12&quot;&gt;#12&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

If you&amp;#8217;re currently using &lt;code&gt;AsciidocDirectoryWalker&lt;/code&gt;, you&amp;#8217;ll need to refactor your code to reflect this name change.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promoted &lt;code&gt;backend&lt;/code&gt; and &lt;code&gt;doctype&lt;/code&gt; attributes to options in the fluent API.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/11&quot;&gt;#11&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added a render method which takes a &lt;code&gt;Reader&lt;/code&gt; and &lt;code&gt;Writer&lt;/code&gt; interface as input and output content.
Resolves &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration/issues/9&quot;&gt;#9&lt;/a&gt;, documented in &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration#usage&quot;&gt;usage&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Changed &lt;code&gt;Asciidoctor#renderFile&lt;/code&gt; method parameter type from &lt;code&gt;java.lang.String&lt;/code&gt; to &lt;code&gt;java.io.File&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

If you&amp;#8217;re currently using the &lt;code&gt;Asciidoctor#renderFile&lt;/code&gt; method, you&amp;#8217;ll need to refactor your code to reflect this type change.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information, visit the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; project on GitHub.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/04/28/asciidoctor-maven-plugin-0-1-2-released/</id>
<title>Asciidoctor Maven plugin 0.1.2 released!</title>
<updated>2013-04-28T02:15:15-06:00</updated>
<published>2013-04-28T02:15:15-06:00</published>
<link href="http://asciidoctor.org/news/2013/04/28/asciidoctor-maven-plugin-0-1-2-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
Following the tradition of quick updates shortly after the release of Asciidoctor, I&#8217;d like to announce the release of versions 0.1.2 and 0.1.1.1 of the
Asciidoctor Maven plugin!


These releases are based on Asciidoctor 0.1.2 and 0.1.1, respectively.
Both versions of the plugin have been migrated to the newly released Asciidoctor Java integration, and thus supports all the options exposed through that library.


Plugin artifact information




 



Group ID
Artifact ID
Latest versions
Download




org.asciidoctor
asciidoctor-maven-plugin
0.1.2
pom jar


org.asciidoctor
asciidoctor-maven-plugin
0.1.1.1
pom jar




Upgrading to 0.1.2 (recommended) or 0.1.1.1 is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.


For more information about issues fixed in this release, please see......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Following the tradition of quick updates shortly after the release of &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt;, I&amp;#8217;d like to announce the release of versions 0.1.2 and 0.1.1.1 of the
&lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These releases are based on Asciidoctor 0.1.2 and 0.1.1, respectively.
Both versions of the plugin have been migrated to the newly released &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration#readme&quot;&gt;Asciidoctor Java integration&lt;/a&gt;, and thus supports all the options exposed through that library.&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Plugin artifact information&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Group ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Artifact ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Latest versions&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctor-maven-plugin%22&quot;&gt;asciidoctor-maven-plugin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctor-maven-plugin%7C0.1.2%7Cmaven-plugin&quot;&gt;0.1.2&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.2/asciidoctor-maven-plugin-0.1.2.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.2/asciidoctor-maven-plugin-0.1.2.jar&quot;&gt;jar&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctor-maven-plugin%22&quot;&gt;asciidoctor-maven-plugin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctor-maven-plugin%7C0.1.1.1%7Cmaven-plugin&quot;&gt;0.1.1.1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.1.1/asciidoctor-maven-plugin-0.1.1.1.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.1.1/asciidoctor-maven-plugin-0.1.1.1.jar&quot;&gt;jar&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Upgrading to 0.1.2 (recommended) or 0.1.1.1 is simple.
Just update the version in your Maven POM.
All necessary dependencies should be pulled in via Maven.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information about issues fixed in this release, please see the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/issues?milestone=3&amp;amp;state=closed&quot;&gt;0.1.2 milestone&lt;/a&gt; in the issue tracker!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/04/25/asciidoctor-0-1-2-released/</id>
<title>Asciidoctor 0.1.2 released!</title>
<updated>2013-04-25T20:47:32-06:00</updated>
<published>2013-04-25T20:47:32-06:00</published>
<link href="http://asciidoctor.org/news/2013/04/25/asciidoctor-0-1-2-released/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="release" />
<summary>
We&#8217;re proud to announce the release of Asciidoctor 0.1.2!


Asciidoctor is an open source text processor and publishing toolchain for converting AsciiDoc markup into HTML 5, DocBook 4.5 and other formats.


The focus of this release cycle was on:





compliance with the AsciiDoc syntax


conformance with the AsciiDoc HTML and DocBook output


shipping a default stylesheet


a new website and user documentation




The valuable feedback we&#8217;ve received has helped bring Asciidoctor to 99% compliance with the AsciiDoc syntax.
The improvements have also given Asciidoctor a 28% boost in speed, now more than 30x as fast as AsciiDoc.





Key improvements



default stylesheet

Asciidoctor now ships a default stylesheet!
This stylesheet gives documents a......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re proud to announce the release of &lt;a href=&quot;http://rubygems.org/gems/asciidoctor&quot;&gt;Asciidoctor 0.1.2&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Asciidoctor is an open source text processor and publishing toolchain for converting AsciiDoc markup into HTML 5, DocBook 4.5 and other formats.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The focus of this release cycle was on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;compliance with the AsciiDoc syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;conformance with the AsciiDoc HTML and DocBook output&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shipping &lt;a href=&quot;http://themes.asciidoctor.org/preview&quot;&gt;a default stylesheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a new &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;website&lt;/a&gt; and &lt;a href=&quot;http://asciidoctor.org/docs&quot;&gt;user documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The valuable feedback we&amp;#8217;ve received has helped bring Asciidoctor to 99% compliance with the AsciiDoc syntax.
The improvements have also given Asciidoctor a &lt;strong&gt;28% boost in speed&lt;/strong&gt;, now more than &lt;strong&gt;30x as fast&lt;/strong&gt; as AsciiDoc.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;key-improvements&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#key-improvements&quot;&gt;&lt;/a&gt;Key improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;default stylesheet&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Asciidoctor now ships a default stylesheet!
This stylesheet gives documents a unique, modern and elegant look and feel out of the box.
To learn how to use it, read the stylesheet section of &lt;a href=&quot;http://asciidoctor.org/docs/render-documents/#styles-and-attributes&quot;&gt;How do I render a document?&lt;/a&gt;.
Visit &lt;a href=&quot;http://themes.asciidoctor.org&quot;&gt;http://themes.asciidoctor.org&lt;/a&gt; to &lt;a href=&quot;http://themes.asciidoctor.org/preview&quot;&gt;a preview&lt;/a&gt; the default stylesheet and other themes created using the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-stylesheet-factory&quot;&gt;Asciidoctor stylesheet factory&lt;/a&gt;.
Resolves issues &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/76&quot;&gt;#76&lt;/a&gt; and &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/165&quot;&gt;#165&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;docinfo files&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Supplemental document header files (i.e., docinfo files) are now included in the rendered output when enabled.
These files are used to include custom content into the header of the HTML or DocBook output.
Resolves issues &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/116&quot;&gt;#116&lt;/a&gt; and &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/193&quot;&gt;#193&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;leveloffset&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The &lt;code&gt;leveloffset&lt;/code&gt; attribute is now supported.
This attribute allows several standalone documents to be combined as a master document.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/212&quot;&gt;#212&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;partial includes&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The include macro can now be used to include select regions of a file by line numbers, line ranges or tagged regions.
&lt;strong&gt;This enhancement to the include macro is unique to Asciidoctor.&lt;/strong&gt;
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/226&quot;&gt;#226&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;footnotes in embedded mode&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Footnotes are now rendered at the bottom of the output in embedded mode (when the header and footer are disabled), such as on GitHub or in a page generated by Awestruct.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/206&quot;&gt;#206&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;table of contents macro&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Support has been added for the toc macro, which allows you to place the toc anywhere in the document.
This feature makes it possible to include a toc in the document when in embedded mode, such as on GitHub or in a page generated by Awestruct.
Resolves issues &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/269&quot;&gt;#269&lt;/a&gt; and &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/221&quot;&gt;#221&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;audio and video macros&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Macros have been added to output HTML 5 audio and video tags.
These macros parallel the block image macro.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/155&quot;&gt;#155&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;safe mode and embedded attributes&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The attributes &lt;code&gt;safe-mode-level&lt;/code&gt;, &lt;code&gt;safe-mode-name&lt;/code&gt; and &lt;code&gt;safe-mode-%name%&lt;/code&gt; are now assigned to match the active safe mode.
The attribute &lt;code&gt;embedded&lt;/code&gt; is assigned to indicate the document is rendered using the embedded document template.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/244&quot;&gt;#244&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;multiple authors&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;You can now specify multiple authors in the header of the document, separated by semi-colons.
In the DocBook backend, the authors are listed in an &lt;code&gt;authorgroup&lt;/code&gt; element in the document info section.
&lt;strong&gt;This feature is unique to Asciidoctor.&lt;/strong&gt;
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/223&quot;&gt;#223&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;email macro&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The inline email address and the inline mailto macro are now recognized.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/213&quot;&gt;#213&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;secure paths&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The path resolution logic was simply too fragile as a result of relying on Ruby core libraries.
The code has been completely rewritten so that paths are properly normalized and secured, with loads of tests to back it up.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;custom block substitutions&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Substitution groups applied to block content can now be customized using the &lt;code&gt;subs&lt;/code&gt; block attribute.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/220&quot;&gt;#220&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;masquerading blocks and paragraphs&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The open block and paragraphs can now masquerade as any style of block.
Masquerading is also available for other blocks, where applicable.
This was one of the weakest areas of Asciidoctor, now fully compliant (and even a little extra).
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/187&quot;&gt;#187&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

In order to implement full support for masquerading blocks, paragraphs and custom block substitutions, the main block parsing code had to be reworked.
The refactoring not only cleaned up the code, but laid the foundation necessary to implement block filters and other extensions.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some of the improvements to Asciidoctor have resolved issues inherent in AsciiDoc.
Fortunately, AsciiDoc is configurable enough that these issues can be &quot;ported&quot; to AsciiDoc without changing the core.
We now maintain and ship an AsciiDoc configuration file, &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/blob/master/compat/asciidoc.conf&quot;&gt;asciidoc.conf&lt;/a&gt;, that makes AsciiDoc conform to Asciidoctor&amp;#8217;s behavior and enhancements.
Resolves issue &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues/257&quot;&gt;#257&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The full list of new features, enhancements and patches implemented in this release can be viewed by filtering on the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues?milestone=3&amp;amp;page=1&amp;amp;state=closed&amp;amp;sort=created&amp;amp;direction=asc&quot;&gt;0.1.2 milestone&lt;/a&gt; in the issue tracker.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-website-and-documentation&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#new-website-and-documentation&quot;&gt;&lt;/a&gt;New website and documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;You&amp;#8217;re looking at it!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the 0.1.2 release cycle, we created &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;a proper website for Asciidoctor&lt;/a&gt; and focused on getting the &lt;a href=&quot;http://asciidoctor.org/docs&quot;&gt;user documentation started&lt;/a&gt;.
Both the website and documentation are, of course, written in AsciiDoc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sarah White has taken on the initiative of untangling information in the AsciiDoc user guide and man pages and converting it to something consumable so users can get started quickly with the AsciiDoc and Asciidoctor toolchains.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I wrote up &lt;a href=&quot;http://asciidoctor.org/docs/what-is-asciidoc-why-use-it&quot;&gt;an introduction to AsciiDoc&lt;/a&gt;, &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide&quot;&gt;an AsciiDoc writer&amp;#8217;s guide&lt;/a&gt; and &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-quick-reference&quot;&gt;an AsciiDoc syntax quick reference&lt;/a&gt; to reveal the elegance of the AsciiDoc syntax and get writers the information they need to be productive and proficient with AsciiDoc.
I summarized this information in an article titled &lt;a href=&quot;https://nofluffjuststuff.com/home/magazine_renew?id=42&quot;&gt;&lt;em&gt;The Zen of Writing (Ascii)Docs&lt;/em&gt;&lt;/a&gt;, published in the April issue of NFJS, The Magazine (also produced from articles written in AsciiDoc).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Look for more details about the website and documentation in a future news post.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;thanks&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#thanks&quot;&gt;&lt;/a&gt;Thanks!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The amount of participation in the Asciidoctor project, particularly around the integrations, has increased &lt;em&gt;tremendously&lt;/em&gt; since the last release.
Asciidoctor 0.1.1 crossed the &lt;a href=&quot;http://rubygems.org/gems/asciidoctor&quot;&gt;10&lt;/a&gt; prior to this release.
We look forward to 0.1.2 breaking the next 10,000.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re very grateful to everyone who participates, especially those who contribute and spread the word :)
We&amp;#8217;d especially like to thank the following people for their contributions and feedback:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bleathem&quot;&gt;Brian Leathem&lt;/a&gt; (Clutch code reviewer)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lightguard&quot;&gt;Jason Porter&lt;/a&gt; (Maven plugin lead)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/graphitefriction&quot;&gt;Sarah White&lt;/a&gt; (Documentation and user experience)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lordofthejars&quot;&gt;Alex Soto&lt;/a&gt; (Java integration lead)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aalmiray&quot;&gt;Andres Almiray&lt;/a&gt; (Gradle plugin lead)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/glaforge&quot;&gt;Guillaume Laforge&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mstanleyjones&quot;&gt;Misty Stanley-Jones&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gAmUssA&quot;&gt;Viktor Gamov&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nawroth&quot;&gt;Anders Nawroth&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/erebor&quot;&gt;Ryan Waldron&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/paulrayner&quot;&gt;Paul Rayner&lt;/a&gt; (Guard plugin lead)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kurtstam&quot;&gt;Kurt Stam&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bmuschko&quot;&gt;Benjamin Muschko&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Together, we&amp;#8217;re making documentation easy, fun and rewarding!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/04/18/enjoy-the-magic-of-asciidoctor-in-java/</id>
<title>Enjoy the magic of Asciidoctor in Java</title>
<updated>2013-04-18T21:43:51-06:00</updated>
<published>2013-04-18T21:43:51-06:00</published>
<link href="http://asciidoctor.org/news/2013/04/18/enjoy-the-magic-of-asciidoctor-in-java/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
The Asciidoctor Java integration is the official means of using Asciidoctor to render all your AsciiDoc documentation using Java instead of Ruby.





Installation


Since asciidoctor-java-integration is a standard jar file, the only thing you should do is add library into classpath.


Dependency declaration in Maven

&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;groupId&gt;org.asciidoctor&lt;/groupId&gt;
    &lt;artifactId&gt;asciidoctor-java-integration&lt;/artifactId&gt;
    &lt;version&gt;${asciidoctor.version}&lt;/version&gt;                   1
  &lt;/dependency&gt;
&lt;/dependencies&gt;






1
As this library tracks the version of Asciidoctor, you can use which every version of Asciidoctor you prefer.







Usage


The core interface of asciidoctor-java-integration is Asciidoctor......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-java-integration&quot;&gt;Asciidoctor Java integration&lt;/a&gt; is the official means of using &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt; to render all your &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; documentation using Java instead of Ruby.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;installation&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since &lt;code&gt;asciidoctor-java-integration&lt;/code&gt; is a standard jar file, the only thing you should do is add library into classpath.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Dependency declaration in Maven&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml language-xml&quot;&gt;&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.asciidoctor&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;asciidoctor-java-integration&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${asciidoctor.version}&amp;lt;/version&amp;gt;                   &lt;i class=&quot;conum&quot;&gt;1&lt;/i&gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;

&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot;&gt;1&lt;/i&gt;&lt;/td&gt;
&lt;td&gt;As this library tracks the version of Asciidoctor, you can use which every version of Asciidoctor you prefer.&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The core interface of &lt;code&gt;asciidoctor-java-integration&lt;/code&gt; is &lt;code&gt;Asciidoctor&lt;/code&gt; interface. It provides two methods for rendering asciidoc content, &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;renderFile&lt;/code&gt;. Both of them returns a string with rendered content.&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Table 1. Method description&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:33%;&quot;&gt;
&lt;col style=&quot;width:66%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Name&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Parse the AsciiDoc content into a Document and render it to the specified backend format.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;code&gt;renderFile&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Parse the content of AsciiDoc file into a Document and render it to the specified backend format.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also a factory method is provided to create an instance of &lt;code&gt;Asciidoctor&lt;/code&gt; interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Creation of Asciidoctor interface&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;import static org.asciidoctor.Asciidoctor.Factory.create;
import org.asciidoctor.Asciidoctor;

Asciidoctor asciidoctor = create();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And then we can call &lt;code&gt;render&lt;/code&gt; methods depending on our requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Rendering a String&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;String rendered = asciidoctor.render(&quot;*This* is it.&quot;, Collections.EMPTY_MAP);
System.out.println(rendered);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But also you can render the content of a file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Rendering a File&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;String rendered = asciidoctor.renderFile(&quot;docs/sample.adoc&quot;, Collections.EMPTY_MAP);
System.out.println(rendered);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;options&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#options&quot;&gt;&lt;/a&gt;Options&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt; supports different kind of options, like &lt;code&gt;in_place&lt;/code&gt; which renders the output inside a file, &lt;code&gt;template_dir&lt;/code&gt; used to provide a directory of Tilt-compatible templates to be used instead of the default built-in templates, or for example &lt;code&gt;attributes&lt;/code&gt; option where we can set key-value pairs of attributes that will be used within asciidoc document.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The second parameter of &lt;code&gt;render&lt;/code&gt; methods are a &lt;code&gt;java.util.Map&lt;/code&gt; where we can set all these options.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Example of using in_place Option and backend Attribute&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;Map&amp;lt;String, Object&amp;gt; attributes = new HashMap&amp;lt;String, Object&amp;gt;();
attributes.put(&quot;backend&quot;, &quot;docbook&quot;);

Map&amp;lt;String, Object&amp;gt; options = new HashMap&amp;lt;String, Object&amp;gt;();
options.put(&quot;in_place&quot;, true);
options.put(&quot;attributes&quot;, attributes);

String render = asciidoctor.renderFile(&quot;docs/sample.adoc&quot;, options);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See that in previous example we have created a Map, where we have put the options and attributes (creating a Map too) required to render input as docbook and generate an output file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But &lt;code&gt;asciidoctor-java-integration&lt;/code&gt; also provides two builder classes to create these maps in a more readable form.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;AttributesBuilder&lt;/code&gt; is provided for creating a map with required attributes set, and &lt;code&gt;OptionsBuilder&lt;/code&gt; can be used for options. Previous example but using these classes looks like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Example setting attributes and options&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;import static org.asciidoctor.AttributesBuilder.attributes;
import static org.asciidoctor.OptionsBuilder.options;

...

Map&amp;lt;String, Object&amp;gt; attributes = attributes().backend(&quot;docbook&quot;).asMap();
Map&amp;lt;String, Object&amp;gt; options = options().inPlace(true).attributes(attributes).asMap();

String render = asciidoctor.renderFile(&quot;docs/sample.adoc&quot;, options);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;utilities&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#utilities&quot;&gt;&lt;/a&gt;Utilities&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A utility class for searching all asciidoc files present in a root folder and all its subfolders is given. In fact it finds all files that end up with &lt;em&gt;.asc&lt;/em&gt;, &lt;em&gt;.asciidoc&lt;/em&gt;, &lt;em&gt;.ad&lt;/em&gt; or &lt;em&gt;.adoc&lt;/em&gt;. This class is &lt;code&gt;AsciidocDirectoryWalker&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Example of finding all asciidoc&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java language-java&quot;&gt;DirectoryWalker directoryWalker = new AsciidocDirectoryWalker(&quot;docs&quot;);
List&amp;lt;File&amp;gt; asciidocFiles = directoryWalker.scan();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;contributing&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#contributing&quot;&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can contribute with patches, better documentation, feature requests, any help you&amp;#8217;re able to provide.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/04/16/introducing-the-asciidoctor-maven-plugin/</id>
<title>Introducing the Asciidoctor Maven plugin</title>
<updated>2013-04-16T16:42:55-06:00</updated>
<published>2013-04-16T16:42:55-06:00</published>
<link href="http://asciidoctor.org/news/2013/04/16/introducing-the-asciidoctor-maven-plugin/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="plugin" />
<summary>
I&#8217;d like to introduce you to the easiest way to use AsciiDoc from Maven, the Asciidoctor Maven plugin!


Plugin artifact information




 



Group ID
Artifact ID
Latest version
Download




org.asciidoctor
asciidoctor-maven-plugin
0.1.1
pom jar




This plugin is a great option for projects interested in using AsciiDoc to author documentation, or any part of this project utilizing AsciiDoc.
Best of all, it&#8217;s already available from Maven Central.





How it works


The Maven plugin loads JRuby, scans for AsciiDoc files in the specified directory, then invokes Asciidoctor to render them.
You have the option of rendering the files to HTML 5 and DocBook 4.5.





Setup and usage


Adding this plugin to your Maven POM is simple.
Just add this......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;d like to introduce you to the easiest way to use AsciiDoc from Maven, the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-all grid-all&quot; style=&quot;width:100%; &quot;&gt;
&lt;caption class=&quot;title&quot;&gt;Plugin artifact information&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;col style=&quot;width:25%;&quot;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Group ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Artifact ID&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Latest version&lt;/th&gt;
&lt;th class=&quot;tableblock halign-left valign-top&quot;&gt;Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;org.asciidoctor&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.asciidoctor%22%20AND%20a%3A%22asciidoctor-maven-plugin%22&quot;&gt;asciidoctor-maven-plugin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/#artifactdetails%7Corg.asciidoctor%7Casciidoctor-maven-plugin%7C0.1.1%7Cmaven-plugin&quot;&gt;0.1.1&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;&lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.1/asciidoctor-maven-plugin-0.1.1.pom&quot;&gt;pom&lt;/a&gt; &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/asciidoctor/asciidoctor-maven-plugin/0.1.1/asciidoctor-maven-plugin-0.1.1.jar&quot;&gt;jar&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This plugin is a great option for projects interested in using AsciiDoc to author documentation, or any part of this project utilizing AsciiDoc.
Best of all, it&amp;#8217;s already available from Maven Central.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#how-it-works&quot;&gt;&lt;/a&gt;How it works&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Maven plugin loads JRuby, scans for AsciiDoc files in the specified directory, then invokes &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; to render them.
You have the option of rendering the files to HTML 5 and DocBook 4.5.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;setup-and-usage&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#setup-and-usage&quot;&gt;&lt;/a&gt;Setup and usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Adding this plugin to your Maven POM is simple.
Just add this plugin declaration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;pom.xml fragment: Asciidoctor Maven plugin configuration&lt;/div&gt;
&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml language-xml&quot;&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.asciidoctor&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;asciidoctor-maven-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;0.1.1&amp;lt;/version&amp;gt;
  &amp;lt;executions&amp;gt;
    &amp;lt;execution&amp;gt;
      &amp;lt;id&amp;gt;render-asciidoc&amp;lt;/id&amp;gt;
      &amp;lt;phase&amp;gt;generate-resources&amp;lt;/phase&amp;gt;
      &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;process-asciidoc&amp;lt;/goal&amp;gt;
      &amp;lt;/goals&amp;gt;
    &amp;lt;/execution&amp;gt;
  &amp;lt;/executions&amp;gt;
  &amp;lt;configuration&amp;gt;
      &amp;lt;sourceDirectory&amp;gt;docs&amp;lt;/sourceDirectory&amp;gt;
      &amp;lt;outputDirectory&amp;gt;target/docbook/en-US&amp;lt;/outputDirectory&amp;gt;
      &amp;lt;backend&amp;gt;docbook&amp;lt;/backend&amp;gt;
  &amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Execution is handled by Maven when you execute a build.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find more detailed information about setup and usage in the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin#readme&quot;&gt;README&lt;/a&gt; located in the &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;project&amp;#8217;s repository on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;versioning&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#versioning&quot;&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The version of the Maven plugin will track the version of Asciidoctor.
In most cases, the version number will match the Asciidoctor version (e.g., 0.1.1).
If an interim fix needs to be made to the plugin, an additional number will be added to the end of the Asciidoctor version number (e.g., 0.1.1.1).&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#future&quot;&gt;&lt;/a&gt;Future&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently, the plugin uses its own JRuby integration to invoke Asciidoctor (which is written in Ruby).
The next version (&lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin/issues&quot;&gt;roadmap&lt;/a&gt;) will use the newly-released Asciidoctor Java integration to streamline the hand off and simplify maintenance of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In conjunction with the change to use the Asciidoctor Java integration internally, new configuration options will be added.
One of those options will allow you to pass AsciiDoc attributes to the renderer.
AsciiDoc attributes control options such as adding a table of contents, turning on section numbering and configuring the source highlighter.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;contributing&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#contributing&quot;&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re always open for patches, better documentation, feature requests, evangelizing or any help you&amp;#8217;re able to provide.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/04/08/a-new-resource-for-asciidoc/</id>
<title>A new resource for AsciiDoc</title>
<updated>2013-04-08T14:39:25-06:00</updated>
<published>2013-04-08T14:39:25-06:00</published>
<link href="http://asciidoctor.org/news/2013/04/08/a-new-resource-for-asciidoc/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="website" />
<summary>
AsciiDoc is an excellent tool for writing documentation, but there&#8217;s simply not enough information about it.


Today, I&#8217;m excited to announce a new resource for AsciiDoc, asciidoctor.org.
In addition to serving as the project page for the Asciidoctor project and its integrations, this website helps promote AsciiDoc through education and advocacy.





The dawn of a new era Photo credit: bartvandorp


The key highlight of the site is a collection of new AsciiDoc guides:





What is AsciiDoc? Why do we need it?


AsciiDoc Syntax Quick Reference


AsciiDoc Writer&#8217;s Guide




The purpose of these guides is to answer your questions about AsciiDoc and get you familiar with the syntax quickly.
They......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;AsciiDoc is an excellent tool for writing documentation, but there&amp;#8217;s simply not enough information about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today, I&amp;#8217;m excited to announce a new resource for AsciiDoc, &lt;a href=&quot;http://asciidoctor.org&quot;&gt;asciidoctor.org&lt;/a&gt;.
In addition to serving as the project page for the &lt;a href=&quot;http://github.com/asciidoctor&quot;&gt;Asciidoctor project&lt;/a&gt; and its integrations, this website helps promote AsciiDoc through education and advocacy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock feature right&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://asciidoctor.org/images/dawn.jpg&quot; alt=&quot;dawn&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;The dawn of a new era &lt;span class=&quot;credit&quot;&gt;Photo credit: &lt;a href=&quot;http://www.flickr.com/photos/bartvandorp/8593385822&quot;&gt;bartvandorp&lt;/a&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The key highlight of the site is a collection of new AsciiDoc guides:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoctor.org/docs/what-is-asciidoc-why-use-it/&quot;&gt;What is AsciiDoc? Why do we need it?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-quick-reference/&quot;&gt;AsciiDoc Syntax Quick Reference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-writers-guide/&quot;&gt;AsciiDoc Writer&amp;#8217;s Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The purpose of these guides is to answer your questions about AsciiDoc and get you familiar with the syntax quickly.
They present AsciiDoc by following a recommended set of conventions to help you create more consistent documents and maximize your writing productivity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you see a change you want to make, &lt;strong&gt;contributing to the guides is easy!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The guides are written in AsciiDoc and &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor.github.com&quot;&gt;hosted on GitHub&lt;/a&gt;.
If you see a change you want to make in one of the guides, just look for the &lt;strong&gt;Edit&lt;/strong&gt; button in the right-hand column and click on it.
That will take you to an editor on GitHub where you can make the change and submit it as a pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alternatively, you can clone the project, make the change locally, commit it, then send a pull request in the usual way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once the change is merged into the &lt;code&gt;develop&lt;/code&gt; branch, it gets published automatically.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I hope you find the guides useful, and I look forward to your feedback.
Together, we can take the agony out of writing documentation!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
<entry>
<id>http://asciidoctor.org/news/2013/01/30/asciidoc-returns-to-github/</id>
<title>AsciiDoc, powered by Asciidoctor, returns to GitHub and its 5+ million repositories</title>
<updated>2013-01-30T09:30:00-07:00</updated>
<published>2013-01-30T09:30:00-07:00</published>
<link href="http://asciidoctor.org/news/2013/01/30/asciidoc-returns-to-github/" rel="alternate" type="text/html" />
<category scheme="http://asciidoctor.org/news/tags" term="announcement" />
<category scheme="http://asciidoctor.org/news/tags" term="github" />
<summary>
Since early December and throughout the holidays, GitHub&#8217;s Ryan Waldron, Red Hat&#8217;s Dan Allen and other contributors have collaborated on Asciidoctor (project site, code repository), a new open source implementation of AsciiDoc written purely in Ruby[1].


The implementation kicked off with two core goals in mind:





Improve the rendering of AsciiDoc source files in git repositories and gists on GitHub


Bring AsciiDoc to the Ruby world by offering the first compliant Ruby port of the markup language




After a lot of hard work and a thorough security audit, we&#8217;re thrilled to announce that&#8230;









Asciidoctor is now deployed to render AsciiDoc markup in any of the......
</summary>
<content type="html">
&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since early December and throughout the holidays, GitHub&amp;#8217;s &lt;a href=&quot;https://github.com/erebor&quot;&gt;Ryan Waldron&lt;/a&gt;, Red Hat&amp;#8217;s &lt;a href=&quot;https://github.com/mojavelinux&quot;&gt;Dan Allen&lt;/a&gt; and &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/graphs/contributors&quot;&gt;other contributors&lt;/a&gt; have collaborated on &lt;strong&gt;Asciidoctor&lt;/strong&gt; (&lt;a href=&quot;http://asciidoctor.org&quot;&gt;project site&lt;/a&gt;, &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor&quot;&gt;code repository&lt;/a&gt;), a new open source implementation of AsciiDoc written purely in Ruby&lt;span class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_1&quot; class=&quot;footnote&quot; href=&quot;#_footnote_1&quot; title=&quot;View footnote.&quot;&gt;1&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The implementation kicked off with two core goals in mind:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;

&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Improve the rendering of AsciiDoc source files in git repositories and gists on GitHub&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bring AsciiDoc to the Ruby world by offering the first compliant Ruby port of the markup language&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After a lot of hard work and a thorough security audit, we&amp;#8217;re &lt;em&gt;thrilled&lt;/em&gt; to announce that&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note lead&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

&lt;strong&gt;Asciidoctor is now deployed&lt;/strong&gt; to render AsciiDoc markup in any of the &lt;strong&gt;5 million+ repositories&lt;/strong&gt; on GitHub.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Asciidoctor 0.1.0 is also available on &lt;a href=&quot;https://rubygems.org/gems/asciidoctor&quot;&gt;rubygems.org&lt;/a&gt; and can be installed locally via RubyGems (&lt;code&gt;gem install asciidoctor&lt;/code&gt;).&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;about-asciidoc&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#about-asciidoc&quot;&gt;&lt;/a&gt;About AsciiDoc&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc&lt;/a&gt; is a lightweight markup language akin to &lt;a href=&quot;http://github.github.com/github-flavored-markdown&quot;&gt;Markdown&lt;/a&gt;. Going beyond Markdown, AsciiDoc supports all the structural elements necessary for drafting articles, technical manuals and books. Several O&amp;#8217;Reilly authors, including &lt;a href=&quot;https://github.com/matthewmccullough&quot;&gt;Matthew McCullough&lt;/a&gt;, &lt;a href=&quot;https://github.com/tlberglund&quot;&gt;Tim Berglund&lt;/a&gt; and &lt;a href=&quot;http://www.apeth.net/matt/iosbooktoolchain.html&quot;&gt;Matt Neuburg&lt;/a&gt;, have used it to write books for that iconic technical library. AsciiDoc is fully capable of serving as a shorthand replacement for &lt;a href=&quot;http://www.docbook.org/whatis&quot;&gt;DocBook&lt;/a&gt;, which it can also output.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;

&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;DocBook is nice, but (like XML) it is not meant for editing nor for merging changes (by humans). Using AsciiDoc (which translates to DocBook perfectly) is a much easier way of developing.&lt;/p&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
&amp;#8212; Dag Wieers
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One way to think of the relationship between AsciiDoc and DocBook is that AsciiDoc is to DocBook as &lt;a href=&quot;http://relaxng.org/compact-tutorial-20030326.html#id2814005&quot;&gt;RelaxNG Compact&lt;/a&gt; is to XML Schema. With AsciiDoc, you drop the angled-brackets (i.e., XML), but not the semantics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s an example of a document written in AsciiDoc, shown above the output it produces:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;(You don&amp;#8217;t want to see how the DocBook looks for this example. Let&amp;#8217;s just say, there isn&amp;#8217;t enough room on the screen to show it to you.)&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&quot;tableblock frame-topbot grid-none&quot; style=&quot;width:100%; &quot;&gt;
&lt;colgroup&gt;&lt;col style=&quot;width:100%;&quot;&gt;&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock header&quot;&gt;Source document&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;div&gt;
&lt;div class=&quot;listingblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;asciidoc language-asciidoc&quot;&gt;= Asciidoctor
Ryan Waldron, Dan Allen

http://asciidoctor.org[Asciidoctor] is a native Ruby processor
for converting AsciiDoc source files and strings into HTML 5,
DocBook 4.5 and other formats.

== Installation

You can install the Asciidoctor RubyGem using the +gem+ command:

 gem install asciidoctor

On Fedora, you can install via an RPM package
(https://bugzilla.redhat.com/show_bug.cgi?id=889011[pending])
using the +yum+ command:

 yum install rubygem-asciidoctor

Now you are ready to start using Asciidoctor!

== Benefits

Asciidoctor is:

* compliant
* fast
* secure
* stable

'Give it a try!'&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;p class=&quot;tableblock header&quot;&gt;Rendered HTML Output&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;div&gt;
&lt;h1&gt;Asciidoctor&lt;/h1&gt;
&lt;span id=&quot;author&quot;&gt;Ryan Waldron, Dan Allen&lt;/span&gt;&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; is a native Ruby processor
for converting AsciiDoc source files and strings into HTML 5,
DocBook 4.5 and other formats.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;installation&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can install the Asciidoctor RubyGem using the &lt;code&gt;gem&lt;/code&gt;
command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;gem install asciidoctor&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On Fedora, you can install via an RPM package
(&lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=889011&quot;&gt;pending&lt;/a&gt;)
using the &lt;code&gt;yum&lt;/code&gt; command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;

&lt;div class=&quot;content monospaced&quot;&gt;
&lt;pre&gt;yum install rubygem-asciidoctor&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now you are ready to start using Asciidoctor!&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;benefits&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#benefits&quot;&gt;&lt;/a&gt;Benefits&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;compliant&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fast&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;secure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;stable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Give it a try!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;http://asciidoc.org&quot;&gt;AsciiDoc project&lt;/a&gt;, written in Python, was the only implementation of the AsciiDoc syntax&amp;#8230;until the arrival of &quot;the doctor&quot;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-asciidoctor-implementation&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#the-asciidoctor-implementation&quot;&gt;&lt;/a&gt;The Asciidoctor implementation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;AsciiDoctor is the first project to implement the AsciiDoc syntax in another language, in this case Ruby. It&amp;#8217;s an open source library (MIT licensed) published as a RubyGem to &lt;a href=&quot;http://rubygems.org/gems/asciidoctor&quot;&gt;rubygems.org&lt;/a&gt;. The project recently moved to the &lt;a href=&quot;https://github.com/asciidoctor&quot;&gt;Asciidoctor organization on GitHub&lt;/a&gt; to sustain its rapid growth.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While Asciidoctor aims to offer full compliance with the AsciiDoc syntax (with some exceptions, noted in the project &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor#readme&quot;&gt;README&lt;/a&gt;), it&amp;#8217;s more than just a clone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Built-in and custom templates&lt;/div&gt;
&lt;p&gt;Asciidoctor uses a set of built-in ERB templates to generate HTML 5 and DocBook 4.5 output that is structurally equivalent to what AsciiDoc produces. Any of these templates can be replaced by a custom template written in any template language available in the Ruby ecosystem. Custom template rendering is handled by the &lt;a href=&quot;https://github.com/rtomayko/tilt&quot;&gt;Tilt&lt;/a&gt; template abstraction library, a project created by another GitHubber, &lt;a href=&quot;https://github.com/rtomayko&quot;&gt;Ryan Tomayko&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Parser and object model&lt;/div&gt;
&lt;p&gt;Leveraging the Ruby stack isn&amp;#8217;t the only benefit of Asciidoctor. Unlike the AsciiDoc Python implementation, Asciidoctor parses and renders the source document in discrete steps. This makes rendering the document optional and gives Ruby programs the opportunity to extract, add or replace information in the document by interacting with the document object model Asciidoctor assembles. Developers can use the full power of the Ruby programming language to play with the content in the document.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Performance and security&lt;/div&gt;
&lt;p&gt;No coverage of Asciidoctor would be complete without mention of its &lt;em&gt;speed&lt;/em&gt;. Despite not being an original goal of the project, Asciidoctor has proven startlingly fast. It loads, parses and renders documents at least &lt;strong&gt;25 times as fast&lt;/strong&gt; as the Python implementation. That&amp;#8217;s good news for developer productivity and good news for GitHub or any server-side application that needs to render AsciiDoc markup. Asciidoctor also offers several levels of security, further justifying its suitability for server-side deployments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Beyond Ruby&lt;/div&gt;
&lt;p&gt;Asciidoctor&amp;#8217;s usage is not limited to the Ruby community. Thanks to &lt;a href=&quot;http://jruby.org&quot;&gt;JRuby&lt;/a&gt;, a port of Ruby to the JVM, Asciidoctor can be used inside Java applications as well (and eventually in Java build tools like Apache Maven). Asciidoctor also ships with a command-line interface (cli), written by Red Hat&amp;#8217;s &lt;a href=&quot;http://github.com/LightGuard&quot;&gt;Jason Porter&lt;/a&gt;. The Asciidoctor cli, &lt;a href=&quot;http://asciidoctor.org/man/asciidoctor&quot;&gt;&lt;code&gt;asciidoctor&lt;/code&gt;&lt;/a&gt;, is a drop-in replacement for the &lt;code&gt;asciidoc.py&lt;/code&gt; script from the AsciiDoc Python distribution.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-future-of-asciidoctor-and-asciidoc&quot;&gt;
&lt;a class=&quot;anchor&quot; href=&quot;#the-future-of-asciidoctor-and-asciidoc&quot;&gt;&lt;/a&gt;The future of Asciidoctor and AsciiDoc&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The future is bright for AsciiDoc. Despite being a seasoned, 10-year-old markup language, adoption of AsciiDoc has never been stronger. The developers have lots of &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues?state=open&quot;&gt;ideas&lt;/a&gt; about how to improve and extend Asciidoctor, some of which push beyond the AsciiDoc syntax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you&amp;#8217;re interested in using AsciiDoc, head over to &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt; and create a new file in one of your repositories or gists using the file extension &lt;code&gt;.asciidoc&lt;/code&gt; or &lt;code&gt;.adoc&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you&amp;#8217;re interested in contributing to Asciidoctor, in turn helping to move AsciiDoc forward, your &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor/issues&quot;&gt;participation and feedback&lt;/a&gt; is welcome!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Write docs with pleasure!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;

This article was composed in AsciiDoc and rendered using Asciidoctor.
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnote_1&quot;&gt;
    &lt;a href=&quot;#_footnoteref_1&quot;&gt;1&lt;/a&gt;. The Asciidoctor code base emerged from a prototype that GitHub developers created last year to produce the &lt;a href=&quot;http://git-scm.com/docs/git-init&quot;&gt;git man pages&lt;/a&gt; shown on the &lt;a href=&quot;http://git-scm.com&quot;&gt;git website&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
</content>
</entry>
</feed>
